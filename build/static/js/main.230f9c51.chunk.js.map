{"version":3,"sources":["logo.svg","util/formUtil.js","util/fetchUtil.js","Enums/DisplayStates.js","ContainerComponents/NoteContainer.js","ListComponents/NoteList.js","BranchComponents/Event.js","InputComponents/TextInput.js","InputComponents/PasswordInput.js","InputComponents/ResetInput.js","InputComponents/CheckboxInput.js","InputComponents/SubmitInput.js","InputComponents/ButtonInput.js","InputComponents/DateInput.js","InputComponents/EmailInput.js","InputComponents/NumberInput.js","InputComponents/TimeIntervalInput.js","Enums/InputTypes.js","FormComponents/FormBuilder.js","FormComponents/EventForm.js","DisplayComponents/LoadingGif.js","ApiCallFunctions/ApiCalls.js","ApiCallFunctions/TaskApiCalls.js","ListActions/ModifyListActions.js","ApiCallFunctions/EventApiCalls.js","ListActions/ModifyEventListActions.js","ObjectClasses/EventObject.js","ContainerComponents/EventContainer.js","ListComponents/EventList.js","BranchComponents/Task.js","FormComponents/TaskForm.js","ObjectClasses/TaskObject.js","ListActions/ModifyTaskListActions.js","ContainerComponents/TaskContainer.js","ListComponents/TaskList.js","BranchComponents/Category.js","ApiCallFunctions/CategoryApiCalls.js","FormComponents/CategoryForm.js","ListActions/ModifyCategoryListActions.js","ContainerComponents/CategoryContainer.js","ListComponents/CategoryList.js","FormComponents/LoginForm.js","UserContext.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","formInputsToObject","form","inputs","Array","from","querySelectorAll","newObj","forEach","input","type","name","checked","value","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","NoteContainer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Component","NoteList","addNote","setState","addNewNoteTrue","toConsumableArray","concat","_this2","noteListData","className","id","catId","noteId","ContainerComponents_NoteContainer","xAccessToken","modifyListActions","Event","displayState","date","length","completed","prqTasks","ListComponents_TaskList","prqEvents","ListComponents_EventList","notes","ListComponents_NoteList","TextInput","event","target","Fragment","assign","toLowerCase","onChange","handleChange","bind","attributes","PasswordInput","ResetInput","action","preventDefault","onClick","handleClick","CheckboxInput","handleCheck","SubmitInput","ButtonInput","DateInput","Date","getDate","EmailInput","NumberInput","TimeIntervalInput","InputTypes","TEXT","PASSWORD","SUBMIT","RESET","CHECKBOX","BUTTON","DATE","EMAIL","NUMBER","TIMEINTERVAL","FormBuilder","inputFields","propsWithKey","_id","content","React","EventForm","submitAction","document","getElementById","formData","taskJson","FormComponents_FormBuilder","handlers","ComponentName","ApiCalls","routeString","createObject","parentType","parentId","jsonString","JSON","stringify","responseData","modifyObject","toString","getObject","objId","deleteObject","responseDate","rebaseObject","newParentType","newParentId","TaskApiCalls","getTask","taskId","get","prototype","assertThisInitialized","modifyTask","modifiedTask","deleteTask","createTask","newTask","rebaseTask","ModifyListActions","apiCallObject","setStateCallback","addItem","returnedTask","deleteItem","returnedObject","EventApiCalls","getEvent","eventId","modifyEvent","modifiedEvent","deleteEvent","createEvent","newEvent","rebaseEvent","ModifyEventListActions","EventObject","dateTime","prqTask","parent","prevDates","accoundId","accountId","EventContainer","expandCollapse","update","taskApiCalls","returnedEvent","modify","task","undefined","FormComponents_EventForm","BranchComponents_Event","buttonAction","editAction","LoadingGif","addEvent","EventList","addNewEventTrue","eventListData","evtId","ContainerComponents_EventContainer","Task","description","deadline","startDate","external","estTime","subTasks","events","class","src","TaskForm","TaskObject","prqEvent","ModifyTaskListActions","TaskContainer","FormComponents_TaskForm","BranchComponents_Task","addTask","TaskList","addNewTaskTrue","taskListData","ContainerComponents_TaskContainer","Category","_React$createElement","tasks","defineProperty","CategoryApiCalls","getCategory","modifyCategory","modifiedCategory","deleteCategory","categoryId","addCategory","category","returnedData","CategoryForm","categoryJson","ModifyCategoryListActions","CategoryContainer","categoryApiCalls","returnedCategory","FormComponents_CategoryForm","BranchComponents_Category","CategoryList","categories","fetchOptions","x-access-token","cat","ContainerComponents_CategoryContainer","LoginForm","username","password","handleSubmit","login","UserContext","createContext","UserProvider","Provider","User","Consumer","apiUrl","uiUrl","ListComponents_CategoryList","FormComponents_LoginForm","App","src_User","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.230f9c51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    },\n\n    formInputsToObject:(form)=>{\n        const inputs = Array.from(form.querySelectorAll(\"input\"));\n        let newObj = {};\n        inputs.forEach((input)=>{\n            if(input.type===\"checkbox\") {\n                newObj[input.name]=(input.checked===\"checked\");\n            } else {\n                newObj[input.name] = input.value;\n\n            }\n        });\n        return newObj;\n    }\n};\n\n\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      //return \"http://localhost:3434/\";\n      return \"https://insolent-preclude.herokuapp.com/\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, null, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n\n\n        const headers = new Headers(\n            method==='get'?{}:{\n                'Content-Type': route==='account/login'?'application/x-www-form-urlencoded':'application/json'\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import React, {Component} from 'react';\n//todo 190105: make note container\n\nclass NoteContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return <div></div>\n    }\n}\n\nexport default NoteContainer;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport NoteContainer from \"../ContainerComponents/NoteContainer\";\n\nclass NoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addNote: false\n        };\n    }\n\n    addNote = ()=>this.setState({addNote:true});\n    //null eventId will create a new event\n    addNewNoteTrue= data=>{\n        return [...data, null];\n    }\n\n    render() {\n        const noteListData = this.state.addNote?\n            this.props.data:\n            this.addNewNoteTrue(this.props.data);\n        return (\n            <div className='noteList' id={this.props.catId + 'NoteList'}>\n                {\n                    noteListData.map(\n                        noteId => {\n                            return <NoteContainer\n                                id={noteId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport TaskList from \"../ListComponents/TaskList\";\nimport NoteList from \"../ListComponents/NoteList\";\nimport EventList from \"../ListComponents/EventList\";\n\n\nfunction Event(props) {\n    return (\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Date : {props.data.date}\n                </div>\n                <div className='property'>\n                    Length : {props.data.length}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList\n                                data = {props.data.notes}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Event;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TextInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='text'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TextInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass PasswordInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='password'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange = {this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default PasswordInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ResetInput extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='reset'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResetInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass CheckboxInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            checked:this.props.checked?this.state.checked:false\n        }\n    }\n\n    //not tested yet might not work\n    handleCheck(event){\n        this.setState({checked:event.target.checked})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='checkbox'\n                        name={this.props.name.toLowerCase()}\n                        checked = {this.state.checked}\n                        onChange={this.handleCheck.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass SubmitInput extends Component{\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                    <input\n                        type='submit'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n             </React.Fragment>\n        );\n    }\n}\n\nexport default SubmitInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ButtonInput extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='button'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ButtonInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass DateInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n\n            value:this.props.value instanceof Date?this.props.value.getDate():new Date(this.props.value).getDate()\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}::\n                    <input\n                        type='date'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DateInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass EmailInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='email'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EmailInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass NumberInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.props.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NumberInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TimeIntervalInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </fragment>\n        );\n    }\n}\n\nexport default TimeIntervalInput;","import TextInput from '../InputComponents/TextInput';\nimport PasswordInput from '../InputComponents/PasswordInput';\nimport ResetInput from '../InputComponents/ResetInput';\nimport CheckboxInput from '../InputComponents/CheckboxInput';\nimport SubmitInput from '../InputComponents/SubmitInput';\nimport ButtonInput from '../InputComponents/ButtonInput';\nimport DateInput from '../InputComponents/DateInput';\nimport EmailInput from '../InputComponents/EmailInput';\nimport NumberInput from '../InputComponents/NumberInput';\nimport TimeIntervalInput from '../InputComponents/TimeIntervalInput'\n\nconst InputTypes = Object.freeze({\n    TEXT: TextInput,\n    PASSWORD: PasswordInput,\n    SUBMIT: SubmitInput,\n    RESET: ResetInput,\n    CHECKBOX: CheckboxInput,\n    BUTTON: ButtonInput,\n    DATE: DateInput,\n    EMAIL: EmailInput,\n    NUMBER: NumberInput,\n    TIMEINTERVAL: TimeIntervalInput\n});\n\n\n\nexport default InputTypes;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass FormBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n\n    }\n\n\n    render() {\n         return <form id={this.props.id}>\n            {\n\n                this.props.inputFields.map(input=>{\n                    const propsWithKey = Object.assign({\n                        key:\"\" + this.props.data._id + input.props.name,\n                        value: this.props.data[input.props.name]}\n                        ,input.props);\n                    return input.content?\n                        React.createElement(input.type, propsWithKey,input.content):\n                        React.createElement(input.type, propsWithKey);\n                })\n            }\n        </form>\n    }\n}\n\nexport default FormBuilder;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport formUtil from '../util/formUtil'\n\nclass EventForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'date'}, type: InputTypes.DATE},\n                {props: {name: 'length'}, type: InputTypes.NUMBER},\n            ],\n        };\n    }\n\n    //fixme: (done?)'external' is \"on\" when it should be \"true\"\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const taskJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(taskJson)\n\n    }\n\n\n    render() {\n        return <div className=\"eventInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\nexport default EventForm;\n","import React from \"react\";\n\n\nfunction ComponentName(props) {\n    return (\n        <div>\n            Loading gif...\n        </div>\n    );\n}\n\nexport default ComponentName;","import fetchUtil from '../util/fetchUtil'\n\n\nclass ApiCalls {\n    constructor(routeString){\n        this.routeString = routeString;\n    }\n    /**\n     * Create object\n     * @param obj: the object to create\n     * @param parentType: \"Task\", \"Category\" or \"Event\"\n     * @param parentId: the id of the parent\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     * @returns {*|void}\n     */\n    createObject = (obj, parentType, parentId, token, callback)=>{\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.postData(\n            `${this.routeString}/${parentType}/${parentId}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n    /**\n     * Modify object\n     * @param obj: the modified version of obj\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     * @returns {*|void}\n     */\n\n    modifyObject= (obj, token, callback)=> {\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.putData(\n            `${this.routeString}/${obj._id.toString()}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n\n    /**\n     * Get object\n     * @param objId: the id to get\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     * @returns {*|void}\n     */\n\n    getObject= (objId, token, callback)=>{\n        const route = `${this.routeString}/${objId}`;\n        fetchUtil.getData(\n            route,\n            token,\n            responseData => {\n                callback(responseData);\n            }\n\n        );\n\n    }\n    /**\n     * Delete object\n     * @param objId: the id to delete\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     * @returns {*|void}\n     */\n    deleteObject=(objId, token, callback)=>{\n        fetchUtil.deleteData(\n            `${this.routeString}/${objId}`,\n            token,\n            responseDate=>callback(responseDate))\n    }\n\n    /**\n     * rebase object\n     * @param id: the id to rebase\n     * @param newParentType: type of parent to rebase to\n     * @param newParentId: id of new parent\n     * @param token: xAccessToken\n     * @param callback: calback after task is created\n     * @returns {*|void}\n     */\n    rebaseObject=(id,newParentType,newParentId,token,callback)=>fetchUtil.patchData(\n        `${this.routeString}/id`,\n        token,\n        JSON.stringify({newParentType:newParentType,parentId:newParentId}),\n        callback\n    )\n\n}\n\nexport default ApiCalls","import ApiCalls from \"./ApiCalls\";\n\n\nclass TaskApiCalls extends ApiCalls{\n    constructor(){\n        super('task');\n    }\n    getTask= (taskId,token, callback)=>super.getObject(taskId, token,callback);\n    modifyTask=(modifiedTask,token,callback)=>super.modifyObject(modifiedTask,token,callback);\n    //TODO 190118: need to change the delete because it needs to ask if children will be deleted or rebased\n    deleteTask=(taskId,token, callback)=>super.deleteObject(taskId,token,callback);\n    createTask=(newTask, parentType, parentId, token, callback)=>super.createObject(newTask,parentType,parentId,token,callback);\n    rebaseTask=(taskId,newParentType,newParentId,token,callback)=>super.rebaseObject(taskId,newParentType,newParentId,token,callback);\n}\n\nexport default TaskApiCalls;","import TaskApiCalls from \"../ApiCallFunctions/TaskApiCalls\";\n\n\nclass ModifyListActions{\n    constructor(parentType,parentId,token, apiCallObject, setStateCallback){\n        this.addItem= (obj) =>  apiCallObject.createObject(\n                obj,\n                parentType,\n                parentId,\n                token,\n                returnedTask => setStateCallback(returnedTask)\n        );\n\n\n        this.deleteItem = (objId) => apiCallObject.deleteObject(\n            objId,\n            token,\n            returnedObject=>setStateCallback(returnedObject)\n        )\n\n\n    }\n    \n}\n\nexport default ModifyListActions;","import ApiCalls from \"./ApiCalls\";\n\n\nclass EventApiCalls extends ApiCalls{\n    constructor(){\n        super('event')\n    }\n    getEvent= (eventId,token, callback)=>super.getObject(eventId, token,callback);\n    modifyEvent=(modifiedEvent,token,callback)=>super.modifyObject(modifiedEvent,token,callback);\n    deleteEvent=(eventId,token, callback)=>super.deleteObject(eventId,token,callback);\n    createEvent=(newEvent, parentType, parentId, token, callback)=>super.createObject(newEvent,parentType,parentId,token,callback);\n    rebaseEvent=(eventId, newParentType, newParentId, token, callback)=>super.rebaseObject(eventId,newParentType,newParentId,token,callback);\n}\n\nexport default EventApiCalls;","import ModifyListActions from \"./ModifyListActions\";\nimport EventApiCalls from \"../ApiCallFunctions/EventApiCalls\";\n\nclass ModifyEventListActions extends ModifyListActions{\n    constructor(parentId,token, setStateCallback){\n        super(\"event\",parentId,token,EventApiCalls,setStateCallback);\n    }\n}\n\nexport default ModifyEventListActions;","class EventObject{\n   constructor(name,\n               dateTime,\n               length,\n               notes,\n               prqTask,\n               prqEvents,\n               parent,\n               parentType,\n               completed,\n               prevDates,\n               accoundId){\n       this.name = name?name:\"\";\n       this.dateTime = dateTime?dateTime:new Date();\n       this.length = length?length:0;\n       this.notes = notes?notes:[];\n       this.prqTask = prqTask?prqTask:[];\n       this.prqEvents = prqEvents?prqEvents:[];\n       this.parent = parent?parent:0;\n       this.completed = completed?completed:false;\n       this.prevDates = prevDates?prevDates:[];\n       this.accountId = accoundId?accoundId:0;\n\n   }\n\n}\n\nexport default EventObject;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Event from \"../BranchComponents/Event\";\nimport EventForm from \"../FormComponents/EventForm\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport ModifyEventListActions from \"../ListActions/ModifyEventListActions\";\nimport EventApiCalls from \"../ApiCallFunctions/EventApiCalls\";\nimport EventObject from '../ObjectClasses/EventObject'\n\nclass EventContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            event: undefined,\n            taskApiCalls: new EventApiCalls()\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.taskApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedEvent) => this.setState({event: returnedEvent}))\n    };\n\n\n    modify =(modifiedEvent) =>{\n        this.state.taskApiCalls.modifyObject(modifiedEvent,this.props.xAccessToken,(returnedEvent) => {\n                this.setState({task: returnedEvent, displayState: DisplayStates.EXPANDED})\n            }\n        );\n    };\n\n    render() {\n        if (this.state.event) {\n            const modifyListActions = new ModifyEventListActions(\n                this.state.event._id,\n                this.props.xAccessToken,\n                this.update\n            )\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <EventForm data={this.state.event} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Event\n                        data={this.state.event}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        modifyListActions = {modifyListActions}\n                    />\n            )\n        } else if(!this.props.id){\n            return <EventForm data={new EventObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addEvent}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default EventContainer;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport Event from \"../BranchComponents/Event\";\nimport TaskContainer from \"../ContainerComponents/TaskContainer\";\nimport EventContainer from \"../ContainerComponents/EventContainer\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEvent: false\n        };\n    }\n\n    addEvent = ()=>this.setState({addNote:true});\n    //null eventId will create a new event\n    addNewEventTrue=data=>{\n        return [...data, null];\n    }\n\n    render() {\n        const eventListData = this.state.addNote?\n            this.props.data:\n            this.addNewEventTrue(this.props.data)\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    eventListData.map(\n                        evtId => {\n                            return <EventContainer\n                                id={evtId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React from \"react\";\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport NoteList from \"../ListComponents/NoteList\";\n\nfunction Task(props) {\n\n\n    return <div className='task ' id={props.data._id}>\n        <div className='collapser'>\n            <button onClick={props.buttonAction}>\n                {props.displayState === DisplayStates.EXPANDED ? '-' : '+'}\n            </button>\n        </div>\n\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Description : {props.data.description}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                <div className='property'>\n                    Deadline : {props.data.deadline}\n                </div>\n                <div className='property'>\n                    Start Date : {props.data.startDate}\n                </div>\n                <div className='property'>\n                    External : {props.data.external}\n                </div>\n                <div className='property'>\n                    Estimated Time : {props.data.estTime}\n                </div>\n                {\n                    props.data.subTasks?\n                        <div className='sublist'>\n                            <h5>SubTasks:</h5>\n                            <TaskList\n                                data = {props.data.subTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.events?\n                        <div className='sublist'>\n                            <h5>Events:</h5>\n                            <EventList data = {props.data.events}\n                                       xAccessToken = {props.xAccessToken}\n                                       modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList\n                                data = {props.data.notes}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n        <div className='editButton'>\n            <button onClick={props.editAction} class ='inputButton'>\n                <img src='../src/img/edit.svg' />\n            </button>\n        </div>\n    </div>\n}\n\nexport default Task;","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport formUtil from '../util/formUtil'\n\nclass TaskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'description'}, type: InputTypes.TEXT},\n                {props: {name: 'deadline'}, type: InputTypes.DATE},\n                {props: {name: 'startDate'}, type: InputTypes.DATE},\n                {props: {name: 'external'}, type: InputTypes.CHECKBOX},\n                {props: {name: 'estTime'}, type: InputTypes.NUMBER},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n         };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const taskJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(taskJson)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\nexport default TaskForm;\n","class TaskObject {\n    constructor(name,\n                description,\n                subTasks,\n                events,\n                completed,\n                deadline,\n                startDate,\n                notes,\n                external,\n                parent,\n                parentType,\n                prqTask,\n                prqEvent,\n                estTime,\n                accountId) {\n        this.name = name?name: \"\";\n        this.description =description?description: \"\";\n        this.subTasks=subTasks?subTasks: [];\n        this.events=events?events:[];\n        this.completed= completed?completed:\"\";\n        this.deadline=deadline?deadline:new Date();\n        this.startDate=startDate?startDate:new Date();\n        this.notes=notes?notes:[];\n        this.external=external?external:false;\n        this.parent=parent?parent:0;\n        this.parentType=parentType?parentType:\"\";\n        this.prqTask=prqTask?prqTask:[];\n        this.prqEvent=prqEvent?prqEvent:[];\n        this.estTime=estTime?estTime:0;\n        this.accountId=accountId?accountId:\"\";\n    }\n\n}\n\nexport default TaskObject;","import ModifyListActions from \"./ModifyListActions\";\nimport TaskApiCalls from \"../ApiCallFunctions/TaskApiCalls\";\n\nclass ModifyTaskListActions extends ModifyListActions {\n    constructor(parentId,token, setStateCallback){\n        super(\"task\",parentId,token,TaskApiCalls,setStateCallback);\n    }\n}\n\nexport default ModifyTaskListActions;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport TaskObject from '../ObjectClasses/TaskObject'\nimport ModifyTaskListActions from \"../ListActions/ModifyTaskListActions\";\n\n\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            task: undefined,\n            taskApiCalls: new TaskApiCalls()\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.taskApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedTask) => this.setState({task: returnedTask}))\n    };\n\n\n    modify =(modifiedTask) =>{\n        this.state.taskApiCalls.modifyObject(modifiedTask,this.props.xAccessToken,(returnedTask) => {\n            this.setState({task: returnedTask, displayState: DisplayStates.EXPANDED})\n        }\n        );\n    };\n\n    //todo 190118: need to create a delete button that creates a rebase/delete children modal\n\n\n\n\n\n\n    render() {\n        if (this.state.task) {\n            const modifyListActions = new ModifyTaskListActions(\n                this.state.task._id,\n                this.props.xAccessToken,\n                this.update\n            )\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <TaskForm data={this.state.task} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Task\n                        data={this.state.task}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        modifyListActions = {modifyListActions}\n                    />\n            )\n        } else if(!this.props.id){\n            return <TaskForm data={new TaskObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addTask}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default TaskContainer;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport TaskContainer from '../ContainerComponents/TaskContainer';\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addTask:false\n        };\n    }\n\n    addTask = ()=>this.setState({addTask:true});\n    //null taskId will create a new task\n    addNewTaskTrue=data=>{\n        //fixme 190203: this doesn't work. sometimes 'data' is non-iterable, probably cause it's null or undefined\n        //also it's putting the form at the bottom of the list no matter what, which isn't what I want\n        return [...data, null];\n    }\n\n    render() {\n\n        const taskListData = this.state.addTask?\n            this.props.data:\n            this.addNewTaskTrue(this.props.data);\n        return (\n            <div className=\"TaskList\" id={this.props.catId + \"Tasks\"}>\n                {\n                    taskListData.map(\n                        taskId => {\n                            return <TaskContainer\n                                id={taskId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport '../App.css';\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\n\n\nfunction Category(props){\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <h2 className = \"catName\">\n                {props.data.name}\n            </h2>\n            <h3>Tasks</h3>\n            <TaskList\n                data = {props.data.tasks}\n                catId={props.data._id}\n                modifyListActions = {props.modifyListActions}\n                xAccessToken = {props.xAccessToken}\n            />\n            <h3 >Events</h3>\n            <EventList\n                data={props.data.events} catId={props.data._id}\n                modifyListActions = {props.modifyListActions}\n                catId={props.data._id}\n                xAccessToken = {props.xAccessToken}\n\n            />\n        </div>\n    );\n}\n\nexport default Category;","import fetchUtil from '../util/fetchUtil'\nimport ApiCalls from './ApiCalls'\n\n\n\n/**\n * Create a task\n * @param task: the task to create\n * @param parentType: \"TaskObject\" or \"Category\"\n * @param parentId: the id of the parent\n */\nclass CategoryApiCalls extends ApiCalls {\n    constructor(){\n        super('category');\n    }\n\n    getCategory= (id,token, callback)=>this.getObject(id, token,callback);\n    modifyCategory=(modifiedCategory,token,callback)=>this.modifyObject(modifiedCategory,token,callback);\n    //TODO 190118: need to change the delete because it needs to ask if children will be deleted or rebased\n    deleteCategory=(categoryId,token, callback)=>this.deleteObject(categoryId,token,callback);\n    addCategory=(category,token,callback)=>fetchUtil.postData(\n        //don't use ApiCalls because category is always child of root so no parentTyoe or parentId\n        \"category/\",\n        token,\n        category,\n        returnedData=>callback(returnedData)\n    )\n\n}\n\nexport default CategoryApiCalls","import React, {Component} from 'react';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from \"./FormBuilder\";\n\nclass CategoryForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n            ],\n\n\n        };\n\n\n\n\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const categoryJson = Object.assign(this.props.category, formData);\n        this.props.submitAction(categoryJson)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.category}\n            />\n        </div>\n    }\n\n}\n\nexport default CategoryForm;\n","import ModifyListActions from \"./ModifyListActions\";\nimport CategoryApiCalls from \"../ApiCallFunctions/CategoryApiCalls\";\n\nclass ModifyCategoryListActions extends ModifyListActions{\n    constructor(parentId,token, setStateCallback){\n        super(\"category\",parentId,token,CategoryApiCalls,setStateCallback);\n    }\n}\n\nexport default ModifyCategoryListActions;","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport fetchUtil from \"../util/fetchUtil\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport Category from \"../BranchComponents/Category\";\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport CategoryForm from \"../FormComponents/CategoryForm\";\nimport ModifyCategoryListActions from '../ListActions/ModifyCategoryListActions'\n\n\n\n\nclass CategoryContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED,\n            category: undefined,\n            categoryApiCalls: new CategoryApiCalls()\n        };\n    }\n\n    expandCollapse=()=>{\n        this.state.displayState===DisplayStates.COLLAPSED?\n            this.setState({displayState:DisplayStates.EXPANDED})\n            : this.setState({displayState:DisplayStates.COLLAPSED});\n    }\n\n\n    input=()=>{\n        this.setState({displayState:DisplayStates.INPUT});\n    };\n\n    update=()=>{\n        this.state.categoryApiCalls.getCategory(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n    modify=(modifiedCategory)=> {\n        this.categoryApiCalls.modifyCategory(\n            modifiedCategory,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n    //todo 190118: need to create a delete button that creates a rebase/delete children modal\n\n\n    render() {\n        if(this.state.category) {\n            const modifyListActions = new ModifyCategoryListActions(\n                this.state.category._id,\n                this.props.xAccessToken,\n                this.update\n            )\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <CategoryForm data={this.props.data} submitAction = {this.modify}/> :\n                    <Category\n                        data={this.state.category}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        modifyListActions = {modifyListActions}\n                        xAccessToken = {this.props.xAccessToken}\n                    />\n            )\n        } else {\n            this.update();\n            return <LoadingGif/>\n        }\n    }\n\n}\n\nexport default CategoryContainer;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport fetchUtil from '../util/fetchUtil';\nimport Category from '../BranchComponents/Category';\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport CategoryContainer from \"../ContainerComponents/CategoryContainer\";\n\n//TODO 181231: I want to change this so this component doesn't get the categories, the user component does. But I'll have to change the API to do that.\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: undefined,\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n        };\n    }\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                'category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData})\n                }\n            );\n            return (\n                <LoadingGif/>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <CategoryContainer id = {cat._id} xAccessToken = {this.props.xAccessToken}/>\n                                )\n                            }\n                        )\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React from \"react\";\n\nconst UserContext = React.createContext({});\n\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './ListComponents/CategoryList';\nimport LoginForm from './FormComponents/LoginForm';\nimport fetchUtil from './util/fetchUtil';\nimport {UserProvider} from './UserContext';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\nclass User extends Component {\n\n   \n\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"http://localhost:3434\",//\"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        };\n        this.login=this.login.bind(this);\n    }\n\n    componentDidMount(){\n\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            'account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(\n              <div id='userRoot'>\n                  <UserProvider value = {this.state.xAccessToken}>\n                    <CategoryList xAccessToken = {this.state.xAccessToken}/>\n                  </UserProvider>\n              </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n//registerServiceWorker();\n//unregister();\n"],"sourceRoot":""}