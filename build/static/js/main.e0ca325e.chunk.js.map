{"version":3,"sources":["logo.svg","util/formUtil.js","util/fetchUtil.js","DisplayComponents/LoadingGif.js","Enums/DisplayStates.js","ApiCallFunctions/ApiCalls.js","ApiCallFunctions/NoteApiCalls.js","BranchComponents/Note.js","InputComponents/TextInput.js","InputComponents/PasswordInput.js","InputComponents/ResetInput.js","InputComponents/CheckboxInput.js","InputComponents/SubmitInput.js","InputComponents/ButtonInput.js","InputComponents/DateInput.js","InputComponents/EmailInput.js","InputComponents/NumberInput.js","InputComponents/TimeIntervalInput.js","Enums/InputTypes.js","FormComponents/FormBuilder.js","FormComponents/TaskForm.js","FormComponents/NoteForm.js","ObjectClasses/NoteObject.js","ContainerComponents/NoteContainer.js","ListComponents/NoteList.js","BranchComponents/Event.js","FormComponents/EventForm.js","ApiCallFunctions/EventApiCalls.js","ObjectClasses/EventObject.js","ContainerComponents/EventContainer.js","ListComponents/EventList.js","BranchComponents/Task.js","ApiCallFunctions/TaskApiCalls.js","ObjectClasses/TaskObject.js","ContainerComponents/TaskContainer.js","ApiCallFunctions/CategoryApiCalls.js","InputComponents/NewParentSearch.js","Modals/DeleteModal.js","ListComponents/TaskList.js","BranchComponents/Category.js","FormComponents/CategoryForm.js","ObjectClasses/CategoryObject.js","ContainerComponents/CategoryContainer.js","ListComponents/CategoryList.js","FormComponents/LoginForm.js","UserContext.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","formInputsToObject","form","inputs","Array","from","querySelectorAll","newObj","forEach","input","type","name","checked","value","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","ComponentName","props","react_default","a","createElement","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","ApiCalls","routeString","_this","this","classCallCheck","createObject","parentType","parentId","jsonString","JSON","stringify","concat","responseData","modifyObject","_id","toString","getObject","objId","getAllObjects","deleteObject","responseDate","deleteObjectRebaseChildren","newParentType","newParentId","rebaseObject","id","NoteApiCalls","possibleConstructorReturn","getPrototypeOf","call","getNote","noteId","modifyNote","modifiedNote","deleteNote","createNote","newNote","Note","className","displayState","dateTime","note","TextInput","state","event","setState","target","Fragment","assign","toLowerCase","onChange","handleChange","bind","attributes","Component","PasswordInput","ResetInput","action","preventDefault","onClick","handleClick","CheckboxInput","handleCheck","SubmitInput","ButtonInput","DateInput","Date","getDate","EmailInput","NumberInput","TimeIntervalInput","InputTypes","TEXT","PASSWORD","SUBMIT","RESET","CHECKBOX","BUTTON","DATE","EMAIL","NUMBER","TIMEINTERVAL","FormBuilder","_this2","inputFields","propsWithKey","content","React","TaskForm","submitAction","document","getElementById","formData","taskJson","style","display","FormComponents_FormBuilder","handlers","NoteForm","noteJson","FormComponents_TaskForm","NoteObject","timeStamp","parent","NoteContainer","update","noteApiCalls","xAccessToken","returnedNote","task","modify","undefined","FormComponents_NoteForm","BranchComponents_Note","editAction","LoadingGif","modifyListActions","addNote","NoteList","addNewNoteTrue","toConsumableArray","noteListData","catId","ContainerComponents_NoteContainer","Event","date","length","completed","prqTasks","ListComponents_TaskList","prqEvents","ListComponents_EventList","notes","ListComponents_NoteList","EventForm","EventApiCalls","getEvent","eventId","modifyEvent","modifiedEvent","deleteEvent","createEvent","newEvent","rebaseEvent","EventObject","prqTask","prevDates","accoundId","accountId","EventContainer","expandCollapse","eventApiCalls","returnedEvent","FormComponents_EventForm","BranchComponents_Event","buttonAction","addEvent","EventList","addNewEventTrue","eventListData","evtId","ContainerComponents_EventContainer","Task","description","deadline","startDate","external","estTime","subTasks","events","src","showDeleteModal","TaskApiCalls","getTask","taskId","modifyTask","modifiedTask","deleteTaskAndChildren","deleteTaskRebaseChildren","createTask","newTask","rebaseTask","TaskObject","prqEvent","TaskContainer","taskApiCalls","returnedTask","BranchComponents_Task","addTask","CategoryApiCalls","getCategory","modifyCategory","modifiedCategory","deleteCategoryAndChildren","categoryId","deleteCategoryRebaseChildren","addCategory","category","returnedData","NewParentSearch","apiCalls","getSuggestions","inputValue","trim","inputLength","branches","filter","branch","slice","populateList","types","response","item","itemToDeleteId","getSuggestionValue","suggestion","renderSuggestion","onSuggestionsClearRequested","suggestions","_ref","newValue","onSuggestionsFetchRequested","_ref2","onSuggestionSelected","_ref3","suggestionValue","suggestionIndex","sectionIndex","rebaseParent","deleteAndRebaseChildren","rebaseChildren","parentTypes","inputProps","placeholder","dist_default","disabled","customStyles","top","left","right","bottom","marginRight","transform","Modal","setAppElement","DeleteModal","deleteChildren","taskToDeleteId","closeModal","lib_default","isOpen","modalIsOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","componentType","componentName","InputComponents_NewParentSearch","TaskList","taskName","taskToDeleteName","deleteModalOpen","assertThisInitialized","closeDeleteModal","subtitle","color","ContainerComponents_TaskContainer","Modals_DeleteModal","Category","tasks","CategoryForm","categoryJson","CategoryObject","CategoryContainer","categoryApiCalls","returnedCategory","FormComponents_CategoryForm","BranchComponents_Category","newCategory","CategoryList","categories","deleteAndRebase","deleteWithChildren","categoryName","categoryToDeleteName","categoryToDeleteId","fetchOptions","x-access-token","cat","ContainerComponents_CategoryContainer","LoginForm","username","password","handleSubmit","defineProperty","login","UserContext","createContext","UserProvider","Provider","User","Consumer","apiUrl","uiUrl","ListComponents_CategoryList","FormComponents_LoginForm","App","src_User","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.e0ca325e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    },\n\n    formInputsToObject:(form)=>{\n        const inputs = Array.from(form.querySelectorAll(\"input\"));\n        let newObj = {};\n        inputs.forEach((input)=>{\n            if(input.type===\"checkbox\") {\n                newObj[input.name]=(input.checked===\"checked\");\n            } else {\n                newObj[input.name] = input.value;\n\n            }\n        });\n        return newObj;\n    }\n};\n\n\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      return \"http://localhost:3434/\";\n      //return \"https://insolent-preclude.herokuapp.com/\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, null, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n\n\n        const headers = new Headers(\n            method==='get'?{}:{\n                'Content-Type': route==='account/login'?'application/x-www-form-urlencoded':'application/json'\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","import React from \"react\";\n\n\nfunction ComponentName(props) {\n    return (\n        <div>\n            Loading gif...\n        </div>\n    );\n}\n\nexport default ComponentName;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import fetchUtil from '../util/fetchUtil'\n\n\nclass ApiCalls {\n    constructor(routeString){\n        this.routeString = routeString;\n    }\n    /**\n     * Create object\n     * @param obj: the object to create\n     * @param parentType: \"Task\", \"Category\" or \"Event\"\n     * @param parentId: the id of the parent\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     * @returns {*|void}\n     */\n    createObject = (obj, parentType, parentId, token, callback)=>{\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.postData(\n            `${this.routeString}/${parentType}/${parentId}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n    /**\n     * Modify object\n     * @param obj: the modified version of obj\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     * @returns {*|void}\n     */\n\n    modifyObject= (obj, token, callback)=> {\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.putData(\n            `${this.routeString}/${obj._id.toString()}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n\n    /**\n     * Get object\n     * @param objId: the id to get\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     * @returns {*|void}\n     */\n\n    getObject= (objId, token, callback)=>{\n        const route = `${this.routeString}/${objId}`;\n        fetchUtil.getData(\n            route,\n            token,\n            responseData => {\n                callback(responseData);\n            }\n\n        );\n\n    }\n    getAllObjects= (token, callback)=>{\n        const route = `${this.routeString}`;\n        fetchUtil.getData(\n            route,\n            token,\n            responseData => {\n                callback(responseData);\n            }\n\n        );\n\n    }\n    /**\n     * Delete object\n     * @param objId: the id to delete\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     * @returns {*|void}\n     */\n    deleteObject=(objId, token, callback)=>{\n        fetchUtil.deleteData(\n            `${this.routeString}/${objId}`,\n            token,\n            responseDate=>callback(responseDate))\n    };\n\n    /**\n     * Delete object and rebase children. Only task and category can rebase children.\n     * @param objId: the id to delete\n     * @param token: xAccessToken\n     * @param newParentType: parent type to rebase to\n     * @param newParentId: id to rebase to\n     */\n    deleteObjectRebaseChildren=(objId,token,newParentType,newParentId, callback)=>{\n        //rebase only applies to task and category, otherwise just do regular delete\n        if(this.routeString==='task'||this.routeString==='category'){\n        fetchUtil.deleteData(`${this.routeString}/${objId}/${newParentType}/${newParentId}`,\n            token,\n            responseDate=>callback(responseDate));\n        } else {\n            this.deleteObject(objId,token,callback);\n        }\n    }\n\n    /**\n     * rebase object\n     * @param id: the id to rebase\n     * @param newParentType: type of parent to rebase to\n     * @param newParentId: id of new parent\n     * @param token: xAccessToken\n     * @param callback: calback after task is created\n     * @returns {*|void}\n     */\n    rebaseObject=(id,newParentType,newParentId,token,callback)=>fetchUtil.patchData(\n        `${this.routeString}/id`,\n        token,\n        JSON.stringify({newParentType:newParentType,parentId:newParentId}),\n        callback\n    )\n\n}\n\nexport default ApiCalls","import ApiCalls from \"./ApiCalls\";\n\nclass NoteApiCalls extends ApiCalls{\n    constructor(){\n        super('note');\n    }\n    getNote= (noteId,token, callback)=>this.getObject(noteId, token,callback);\n    modifyNote=(modifiedNote,token,callback)=>this.modifyObject(modifiedNote,token,callback);\n    deleteNote=(noteId,token, callback)=>this.deleteObject(noteId,token,callback);\n    createNote=(newNote, parentType, parentId, token, callback)=>this.createObject(newNote,parentType,parentId,token,callback);\n}\n\nexport default NoteApiCalls;","import React from \"react\";\nimport DisplayStates from \"../Enums/DisplayStates\";\n\n\n\nfunction Note(props) {\n    return (\n        <div className='note' id={props.data.id}>\n            <div className='dataWrapper'>\n                <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                    <div className='property'>\n                        {props.data.dateTime} : {props.data.note}\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Note;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TextInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='text'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TextInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass PasswordInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='password'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange = {this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default PasswordInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ResetInput extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='reset'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResetInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass CheckboxInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            checked:this.props.checked?this.state.checked:false\n        }\n    }\n\n    //not tested yet might not work\n    handleCheck(event){\n        this.setState({checked:event.target.checked})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='checkbox'\n                        name={this.props.name.toLowerCase()}\n                        checked = {this.state.checked}\n                        onChange={this.handleCheck.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass SubmitInput extends Component{\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                    <input\n                        type='submit'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n             </React.Fragment>\n        );\n    }\n}\n\nexport default SubmitInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ButtonInput extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='button'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ButtonInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass DateInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n\n            value:this.props.value instanceof Date?this.props.value.getDate():new Date(this.props.value).getDate()\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}::\n                    <input\n                        type='date'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DateInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass EmailInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='email'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EmailInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass NumberInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.props.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NumberInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TimeIntervalInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </fragment>\n        );\n    }\n}\n\nexport default TimeIntervalInput;","import TextInput from '../InputComponents/TextInput';\nimport PasswordInput from '../InputComponents/PasswordInput';\nimport ResetInput from '../InputComponents/ResetInput';\nimport CheckboxInput from '../InputComponents/CheckboxInput';\nimport SubmitInput from '../InputComponents/SubmitInput';\nimport ButtonInput from '../InputComponents/ButtonInput';\nimport DateInput from '../InputComponents/DateInput';\nimport EmailInput from '../InputComponents/EmailInput';\nimport NumberInput from '../InputComponents/NumberInput';\nimport TimeIntervalInput from '../InputComponents/TimeIntervalInput'\n\nconst InputTypes = Object.freeze({\n    TEXT: TextInput,\n    PASSWORD: PasswordInput,\n    SUBMIT: SubmitInput,\n    RESET: ResetInput,\n    CHECKBOX: CheckboxInput,\n    BUTTON: ButtonInput,\n    DATE: DateInput,\n    EMAIL: EmailInput,\n    NUMBER: NumberInput,\n    TIMEINTERVAL: TimeIntervalInput\n});\n\n\n\nexport default InputTypes;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass FormBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n\n    }\n\n\n    render() {\n         return <form id={this.props.id}>\n            {\n\n                this.props.inputFields.map(input=>{\n                    const propsWithKey = Object.assign({\n                        key:\"\" + this.props.data._id + input.props.name,\n                        value: this.props.data[input.props.name]}\n                        ,input.props);\n                    return input.content?\n                        React.createElement(input.type, propsWithKey,input.content):\n                        React.createElement(input.type, propsWithKey);\n                })\n            }\n        </form>\n    }\n}\n\nexport default FormBuilder;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport formUtil from '../util/formUtil'\n\nclass TaskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'description'}, type: InputTypes.TEXT},\n                {props: {name: 'deadline'}, type: InputTypes.DATE},\n                {props: {name: 'startDate'}, type: InputTypes.DATE},\n                {props: {name: 'external'}, type: InputTypes.CHECKBOX},\n                {props: {name: 'estTime'}, type: InputTypes.NUMBER},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n         };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const taskJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(taskJson)\n\n    }\n\n\n    render() {\n        return <div style = {{display:this.props.display?this.props.display:'block'}} className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\nexport default TaskForm;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from \"./TaskForm\";\nclass NoteForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {Note: 'name',}, type: InputTypes.TEXT},\n            ],\n\n\n        };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const noteJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(noteJson)\n\n    }\n\n\n    render() {\n        return <div className=\"noteInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\n\nexport default NoteForm;\n","class NoteObject{\n    constructor(note, timeStamp, parent, parentType){\n        this.timeStamp = timeStamp?timeStamp:new Date();\n        this.note=note?note:\"\";\n        this.parent=parent?parent:0;\n        this.parentType=parentType?parentType:\"\";\n    }\n}\n\nexport default NoteObject;","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport NoteApiCalls from '../ApiCallFunctions/NoteApiCalls'\nimport Note from \"../BranchComponents/Note\";\nimport NoteForm from '../FormComponents/NoteForm'\nimport NoteObject from '../ObjectClasses/NoteObject'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\n\nclass NoteContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            task: undefined,\n            noteApiCalls: new NoteApiCalls()\n        }\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.noteApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedNote) => this.setState({task: returnedNote}))\n    };\n\n\n    modify =(modifyNote) =>{\n        this.state.noteApiCalls.modifyObject(modifyNote,this.props.xAccessToken,(returnedNote) => {\n                this.setState({task: returnedNote, displayState: DisplayStates.EXPANDED})\n            }\n        );\n    };\n\n\n    render() {\n        if (this.state.task) {\n             return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <NoteForm data={this.state.note} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Note\n                        data={this.state.task}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                    />\n            )\n        } else if(!this.props.id){\n            return <NoteForm data={new NoteObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addNote}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default NoteContainer;\n\n","import React, {Component} from 'react';\nimport '../App.css';\nimport NoteContainer from \"../ContainerComponents/NoteContainer\";\n\nclass NoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addNote: false\n        };\n    }\n\n    addNote = ()=>this.setState({addNote:true});\n    //null eventId will create a new event\n    addNewNoteTrue= data=>{\n        return [...data, null];\n    }\n\n    render() {\n        const noteListData = this.state.addNote ? this.addNewNoteTrue(this.props.data) : this.props.data;\n        return (\n            <div className='noteList' id={this.props.catId + 'NoteList'}>\n                {\n                    noteListData.map(\n                        noteId => {\n                            return <NoteContainer\n                                id={noteId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport TaskList from \"../ListComponents/TaskList\";\nimport NoteList from \"../ListComponents/NoteList\";\nimport EventList from \"../ListComponents/EventList\";\n\n\nfunction Event(props) {\n    return (\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Date : {props.data.date}\n                </div>\n                <div className='property'>\n                    Length : {props.data.length}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList\n                                data = {props.data.notes}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport formUtil from '../util/formUtil'\n\nclass EventForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'date'}, type: InputTypes.DATE},\n                {props: {name: 'length'}, type: InputTypes.NUMBER},\n            ],\n        };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const taskJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(taskJson)\n\n    }\n\n\n    render() {\n        return <div className=\"eventInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\nexport default EventForm;\n","import ApiCalls from \"./ApiCalls\";\n\n\nclass EventApiCalls extends ApiCalls{\n    constructor(){\n        super('event')\n    }\n    getEvent= (eventId,token, callback)=>this.getObject(eventId, token,callback);\n    modifyEvent=(modifiedEvent,token,callback)=>this.modifyObject(modifiedEvent,token,callback);\n    deleteEvent=(eventId,token, callback)=>this.deleteObject(eventId,token,callback);\n    createEvent=(newEvent, parentType, parentId, token, callback)=>this.createObject(newEvent,parentType,parentId,token,callback);\n    rebaseEvent=(eventId, newParentType, newParentId, token, callback)=>this.rebaseObject(eventId,newParentType,newParentId,token,callback);\n}\n\nexport default EventApiCalls;","class EventObject{\n   constructor(name,\n               dateTime,\n               length,\n               notes,\n               prqTask,\n               prqEvents,\n               parent,\n               parentType,\n               completed,\n               prevDates,\n               accoundId){\n       this.name = name?name:\"\";\n       this.dateTime = dateTime?dateTime:new Date();\n       this.length = length?length:0;\n       this.notes = notes?notes:[];\n       this.prqTask = prqTask?prqTask:[];\n       this.prqEvents = prqEvents?prqEvents:[];\n       this.parent = parent?parent:0;\n       this.completed = completed?completed:false;\n       this.prevDates = prevDates?prevDates:[];\n       this.accountId = accoundId?accoundId:0;\n\n   }\n\n}\n\nexport default EventObject;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Event from \"../BranchComponents/Event\";\nimport EventForm from \"../FormComponents/EventForm\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport EventApiCalls from \"../ApiCallFunctions/EventApiCalls\";\nimport EventObject from '../ObjectClasses/EventObject'\n\nclass EventContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            event: undefined,\n            eventApiCalls: new EventApiCalls()\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.eventApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedEvent) => this.setState({event: returnedEvent}))\n    };\n\n\n    modify =(modifiedEvent) =>{\n        this.state.eventApiCalls.modifyObject(modifiedEvent,this.props.xAccessToken,(returnedEvent) => {\n                this.setState({task: returnedEvent, displayState: DisplayStates.EXPANDED})\n            }\n        );\n    };\n\n    render() {\n        if (this.state.event) {\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <EventForm data={this.state.event} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Event\n                        data={this.state.event}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                    />\n            )\n        } else if(!this.props.id){\n            return <EventForm data={new EventObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addEvent}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default EventContainer;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport Event from \"../BranchComponents/Event\";\nimport TaskContainer from \"../ContainerComponents/TaskContainer\";\nimport EventContainer from \"../ContainerComponents/EventContainer\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEvent: false\n        };\n    }\n\n    addEvent = ()=>this.setState({addNote:true});\n    //null eventId will create a new event\n    addNewEventTrue=data=>{\n        return [...data, null];\n    }\n\n    render() {\n        const eventListData = this.state.addEvent ? this.addNewEventTrue(this.props.data) : this.props.data;\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    eventListData.map(\n                        evtId => {\n                            return <EventContainer\n                                id={evtId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React from \"react\";\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport NoteList from \"../ListComponents/NoteList\";\n\nfunction Task(props) {\n\n    const showDeleteModal =  ()=>{\n        props.showDeleteModal(props.data._id,props.data.name);\n    }\n    return <div className='task ' id={props.data._id}>\n        <div className='collapser'>\n            <button onClick={props.buttonAction}>\n                {props.displayState === DisplayStates.EXPANDED ? 'V' : '>'}\n            </button>\n        </div>\n\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Description : {props.data.description}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                <div className='property'>\n                    Deadline : {props.data.deadline}\n                </div>\n                <div className='property'>\n                    Start Date : {props.data.startDate}\n                </div>\n                <div className='property'>\n                    External : {props.data.external}\n                </div>\n                <div className='property'>\n                    Estimated Time : {props.data.estTime}\n                </div>\n                {\n                    props.data.subTasks?\n                        <div className='sublist'>\n                            <h5>SubTasks:</h5>\n                            <TaskList\n                                data = {props.data.subTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                                parentType = \"task\"\n                                parentId = {props.data._id}\n                                update = {props.update}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.events?\n                        <div className='sublist'>\n                            <h5>Events:</h5>\n                            <EventList data = {props.data.events}\n                                       xAccessToken = {props.xAccessToken}\n                                       modifyListActions = {props.modifyListActions}\n                                       parentType = \"task\"\n                                       parentId = {props.data._id}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList\n                                data = {props.data.notes}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                                parentType = \"task\"\n                                parentId = {props.data._id}\n\n                            />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n        <div className='editDeleteButton'>\n            <button onClick={props.editAction} className ='inputButton'>\n                <img src='../src/img/edit.svg' />\n            </button>\n            <button onClick={showDeleteModal} className='inputButton'>\n                <img src='../src/img/trash.png' />\n            </button>\n        </div>\n    </div>\n}\n\nexport default Task;","import ApiCalls from \"./ApiCalls\";\n\n\nclass TaskApiCalls extends ApiCalls{\n    constructor(){\n        super('task');\n    }\n    getTask= (taskId,token, callback)=>this.getObject(taskId, token,callback);\n    modifyTask=(modifiedTask,token,callback)=>this.modifyObject(modifiedTask,token,callback);\n    deleteTaskAndChildren=(taskId,token, callback)=>this.deleteObject(taskId,token,callback);\n    deleteTaskRebaseChildren=(taskId, token, newParentType,newParentId,callback)=>this.deleteObjectRebaseChildren(taskId,token,newParentType,newParentId)\n    createTask=(newTask, parentType, parentId, token, callback)=>this.createObject(newTask,parentType,parentId,token,callback);\n    rebaseTask=(taskId,newParentType,newParentId,token,callback)=>this.rebaseObject(taskId,newParentType,newParentId,token,callback);\n}\n\nexport default TaskApiCalls;","class TaskObject {\n    constructor(name,\n                description,\n                subTasks,\n                events,\n                completed,\n                deadline,\n                startDate,\n                notes,\n                external,\n                parent,\n                parentType,\n                prqTask,\n                prqEvent,\n                estTime,\n                accountId) {\n        this.name = name?name: \"\";\n        this.description =description?description: \"\";\n        this.subTasks=subTasks?subTasks: [];\n        this.events=events?events:[];\n        this.completed= completed?completed:\"\";\n        this.deadline=deadline?deadline:new Date();\n        this.startDate=startDate?startDate:new Date();\n        this.notes=notes?notes:[];\n        this.external=external?external:false;\n        this.parent=parent?parent:0;\n        this.parentType=parentType?parentType:\"\";\n        this.prqTask=prqTask?prqTask:[];\n        this.prqEvent=prqEvent?prqEvent:[];\n        this.estTime=estTime?estTime:0;\n        this.accountId=accountId?accountId:\"\";\n    }\n\n}\n\nexport default TaskObject;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport TaskObject from '../ObjectClasses/TaskObject'\n\n\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            task: undefined,\n            taskApiCalls: new TaskApiCalls(),\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.taskApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedTask) => this.setState({task: returnedTask}))\n    };\n\n\n    modify =(modifiedTask) =>{\n        this.state.taskApiCalls.modifyObject(modifiedTask,this.props.xAccessToken,(returnedTask) => {\n            this.setState({task: returnedTask, displayState: DisplayStates.EXPANDED})\n        }\n        );\n    };\n\n\n\n\n\n\n\n\n\n    render() {\n        if (this.state.task) {\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <TaskForm id = {this.props.id} display = 'block' data={this.state.task} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Task\n                        data={this.state.task}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        showDeleteModal = {this.props.showDeleteModal}\n                        update = {this.update}\n                    />\n            )\n        } else if(this.props.newTask){\n            return <TaskForm display = {this.props.display} data={new TaskObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.addTask} id={this.props.id}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default TaskContainer;\n","import fetchUtil from '../util/fetchUtil'\nimport ApiCalls from './ApiCalls'\n\n\n\n/**\n * Create a task\n * @param task: the task to create\n * @param parentType: \"TaskObject\" or \"Category\"\n * @param parentId: the id of the parent\n */\nclass CategoryApiCalls extends ApiCalls {\n    constructor(){\n        super('category');\n    }\n\n    getCategory= (id,token, callback)=>this.getObject(id, token,callback);\n    modifyCategory=(modifiedCategory,token,callback)=>this.modifyObject(modifiedCategory,token,callback);\n    deleteCategoryAndChildren=(categoryId,token, callback)=>this.deleteObject(categoryId,token,callback);\n    deleteCategoryRebaseChildren=(categoryId,token,newParentType,newParentId,callback)=>this.deleteObjectRebaseChildren(categoryId,token,newParentType,newParentType,callback);\n    addCategory=(category,token,callback)=>fetchUtil.postData(\n        //don't use ApiCalls because category is always child of root so no parentTyoe or parentId\n        \"category/\",\n        token,\n        JSON.stringify(category),\n        returnedData=>callback(returnedData)\n    )\n\n}\n\nexport default CategoryApiCalls","import React, {Component} from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport EventApiCalls from '../ApiCallFunctions/EventApiCalls'\n\nclass NewParentSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            suggestions:[],\n            branches:[],\n            rebaseParent:null\n        };\n    }\n    apiCalls = {'category':new CategoryApiCalls(),'task':new TaskApiCalls(),'event':new EventApiCalls()}\n\n    getSuggestions = value => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        return inputLength === 0 ? [] : this.state.branches.filter(branch =>\n            branch.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n    };\n\n    componentDidMount() {\n        this.populateList(this.props.parentTypes)\n    }\n\n\n    populateList= (types)=>{\n        return types.map(\n            type=>{\n                const apiCall = this.apiCalls[type];\n                apiCall.getAllObjects(this.props.xAccessToken,response=>{this.setState(\n                    {branches: this.state.branches.concat(\n                            response\n                                .filter(item=>item._id!==this.props.itemToDeleteId)\n                                .map(item=>Object.assign(item,{type:type}))\n                        )}\n                )}\n                )\n            }\n        );\n    };\n\n\n    getSuggestionValue=suggestion=>suggestion.name;\n\n    renderSuggestion = suggestion => <div>{suggestion.name}</div>;\n\n    onSuggestionsClearRequested =() => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    onChange = (event, {newValue})=>{\n        this.setState({value:newValue})\n    };\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n    };\n\n    onSuggestionSelected = (event,{suggestion, suggestionValue, suggestionIndex, sectionIndex, method}) =>{\n        this.setState({rebaseParent:suggestion});\n    };\n\n    deleteAndRebaseChildren=()=>{\n        this.props.rebaseChildren(this.state.rebaseParent.type,this.state.rebaseParent._id);\n    };\n\n    render() {\n        let inputProps={\n            placeholder: 'Type the name of the new parent',\n            value:this.state.value,\n            onChange: this.onChange\n        };\n        return <div>\n            Rebase child to parent:\n            <Autosuggest\n                suggestions={this.state.suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                getSuggestionValue={this.getSuggestionValue}\n                renderSuggestion={this.renderSuggestion}\n                inputProps={inputProps}\n                onSuggestionSelected = {this.onSuggestionSelected}\n            />\n            <button disabled={!this.state.rebaseParent} onClick={this.deleteAndRebaseChildren}>Delete and rebase children</button>\n        </div>\n\n    }\n}\n\nexport default NewParentSearch;\n","import React from \"react\";\nimport NewParentSearch from \"../InputComponents/NewParentSearch\";\nimport Modal from 'react-modal'\n\nconst customStyles = {\n    content : {\n        top                   : '50%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)'\n    }\n};\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root')\n\n\n/**\n * @param props: !modalIsOpen, !componentType, !componentName !parentTypes !rebaseChildren()  !deleteChildren()\n */\nclass DeleteModal extends React.Component  {\n    constructor(props){\n        super(props);\n        this.state={\n        }\n\n\n    }\n\n    deleteChildren=()=>{\n      this.props.deleteChildren(this.props.taskToDeleteId);\n      this.props.closeModal();\n    };\n\n    rebaseChildren=(newParentType, newParentId)=>{\n        this.props.rebaseChildren(this.props.taskToDeleteId, newParentType, newParentId);\n        this.props.closeModal();\n    }\n\n\n\n\n\n\n\n    render(){\n            return <Modal\n                isOpen={this.props.modalIsOpen}\n                onAfterOpen={this.props.afterOpenModal}\n                onRequestClose={this.props.closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n                The {this.props.componentType} {this.props.componentName} that you are deleting contains child Tasks or Events.\n                Do you want to delete the children or assign them to a new parent?\n                <button className=\"deleteChildren\" onClick={this.deleteChildren}>Delete Children</button>\n                <NewParentSearch itemToDeleteId={this.props.taskToDeleteId} parentTypes={this.props.parentTypes} rebaseChildren = {this.rebaseChildren} xAccessToken={this.props.xAccessToken}/>\n                <button onClick={this.props.closeModal} id='closeModalButton'>Cancel delete</button>\n\n            </Modal>\n            }\n\n    }\n\n\nexport default DeleteModal;","import React, { Component } from 'react';\nimport '../App.css';\nimport TaskContainer from '../ContainerComponents/TaskContainer';\nimport DeleteModal from \"../Modals/DeleteModal\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newTask:false,\n            taskToDeleteName: '',\n            taskToDeleteId: 0,\n            deleteModalOpen:false,\n        };\n\n        this.taskApiCalls = new TaskApiCalls();\n        this.showDeleteModal = this.showDeleteModal.bind(this);\n        this.afterOpenModal = this.afterOpenModal.bind(this);\n        this.closeDeleteModal = this.closeDeleteModal.bind(this);\n\n    }\n\n    newTask = ()=>this.setState({newTask:true});\n\n    addTask =(task)=>{\n        this.taskApiCalls.createTask(task, this.props.parentType, this.props.parentId, this.props.xAccessToken, this.props.update)\n        this.state.newTask = false;\n    };\n\n    deleteTaskRebaseChildren=(taskId, newParentType, newParentId)=>{\n        this.taskApiCalls.deleteTaskRebaseChildren(taskId, this.props.xAccessToken,newParentType, newParentId, this.props.update);\n    };\n\n    deleteTaskAndChildren=(taskId)=>{\n        this.taskApiCalls.deleteTaskAndChildren(taskId,this.props.xAccessToken,this.props.update);\n    };\n\n    showDeleteModal=(taskId, taskName)=>{\n        this.setState({taskToDeleteName: taskName, taskToDeleteId: taskId});\n        this.setState({deleteModalOpen:true});\n    }\n\n    afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        this.subtitle.style.color = '#f00';\n    }\n\n    closeDeleteModal() {\n        this.setState({deleteModalOpen: false});\n    }\n\n\n    render() {\n        return (\n            <div className=\"TaskList\" id={this.props.catId + \"Tasks\"}>\n\n                {\n                    this.props.data.map(\n                        taskId => {\n                            return <TaskContainer\n                                id={taskId}\n                                xAccessToken = {this.props.xAccessToken}\n                                showDeleteModal = {this.showDeleteModal}\n                                addTask = {this.addTask}\n                            />\n                        }\n                    )\n                }\n                <TaskContainer display = {this.state.newTask?'block':'none'}\n                               id={`NewTaskCat${this.props.parentId}`}\n                               xAccessToken = {this.props.xAccessToken}\n                               showDeleteModal = {this.showDeleteModal}\n                               addTask = {this.addTask}\n                               newTask = {true}\n                />\n                <div style = {{display:this.state.newTask?'none':'block'}} className='addButton'>\n                    <button  onClick={this.newTask}>+</button>\n                </div>\n                <DeleteModal\n                    modalIsOpen = {this.state.deleteModalOpen}\n                    closeModal = {this.closeDeleteModal}\n                    onAfterOpen = {this.afterOpenModal}\n                    componentType='task'\n                    parentTypes = {['category','task']}\n                    componentName = {this.state.taskToDeleteName}\n                    rebaseChildren = {this.deleteTaskRebaseChildren}\n                    deleteChildren = {this.deleteTaskAndChildren}\n                    taskToDeleteName = {this.state.taskToDeleteName}\n                    taskToDeleteId = {this.state.taskToDeleteId}\n                    xAccessToken = {this.props.xAccessToken}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport '../App.css';\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport DisplayStates from \"../Enums/DisplayStates\";\n\nfunction Category(props){\n    const showDeleteModal =  ()=>{\n        props.showDeleteModal(props.data._id,props.data.name);\n    };\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <div className='collapser'>\n                <button onClick={props.buttonAction}>\n                    {props.displayState === DisplayStates.EXPANDED ? 'V' : '>'}\n                </button>\n            </div>\n\n            <div className='dataWrapper'>\n                <h2 className = \"catName\">\n                    {props.data.name}\n                </h2>\n                <h3>Tasks</h3>\n                <TaskList\n                    data = {props.data.tasks}\n                    parentType = \"category\"\n                    parentId={props.data._id}\n                    modifyListActions = {props.modifyListActions}\n                    xAccessToken = {props.xAccessToken}\n                    update={props.update}\n                />\n                <h3 >Events</h3>\n                <EventList\n                    data={props.data.events} catId={props.data._id}\n                    parentType = \"category\"\n                    modifyListActions = {props.modifyListActions}\n                    parentId={props.data._id}\n                    xAccessToken = {props.xAccessToken}\n                    update = {props.update}\n                />\n            </div>\n            <div className='editDeleteButton'>\n                <button onClick={props.editAction} className ='inputButton'>\n                    <img src='../src/img/edit.svg' />\n                </button>\n                <button onClick={showDeleteModal} className='inputButton'>\n                    <img src='../src/img/trash.png' />\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Category;","import React, {Component} from 'react';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from \"./FormBuilder\";\n\nclass CategoryForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n        };\n\n\n\n\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const categoryJson = Object.assign(this.props.data, formData);\n        this.props.submitAction(categoryJson)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n\n}\n\nexport default CategoryForm;\n","class CategoryObject {\n    constructor(\n        name,\n        tasks,\n        events\n    ) {\n        this.name = name?name:'';\n        this.tasks = tasks?tasks:[];\n        this.events = events?events:[];\n    }\n\n}\n\nexport default CategoryObject;","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport Category from \"../BranchComponents/Category\";\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport CategoryForm from \"../FormComponents/CategoryForm\";\nimport CategoryObject from '../ObjectClasses/CategoryObject'\nimport Task from \"./TaskContainer\";\n\n\nclass CategoryContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED,\n            category: undefined,\n            categoryApiCalls: new CategoryApiCalls()\n        };\n    }\n\n    expandCollapse=()=>{\n        this.state.displayState===DisplayStates.COLLAPSED?\n            this.setState({displayState:DisplayStates.EXPANDED})\n            : this.setState({displayState:DisplayStates.COLLAPSED});\n    }\n\n\n    input=()=>{\n        this.setState({displayState:DisplayStates.INPUT});\n    };\n\n    update=()=>{\n        this.state.categoryApiCalls.getCategory(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n    modify=(modifiedCategory)=> {\n        this.state.categoryApiCalls.modifyCategory(\n            modifiedCategory,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n\n\n    render() {\n        if(this.state.category) {\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <CategoryForm data={this.props.data} submitAction = {this.modify}/> :\n                    <Category\n                        data={this.state.category}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        showDeleteModal = {this.props.showDeleteModal}\n                        update = {this.update}\n                    />\n            )\n        } else if(this.props.newCategory){\n            const newCategory = new CategoryObject();\n            return <CategoryForm display = {this.props.display} data={newCategory} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.addCategory} id={this.props.id}/>\n        }else {\n            this.update();\n            return <LoadingGif/>\n        }\n    }\n\n}\n\nexport default CategoryContainer;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport fetchUtil from '../util/fetchUtil';\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport CategoryContainer from \"../ContainerComponents/CategoryContainer\";\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport TaskContainer from \"./TaskList\";\nimport DeleteModal from \"../Modals/DeleteModal\";\n\n//TODO 181231: I want to change this so this component doesn't get the categories, the user component does. But I'll have to change the API to do that.\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: undefined,\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n            newCategory: false,\n            categoryToDeleteName:'',\n            categoryToDeleteId:'',\n            deleteModalOpen: false\n        };\n\n        this.categoryApiCalls = new CategoryApiCalls();\n    }\n\n    update = () => {\n        fetchUtil.getData(\n            'category/',\n            this.props.xAccessToken,\n            responseData => {\n                this.setState({categories:responseData})\n            }\n        );\n    }\n\n\n    addCategory = (category) =>{\n        this.categoryApiCalls.addCategory(category, this.props.xAccessToken,this.update)\n    };\n\n    deleteAndRebase = (categoryId,newParentType, newParentId) => {\n        this.categoryApiCalls.deleteCategoryRebaseChildren(categoryId,this.props.xAccessToken, newParentType,newParentId,this.update)\n    };\n\n    deleteWithChildren=(categoryId)=>{\n        this.categoryApiCalls.deleteCategoryAndChildren(categoryId,this.props.xAccessToken,this.update)\n    };\n    showDeleteModal = (categoryId, categoryName) => {\n        this.setState({categoryToDeleteName: categoryName, categoryToDeleteId: categoryId});\n        this.state.deleteModalOpen = true;\n    };\n\n    afterOpenModal=() => {\n        // references are now sync'd and can be accessed.\n        this.subtitle.style.color = '#f00';\n    }\n\n    closeDeleteModal=() =>{\n        this.setState({deleteModalOpen: false});\n    }\n\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                'category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData})\n                }\n            );\n            return (\n                <LoadingGif/>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <CategoryContainer\n                                        id = {cat._id}\n                                        xAccessToken = {this.props.xAccessToken}\n                                        showDeleteModal = {this.showDeleteModal}\n                                        addCategory = {this.addCategory}\n                                    />\n                                )\n                            }\n                        )\n                    }\n                    <CategoryContainer display = {this.state.newTask?'block':'none'}\n                                   id={`NewCat`}\n                                   xAccessToken = {this.props.xAccessToken}\n                                   showDeleteModal = {this.showDeleteModal}\n                                   addCategory= {this.addCategory}\n                                   newCategory = {true}\n                    />\n                    <div style = {{display:this.state.newCategory?'none':'block'}} className='addButton'>\n                        <button  onClick={this.newCategory}>+</button>\n                    </div>\n                    <DeleteModal\n                        modalIsOpen = {this.state.deleteModalOpen}\n                        closeModal = {this.closeDeleteModal}\n                        onAfterOpen = {this.afterOpenModal}\n                        componentType='category'\n                        parentTypes = {['category','task']}\n                        componentName = {this.state.categoryToDeleteName}\n                        rebaseChildren = {this.deleteAndRebase}\n                        deleteChildren = {this.deleteWithChildren}\n                        categoryToDeleteName = {this.state.categoryToDeleteName}\n                        categoryToDeleteId = {this.state.categoryToDeleteId}\n                        xAccessToken = {this.props.xAccessToken}\n                    />\n                </div>\n\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React from \"react\";\n\nconst UserContext = React.createContext({});\n\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './ListComponents/CategoryList';\nimport LoginForm from './FormComponents/LoginForm';\nimport fetchUtil from './util/fetchUtil';\nimport {UserProvider} from './UserContext';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\nclass User extends Component {\n\n   \n\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"http://localhost:3434\",//\"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        };\n        this.login=this.login.bind(this);\n    }\n\n    componentDidMount(){\n\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            'account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(\n              <div id='userRoot'>\n                  <UserProvider value = {this.state.xAccessToken}>\n                    <CategoryList xAccessToken = {this.state.xAccessToken}/>\n                  </UserProvider>\n              </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n//registerServiceWorker();\n//unregister();\n"],"sourceRoot":""}