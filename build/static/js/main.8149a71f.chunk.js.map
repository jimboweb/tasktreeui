{"version":3,"sources":["logo.svg","util/formUtil.js","util/fetchUtil.js","Enums/DisplayStates.js","ApiCallFunctions/ApiCalls.js","ApiCallFunctions/TaskApiCalls.js","ListActions/ModifyListActions.js","ListActions/ModifyTaskListActions.js","ApiCallFunctions/NoteApiCalls.js","BranchComponents/Note.js","InputComponents/TextInput.js","InputComponents/PasswordInput.js","InputComponents/ResetInput.js","InputComponents/CheckboxInput.js","InputComponents/SubmitInput.js","InputComponents/ButtonInput.js","InputComponents/DateInput.js","InputComponents/EmailInput.js","InputComponents/NumberInput.js","InputComponents/TimeIntervalInput.js","Enums/InputTypes.js","FormComponents/FormBuilder.js","FormComponents/TaskForm.js","FormComponents/NoteForm.js","ObjectClasses/NoteObject.js","DisplayComponents/LoadingGif.js","ContainerComponents/NoteContainer.js","ListComponents/NoteList.js","BranchComponents/Event.js","FormComponents/EventForm.js","ApiCallFunctions/EventApiCalls.js","ListActions/ModifyEventListActions.js","ObjectClasses/EventObject.js","ContainerComponents/EventContainer.js","ListComponents/EventList.js","BranchComponents/Task.js","ObjectClasses/TaskObject.js","ContainerComponents/TaskContainer.js","InputComponents/NewParentSearch.js","Modals/DeleteModal.js","ListComponents/TaskList.js","BranchComponents/Category.js","ApiCallFunctions/CategoryApiCalls.js","FormComponents/CategoryForm.js","ListActions/ModifyCategoryListActions.js","ContainerComponents/CategoryContainer.js","ListComponents/CategoryList.js","FormComponents/LoginForm.js","UserContext.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","formInputsToObject","form","inputs","Array","from","querySelectorAll","newObj","forEach","input","type","name","checked","value","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","ApiCalls","routeString","_this","this","classCallCheck","createObject","parentType","parentId","jsonString","JSON","stringify","concat","responseData","modifyObject","_id","toString","getObject","objId","deleteObject","responseDate","deleteObjectRebaseChildren","newParentType","newParentId","rebaseObject","id","TaskApiCalls","possibleConstructorReturn","getPrototypeOf","call","getTask","taskId","get","prototype","assertThisInitialized","modifyTask","modifiedTask","deleteTaskAndChildren","deleteTaskRebaseChildren","createTask","newTask","rebaseTask","ModifyListActions","apiCallObject","setStateCallback","addItem","returnedTask","deleteItem","returnedObject","ModifyTaskListActions","NoteApiCalls","getNote","noteId","modifyNote","modifiedNote","deleteNote","createNote","newNote","Note","props","react_default","a","createElement","className","displayState","dateTime","note","TextInput","state","event","setState","target","Fragment","assign","toLowerCase","onChange","handleChange","bind","attributes","Component","PasswordInput","ResetInput","action","preventDefault","onClick","handleClick","CheckboxInput","handleCheck","SubmitInput","ButtonInput","DateInput","Date","getDate","EmailInput","NumberInput","TimeIntervalInput","InputTypes","TEXT","PASSWORD","SUBMIT","RESET","CHECKBOX","BUTTON","DATE","EMAIL","NUMBER","TIMEINTERVAL","FormBuilder","_this2","inputFields","propsWithKey","content","React","TaskForm","submitAction","document","getElementById","formData","taskJson","FormComponents_FormBuilder","handlers","NoteForm","noteJson","FormComponents_TaskForm","NoteObject","timeStamp","parent","ComponentName","NoteContainer","update","noteApiCalls","xAccessToken","returnedNote","task","modify","undefined","FormComponents_NoteForm","BranchComponents_Note","editAction","LoadingGif","modifyListActions","addNote","NoteList","addNewNoteTrue","toConsumableArray","noteListData","catId","ContainerComponents_NoteContainer","Event","date","length","completed","prqTasks","ListComponents_TaskList","prqEvents","ListComponents_EventList","notes","ListComponents_NoteList","EventForm","EventApiCalls","getEvent","eventId","modifyEvent","modifiedEvent","deleteEvent","createEvent","newEvent","rebaseEvent","ModifyEventListActions","EventObject","prqTask","prevDates","accoundId","accountId","EventContainer","expandCollapse","eventApiCalls","returnedEvent","FormComponents_EventForm","BranchComponents_Event","buttonAction","addEvent","EventList","addNewEventTrue","eventListData","evtId","ContainerComponents_EventContainer","Task","description","deadline","startDate","external","estTime","subTasks","events","src","showDeleteModal","TaskObject","prqEvent","TaskContainer","taskApiCalls","BranchComponents_Task","addTask","NewParentSearch","customStyles","top","left","right","bottom","marginRight","transform","Modal","setAppElement","DeleteModal","lib_default","isOpen","modalIsOpen","onAfterOpen","afterOpenModal","onRequestClose","closeModal","style","contentLabel","componentType","componentName","deleteChildren","InputComponents_NewParentSearch","parentTypes","rebaseChildren","TaskList","addNewTaskTrue","push","taskName","deleteModalOpen","taskToDeleteName","closeDeleteModal","subtitle","color","taskListData","ContainerComponents_TaskContainer","Modals_DeleteModal","Category","_React$createElement","tasks","defineProperty","CategoryApiCalls","getCategory","modifyCategory","modifiedCategory","deleteCategoryAndChildren","categoryId","deleteCategoryRebaseChildren","addCategory","category","returnedData","CategoryForm","categoryJson","ModifyCategoryListActions","CategoryContainer","categoryApiCalls","returnedCategory","FormComponents_CategoryForm","BranchComponents_Category","CategoryList","categories","fetchOptions","x-access-token","cat","ContainerComponents_CategoryContainer","LoginForm","username","password","handleSubmit","login","UserContext","createContext","UserProvider","Provider","User","Consumer","apiUrl","uiUrl","ListComponents_CategoryList","FormComponents_LoginForm","App","src_User","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.8149a71f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    },\n\n    formInputsToObject:(form)=>{\n        const inputs = Array.from(form.querySelectorAll(\"input\"));\n        let newObj = {};\n        inputs.forEach((input)=>{\n            if(input.type===\"checkbox\") {\n                newObj[input.name]=(input.checked===\"checked\");\n            } else {\n                newObj[input.name] = input.value;\n\n            }\n        });\n        return newObj;\n    }\n};\n\n\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      //return \"http://localhost:3434/\";\n      return \"https://insolent-preclude.herokuapp.com/\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, null, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n\n\n        const headers = new Headers(\n            method==='get'?{}:{\n                'Content-Type': route==='account/login'?'application/x-www-form-urlencoded':'application/json'\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import fetchUtil from '../util/fetchUtil'\n\n\nclass ApiCalls {\n    constructor(routeString){\n        this.routeString = routeString;\n    }\n    /**\n     * Create object\n     * @param obj: the object to create\n     * @param parentType: \"Task\", \"Category\" or \"Event\"\n     * @param parentId: the id of the parent\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     * @returns {*|void}\n     */\n    createObject = (obj, parentType, parentId, token, callback)=>{\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.postData(\n            `${this.routeString}/${parentType}/${parentId}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n    /**\n     * Modify object\n     * @param obj: the modified version of obj\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     * @returns {*|void}\n     */\n\n    modifyObject= (obj, token, callback)=> {\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.putData(\n            `${this.routeString}/${obj._id.toString()}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n\n    /**\n     * Get object\n     * @param objId: the id to get\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     * @returns {*|void}\n     */\n\n    getObject= (objId, token, callback)=>{\n        const route = `${this.routeString}/${objId}`;\n        fetchUtil.getData(\n            route,\n            token,\n            responseData => {\n                callback(responseData);\n            }\n\n        );\n\n    }\n    /**\n     * Delete object\n     * @param objId: the id to delete\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     * @returns {*|void}\n     */\n    deleteObject=(objId, token, callback)=>{\n        fetchUtil.deleteData(\n            `${this.routeString}/${objId}`,\n            token,\n            responseDate=>callback(responseDate))\n    };\n\n    /**\n     * Delete object and rebase children. Only task and category can rebase children.\n     * @param objId: the id to delete\n     * @param token: xAccessToken\n     * @param newParentType: parent type to rebase to\n     * @param newParentId: id to rebase to\n     */\n    deleteObjectRebaseChildren=(objId,token,newParentType,newParentId, callback)=>{\n        //rebase only applies to task and category, otherwise just do regular delete\n        if(this.routeString==='task'||this.routeString==='category'){\n        fetchUtil.deleteData(`${this.routeString}/${objId}/${newParentType}/${newParentId}`,\n            token,\n            responseDate=>callback(responseDate));\n        } else {\n            this.deleteObject(objId,token,callback);\n        }\n    }\n\n    /**\n     * rebase object\n     * @param id: the id to rebase\n     * @param newParentType: type of parent to rebase to\n     * @param newParentId: id of new parent\n     * @param token: xAccessToken\n     * @param callback: calback after task is created\n     * @returns {*|void}\n     */\n    rebaseObject=(id,newParentType,newParentId,token,callback)=>fetchUtil.patchData(\n        `${this.routeString}/id`,\n        token,\n        JSON.stringify({newParentType:newParentType,parentId:newParentId}),\n        callback\n    )\n\n}\n\nexport default ApiCalls","import ApiCalls from \"./ApiCalls\";\n\n\nclass TaskApiCalls extends ApiCalls{\n    constructor(){\n        super('task');\n    }\n    getTask= (taskId,token, callback)=>super.getObject(taskId, token,callback);\n    modifyTask=(modifiedTask,token,callback)=>super.modifyObject(modifiedTask,token,callback);\n    //TODO 190216: two delete functions, one to rebase and one to delete children\n    deleteTaskAndChildren=(taskId,token, callback)=>super.deleteObject(taskId,token,callback);\n    deleteTaskRebaseChildren=(taskId, token, newParentType,newParentId,callback)=>super.deleteObjectRebaseChildren(taskId,token,newParentType,newParentId)\n    createTask=(newTask, parentType, parentId, token, callback)=>super.createObject(newTask,parentType,parentId,token,callback);\n    rebaseTask=(taskId,newParentType,newParentId,token,callback)=>super.rebaseObject(taskId,newParentType,newParentId,token,callback);\n}\n\nexport default TaskApiCalls;","import TaskApiCalls from \"../ApiCallFunctions/TaskApiCalls\";\n\n\nclass ModifyListActions{\n    constructor(parentType,parentId,token, apiCallObject, setStateCallback){\n        this.addItem= (obj) =>  apiCallObject.createObject(\n                obj,\n                parentType,\n                parentId,\n                token,\n                returnedTask => setStateCallback(returnedTask)\n        );\n\n\n        this.deleteItem = (objId) => apiCallObject.deleteObject(\n            objId,\n            token,\n            returnedObject=>setStateCallback(returnedObject)\n        )\n\n\n    }\n    \n}\n\nexport default ModifyListActions;","import ModifyListActions from \"./ModifyListActions\";\nimport TaskApiCalls from \"../ApiCallFunctions/TaskApiCalls\";\n\nclass ModifyTaskListActions extends ModifyListActions {\n    constructor(parentId,token, setStateCallback){\n        super(\"task\",parentId,token,TaskApiCalls,setStateCallback);\n    }\n}\n\nexport default ModifyTaskListActions;","import ApiCalls from \"./ApiCalls\";\n\nclass NoteApiCalls extends ApiCalls{\n    constructor(){\n        super('note');\n    }\n    getNote= (noteId,token, callback)=>super.getObject(noteId, token,callback);\n    modifyNote=(modifiedNote,token,callback)=>super.modifyObject(modifiedNote,token,callback);\n    deleteNote=(noteId,token, callback)=>super.deleteObject(noteId,token,callback);\n    createNote=(newNote, parentType, parentId, token, callback)=>super.createObject(newNote,parentType,parentId,token,callback);\n}\n\nexport default NoteApiCalls;","import React from \"react\";\nimport DisplayStates from \"../Enums/DisplayStates\";\n\n\n\nfunction Note(props) {\n    return (\n        <div className='note' id={props.data.id}>\n            <div className='dataWrapper'>\n                <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                    <div className='property'>\n                        {props.data.dateTime} : {props.data.note}\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Note;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TextInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='text'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TextInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass PasswordInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='password'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange = {this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default PasswordInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ResetInput extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='reset'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResetInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass CheckboxInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            checked:this.props.checked?this.state.checked:false\n        }\n    }\n\n    //not tested yet might not work\n    handleCheck(event){\n        this.setState({checked:event.target.checked})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='checkbox'\n                        name={this.props.name.toLowerCase()}\n                        checked = {this.state.checked}\n                        onChange={this.handleCheck.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass SubmitInput extends Component{\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                    <input\n                        type='submit'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n             </React.Fragment>\n        );\n    }\n}\n\nexport default SubmitInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ButtonInput extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='button'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ButtonInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass DateInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n\n            value:this.props.value instanceof Date?this.props.value.getDate():new Date(this.props.value).getDate()\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}::\n                    <input\n                        type='date'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DateInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass EmailInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='email'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EmailInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass NumberInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.props.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NumberInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TimeIntervalInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </fragment>\n        );\n    }\n}\n\nexport default TimeIntervalInput;","import TextInput from '../InputComponents/TextInput';\nimport PasswordInput from '../InputComponents/PasswordInput';\nimport ResetInput from '../InputComponents/ResetInput';\nimport CheckboxInput from '../InputComponents/CheckboxInput';\nimport SubmitInput from '../InputComponents/SubmitInput';\nimport ButtonInput from '../InputComponents/ButtonInput';\nimport DateInput from '../InputComponents/DateInput';\nimport EmailInput from '../InputComponents/EmailInput';\nimport NumberInput from '../InputComponents/NumberInput';\nimport TimeIntervalInput from '../InputComponents/TimeIntervalInput'\n\nconst InputTypes = Object.freeze({\n    TEXT: TextInput,\n    PASSWORD: PasswordInput,\n    SUBMIT: SubmitInput,\n    RESET: ResetInput,\n    CHECKBOX: CheckboxInput,\n    BUTTON: ButtonInput,\n    DATE: DateInput,\n    EMAIL: EmailInput,\n    NUMBER: NumberInput,\n    TIMEINTERVAL: TimeIntervalInput\n});\n\n\n\nexport default InputTypes;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass FormBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n\n    }\n\n\n    render() {\n         return <form id={this.props.id}>\n            {\n\n                this.props.inputFields.map(input=>{\n                    const propsWithKey = Object.assign({\n                        key:\"\" + this.props.data._id + input.props.name,\n                        value: this.props.data[input.props.name]}\n                        ,input.props);\n                    return input.content?\n                        React.createElement(input.type, propsWithKey,input.content):\n                        React.createElement(input.type, propsWithKey);\n                })\n            }\n        </form>\n    }\n}\n\nexport default FormBuilder;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport formUtil from '../util/formUtil'\n\nclass TaskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'description'}, type: InputTypes.TEXT},\n                {props: {name: 'deadline'}, type: InputTypes.DATE},\n                {props: {name: 'startDate'}, type: InputTypes.DATE},\n                {props: {name: 'external'}, type: InputTypes.CHECKBOX},\n                {props: {name: 'estTime'}, type: InputTypes.NUMBER},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n         };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const taskJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(taskJson)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\nexport default TaskForm;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from \"./TaskForm\";\nclass NoteForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {Note: 'name',}, type: InputTypes.TEXT},\n            ],\n\n\n        };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const noteJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(noteJson)\n\n    }\n\n\n    render() {\n        return <div className=\"noteInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\n\nexport default NoteForm;\n","class NoteObject{\n    constructor(note, timeStamp, parent, parentType){\n        this.timeStamp = timeStamp?timeStamp:new Date();\n        this.note=note?note:\"\";\n        this.parent=parent?parent:0;\n        this.parentType=parentType?parentType:\"\";\n    }\n}\n\nexport default NoteObject;","import React from \"react\";\n\n\nfunction ComponentName(props) {\n    return (\n        <div>\n            Loading gif...\n        </div>\n    );\n}\n\nexport default ComponentName;","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport ModifyTaskListActions from \"../ListActions/ModifyTaskListActions\";\nimport NoteApiCalls from '../ApiCallFunctions/NoteApiCalls'\nimport Note from \"../BranchComponents/Note\";\nimport NoteForm from '../FormComponents/NoteForm'\nimport NoteObject from '../ObjectClasses/NoteObject'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\n\nclass NoteContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            task: undefined,\n            noteApiCalls: new NoteApiCalls()\n        }\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.noteApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedNote) => this.setState({task: returnedNote}))\n    };\n\n\n    modify =(modifyNote) =>{\n        this.state.noteApiCalls.modifyObject(modifyNote,this.props.xAccessToken,(returnedNote) => {\n                this.setState({task: returnedNote, displayState: DisplayStates.EXPANDED})\n            }\n        );\n    };\n\n\n    render() {\n        if (this.state.task) {\n            const modifyListActions = new ModifyTaskListActions(\n                this.state.task._id,\n                this.props.xAccessToken,\n                this.update\n            )\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <NoteForm data={this.state.note} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Note\n                        data={this.state.task}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                    />\n            )\n        } else if(!this.props.id){\n            return <NoteForm data={new NoteObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addNote}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default NoteContainer;\n\n","import React, {Component} from 'react';\nimport '../App.css';\nimport NoteContainer from \"../ContainerComponents/NoteContainer\";\n\nclass NoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addNote: false\n        };\n    }\n\n    addNote = ()=>this.setState({addNote:true});\n    //null eventId will create a new event\n    addNewNoteTrue= data=>{\n        return [...data, null];\n    }\n\n    render() {\n        const noteListData = this.state.addNote ? this.addNewNoteTrue(this.props.data) : this.props.data;\n        return (\n            <div className='noteList' id={this.props.catId + 'NoteList'}>\n                {\n                    noteListData.map(\n                        noteId => {\n                            return <NoteContainer\n                                id={noteId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport TaskList from \"../ListComponents/TaskList\";\nimport NoteList from \"../ListComponents/NoteList\";\nimport EventList from \"../ListComponents/EventList\";\n\n\nfunction Event(props) {\n    return (\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Date : {props.data.date}\n                </div>\n                <div className='property'>\n                    Length : {props.data.length}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList\n                                data = {props.data.notes}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport formUtil from '../util/formUtil'\n\nclass EventForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'date'}, type: InputTypes.DATE},\n                {props: {name: 'length'}, type: InputTypes.NUMBER},\n            ],\n        };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const taskJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(taskJson)\n\n    }\n\n\n    render() {\n        return <div className=\"eventInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\nexport default EventForm;\n","import ApiCalls from \"./ApiCalls\";\n\n\nclass EventApiCalls extends ApiCalls{\n    constructor(){\n        super('event')\n    }\n    getEvent= (eventId,token, callback)=>super.getObject(eventId, token,callback);\n    modifyEvent=(modifiedEvent,token,callback)=>super.modifyObject(modifiedEvent,token,callback);\n    deleteEvent=(eventId,token, callback)=>super.deleteObject(eventId,token,callback);\n    createEvent=(newEvent, parentType, parentId, token, callback)=>super.createObject(newEvent,parentType,parentId,token,callback);\n    rebaseEvent=(eventId, newParentType, newParentId, token, callback)=>super.rebaseObject(eventId,newParentType,newParentId,token,callback);\n}\n\nexport default EventApiCalls;","import ModifyListActions from \"./ModifyListActions\";\nimport EventApiCalls from \"../ApiCallFunctions/EventApiCalls\";\n\nclass ModifyEventListActions extends ModifyListActions{\n    constructor(parentId,token, setStateCallback){\n        super(\"event\",parentId,token,EventApiCalls,setStateCallback);\n    }\n}\n\nexport default ModifyEventListActions;","class EventObject{\n   constructor(name,\n               dateTime,\n               length,\n               notes,\n               prqTask,\n               prqEvents,\n               parent,\n               parentType,\n               completed,\n               prevDates,\n               accoundId){\n       this.name = name?name:\"\";\n       this.dateTime = dateTime?dateTime:new Date();\n       this.length = length?length:0;\n       this.notes = notes?notes:[];\n       this.prqTask = prqTask?prqTask:[];\n       this.prqEvents = prqEvents?prqEvents:[];\n       this.parent = parent?parent:0;\n       this.completed = completed?completed:false;\n       this.prevDates = prevDates?prevDates:[];\n       this.accountId = accoundId?accoundId:0;\n\n   }\n\n}\n\nexport default EventObject;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Event from \"../BranchComponents/Event\";\nimport EventForm from \"../FormComponents/EventForm\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport ModifyEventListActions from \"../ListActions/ModifyEventListActions\";\nimport EventApiCalls from \"../ApiCallFunctions/EventApiCalls\";\nimport EventObject from '../ObjectClasses/EventObject'\n\nclass EventContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            event: undefined,\n            eventApiCalls: new EventApiCalls()\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.eventApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedEvent) => this.setState({event: returnedEvent}))\n    };\n\n\n    modify =(modifiedEvent) =>{\n        this.state.eventApiCalls.modifyObject(modifiedEvent,this.props.xAccessToken,(returnedEvent) => {\n                this.setState({task: returnedEvent, displayState: DisplayStates.EXPANDED})\n            }\n        );\n    };\n\n    render() {\n        if (this.state.event) {\n            const modifyListActions = new ModifyEventListActions(\n                this.state.event._id,\n                this.props.xAccessToken,\n                this.update\n            )\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <EventForm data={this.state.event} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Event\n                        data={this.state.event}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        modifyListActions = {modifyListActions}\n                    />\n            )\n        } else if(!this.props.id){\n            return <EventForm data={new EventObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addEvent}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default EventContainer;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport Event from \"../BranchComponents/Event\";\nimport TaskContainer from \"../ContainerComponents/TaskContainer\";\nimport EventContainer from \"../ContainerComponents/EventContainer\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEvent: false\n        };\n    }\n\n    addEvent = ()=>this.setState({addNote:true});\n    //null eventId will create a new event\n    addNewEventTrue=data=>{\n        return [...data, null];\n    }\n\n    render() {\n        const eventListData = this.state.addEvent ? this.addNewEventTrue(this.props.data) : this.props.data;\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    eventListData.map(\n                        evtId => {\n                            return <EventContainer\n                                id={evtId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React from \"react\";\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport NoteList from \"../ListComponents/NoteList\";\n\nfunction Task(props) {\n\n\n    return <div className='task ' id={props.data._id}>\n        <div className='collapser'>\n            <button onClick={props.buttonAction}>\n                {props.displayState === DisplayStates.EXPANDED ? '-' : '+'}\n            </button>\n        </div>\n\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Description : {props.data.description}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                <div className='property'>\n                    Deadline : {props.data.deadline}\n                </div>\n                <div className='property'>\n                    Start Date : {props.data.startDate}\n                </div>\n                <div className='property'>\n                    External : {props.data.external}\n                </div>\n                <div className='property'>\n                    Estimated Time : {props.data.estTime}\n                </div>\n                {\n                    props.data.subTasks?\n                        <div className='sublist'>\n                            <h5>SubTasks:</h5>\n                            <TaskList\n                                data = {props.data.subTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.events?\n                        <div className='sublist'>\n                            <h5>Events:</h5>\n                            <EventList data = {props.data.events}\n                                       xAccessToken = {props.xAccessToken}\n                                       modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList\n                                data = {props.data.notes}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n        <div className='editDeleteButton'>\n            <button onClick={props.editAction} className ='inputButton'>\n                <img src='../src/img/edit.svg' />\n            </button>\n            <button onClick={props.showDeleteModal} className='inputButton'>\n                <img src='../src/img/trash.png' />\n            </button>\n        </div>\n    </div>\n}\n\nexport default Task;","class TaskObject {\n    constructor(name,\n                description,\n                subTasks,\n                events,\n                completed,\n                deadline,\n                startDate,\n                notes,\n                external,\n                parent,\n                parentType,\n                prqTask,\n                prqEvent,\n                estTime,\n                accountId) {\n        this.name = name?name: \"\";\n        this.description =description?description: \"\";\n        this.subTasks=subTasks?subTasks: [];\n        this.events=events?events:[];\n        this.completed= completed?completed:\"\";\n        this.deadline=deadline?deadline:new Date();\n        this.startDate=startDate?startDate:new Date();\n        this.notes=notes?notes:[];\n        this.external=external?external:false;\n        this.parent=parent?parent:0;\n        this.parentType=parentType?parentType:\"\";\n        this.prqTask=prqTask?prqTask:[];\n        this.prqEvent=prqEvent?prqEvent:[];\n        this.estTime=estTime?estTime:0;\n        this.accountId=accountId?accountId:\"\";\n    }\n\n}\n\nexport default TaskObject;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport TaskObject from '../ObjectClasses/TaskObject'\nimport ModifyTaskListActions from \"../ListActions/ModifyTaskListActions\";\n\n\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            task: undefined,\n            taskApiCalls: new TaskApiCalls(),\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.taskApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedTask) => this.setState({task: returnedTask}))\n    };\n\n\n    modify =(modifiedTask) =>{\n        this.state.taskApiCalls.modifyObject(modifiedTask,this.props.xAccessToken,(returnedTask) => {\n            this.setState({task: returnedTask, displayState: DisplayStates.EXPANDED})\n        }\n        );\n    };\n\n\n\n\n\n\n\n\n\n    render() {\n        if (this.state.task) {\n            const modifyListActions = new ModifyTaskListActions(\n                this.state.task._id,\n                this.props.xAccessToken,\n                this.update\n            )\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <TaskForm data={this.state.task} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Task\n                        data={this.state.task}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        modifyListActions = {modifyListActions}\n                        showDeleteModal = {this.props.showDeleteModal}\n                    />\n            )\n        } else if(!this.props.id){\n            return <TaskForm data={new TaskObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addTask}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default TaskContainer;\n","import React, {Component} from 'react';\n\n//todo 190208: make new parent search input component\n\nclass NewParentSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return <div>\n            Rebase child to parent:\n            //todo 190209: find new parent input\n        </div>\n    }\n}\n\nexport default NewParentSearch;\n","import React from \"react\";\nimport NewParentSearch from \"../InputComponents/NewParentSearch\";\nimport Modal from 'react-modal'\n\nconst customStyles = {\n    content : {\n        top                   : '50%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)'\n    }\n};\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root')\n\n\n/**\n * @param props: !modalIsOpen, !componentType, !componentName !parentTypes !rebaseChildren()  !deleteChildren()\n */\nclass DeleteModal extends React.Component  {\n    constructor(props){\n        super(props);\n        this.state={\n        }\n\n\n    }\n\n\n\n\n\n    render(){\n            return <Modal\n                isOpen={this.props.modalIsOpen}\n                onAfterOpen={this.props.afterOpenModal}\n                onRequestClose={this.props.closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n                <button onClick={this.props.closeModal} id='closeModalButton'>close</button>\n                The {this.props.componentType} {this.props.componentName} that you are deleting contains child Tasks or Events.\n                Do you want to delete the children or assign them to a new parent?\n                <button className=\"deleteChildren\" onClick={this.state.deleteChildren}>Delete Children</button>\n                <button className=\"cancelDelete\">Don't Delete</button>\n                <NewParentSearch parentTypes={this.props.parentTypes} buttonAction = {this.state.rebaseChildren}/>\n\n            </Modal>\n            }\n\n    }\n\n\nexport default DeleteModal;","import React, { Component } from 'react';\nimport '../App.css';\nimport TaskContainer from '../ContainerComponents/TaskContainer';\nimport TaskObject from '../ObjectClasses/TaskObject'\nimport DeleteModal from \"../Modals/DeleteModal\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addTask:false,\n            taskToDeleteName: '',\n            deleteModalOpen:false,\n        };\n\n        this.showDeleteModal = this.showDeleteModal.bind(this);\n        this.afterOpenModal = this.afterOpenModal.bind(this);\n        this.closeDeleteModal = this.closeDeleteModal.bind(this);\n\n    }\n\n    addTask = ()=>this.setState({addTask:true});\n    addNewTaskTrue=data=>{\n        if(!data || !data.length)\n            return [new TaskObject()];\n        data.push(new TaskObject())\n    }\n\n    deleteTaskRebaseChildren=(taskId, newParentType, newParentId)=>{\n        TaskApiCalls.deleteTaskRebaseChildren(taskId, newParentType, newParentId, ()=>this.props.update);\n    };\n\n    deleteTaskAndChildren=(taskId)=>{\n        TaskApiCalls.deleteTaskAndChildren(taskId,this.props.xAccessToken,()=>this.props.update)\n    };\n\n    showDeleteModal=(taskId, taskName)=>{\n        this.setState({deleteModalOpen:true});\n    }\n\n    afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        this.subtitle.style.color = '#f00';\n    }\n\n    closeDeleteModal() {\n        this.setState({deleteModalOpen: false});\n    }\n\n\n    render() {\n        const taskListData = this.state.addTask?\n            this.addNewTaskTrue(this.props.data):\n            this.props.data;\n        return (\n            <div className=\"TaskList\" id={this.props.catId + \"Tasks\"}>\n                {\n                    taskListData.map(\n                        taskId => {\n                            return <TaskContainer\n                                id={taskId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                                showDeleteModal = {this.showDeleteModal}\n                            />\n                        }\n                    )\n                }\n                <DeleteModal\n                    modalIsOpen = {this.state.deleteModalOpen}\n                    closeModal = {this.closeDeleteModal}\n                    onAfterOpen = {this.afterOpenModal}\n                    componentType='task'\n                    parentTypes = {['component','task']}\n                    componentName = {this.state.taskToDeleteName}\n                    rebaseChildren = {this.deleteTaskRebaseChildren}\n                    deleteChildren = {this.deleteTaskAndChildren}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport '../App.css';\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\n\n//TODO 190206: add expand/collapse button\nfunction Category(props){\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <h2 className = \"catName\">\n                {props.data.name}\n            </h2>\n            <h3>Tasks</h3>\n            <TaskList\n                data = {props.data.tasks}\n                catId={props.data._id}\n                modifyListActions = {props.modifyListActions}\n                xAccessToken = {props.xAccessToken}\n                update={props.update}\n            />\n            <h3 >Events</h3>\n            <EventList\n                data={props.data.events} catId={props.data._id}\n                modifyListActions = {props.modifyListActions}\n                catId={props.data._id}\n                xAccessToken = {props.xAccessToken}\n                update = {props.update}\n            />\n        </div>\n    );\n}\n\nexport default Category;","import fetchUtil from '../util/fetchUtil'\nimport ApiCalls from './ApiCalls'\n\n\n\n/**\n * Create a task\n * @param task: the task to create\n * @param parentType: \"TaskObject\" or \"Category\"\n * @param parentId: the id of the parent\n */\nclass CategoryApiCalls extends ApiCalls {\n    constructor(){\n        super('category');\n    }\n\n    getCategory= (id,token, callback)=>this.getObject(id, token,callback);\n    modifyCategory=(modifiedCategory,token,callback)=>this.modifyObject(modifiedCategory,token,callback);\n    deleteCategoryAndChildren=(categoryId,token, callback)=>this.deleteObject(categoryId,token,callback);\n    deleteCategoryRebaseChildren=(categoryId,token,newParentType,newParentId,callback)=>this.deleteObjectRebaseChildren(categoryId,token,newParentType,newParentType,callback);\n    addCategory=(category,token,callback)=>fetchUtil.postData(\n        //don't use ApiCalls because category is always child of root so no parentTyoe or parentId\n        \"category/\",\n        token,\n        category,\n        returnedData=>callback(returnedData)\n    )\n\n}\n\nexport default CategoryApiCalls","import React, {Component} from 'react';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from \"./FormBuilder\";\n\nclass CategoryForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n            ],\n\n\n        };\n\n\n\n\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const categoryJson = Object.assign(this.props.category, formData);\n        this.props.submitAction(categoryJson)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.category}\n            />\n        </div>\n    }\n\n}\n\nexport default CategoryForm;\n","import ModifyListActions from \"./ModifyListActions\";\nimport CategoryApiCalls from \"../ApiCallFunctions/CategoryApiCalls\";\n\nclass ModifyCategoryListActions extends ModifyListActions{\n    constructor(parentId,token, setStateCallback){\n        super(\"category\",parentId,token,CategoryApiCalls,setStateCallback);\n    }\n}\n\nexport default ModifyCategoryListActions;","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport fetchUtil from \"../util/fetchUtil\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport Category from \"../BranchComponents/Category\";\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport CategoryForm from \"../FormComponents/CategoryForm\";\nimport ModifyCategoryListActions from '../ListActions/ModifyCategoryListActions'\n\n\n\n\nclass CategoryContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED,\n            category: undefined,\n            categoryApiCalls: new CategoryApiCalls()\n        };\n    }\n\n    expandCollapse=()=>{\n        this.state.displayState===DisplayStates.COLLAPSED?\n            this.setState({displayState:DisplayStates.EXPANDED})\n            : this.setState({displayState:DisplayStates.COLLAPSED});\n    }\n\n\n    input=()=>{\n        this.setState({displayState:DisplayStates.INPUT});\n    };\n\n    update=()=>{\n        this.state.categoryApiCalls.getCategory(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n    modify=(modifiedCategory)=> {\n        this.categoryApiCalls.modifyCategory(\n            modifiedCategory,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n\n\n    render() {\n        if(this.state.category) {\n            const modifyListActions = new ModifyCategoryListActions(\n                this.state.category._id,\n                this.props.xAccessToken,\n                this.update\n            )\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <CategoryForm data={this.props.data} submitAction = {this.modify}/> :\n                    <Category\n                        data={this.state.category}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        modifyListActions = {modifyListActions}\n                        xAccessToken = {this.props.xAccessToken}\n                        update = {this.update}\n                    />\n            )\n        } else {\n            this.update();\n            return <LoadingGif/>\n        }\n    }\n\n}\n\nexport default CategoryContainer;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport fetchUtil from '../util/fetchUtil';\nimport Category from '../BranchComponents/Category';\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport CategoryContainer from \"../ContainerComponents/CategoryContainer\";\n\n//TODO 181231: I want to change this so this component doesn't get the categories, the user component does. But I'll have to change the API to do that.\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: undefined,\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n        };\n    }\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                'category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData})\n                }\n            );\n            return (\n                <LoadingGif/>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <CategoryContainer id = {cat._id} xAccessToken = {this.props.xAccessToken}/>\n                                )\n                            }\n                        )\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React from \"react\";\n\nconst UserContext = React.createContext({});\n\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './ListComponents/CategoryList';\nimport LoginForm from './FormComponents/LoginForm';\nimport fetchUtil from './util/fetchUtil';\nimport {UserProvider} from './UserContext';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\nclass User extends Component {\n\n   \n\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"http://localhost:3434\",//\"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        };\n        this.login=this.login.bind(this);\n    }\n\n    componentDidMount(){\n\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            'account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(\n              <div id='userRoot'>\n                  <UserProvider value = {this.state.xAccessToken}>\n                    <CategoryList xAccessToken = {this.state.xAccessToken}/>\n                  </UserProvider>\n              </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n//registerServiceWorker();\n//unregister();\n"],"sourceRoot":""}