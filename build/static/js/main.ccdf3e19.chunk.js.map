{"version":3,"sources":["logo.svg","util/formUtil.js","util/fetchUtil.js","Enums/DisplayStates.js","ApiCallFunctions/ApiCalls.js","ApiCallFunctions/NoteApiCalls.js","BranchComponents/Note.js","InputComponents/TextInput.js","InputComponents/PasswordInput.js","InputComponents/ResetInput.js","InputComponents/CheckboxInput.js","InputComponents/SubmitInput.js","InputComponents/ButtonInput.js","InputComponents/DateInput.js","InputComponents/EmailInput.js","InputComponents/NumberInput.js","InputComponents/TimeIntervalInput.js","Enums/InputTypes.js","FormComponents/FormBuilder.js","FormComponents/TaskForm.js","FormComponents/NoteForm.js","ObjectClasses/NoteObject.js","DisplayComponents/LoadingGif.js","ContainerComponents/NoteContainer.js","ListComponents/NoteList.js","BranchComponents/Event.js","FormComponents/EventForm.js","ApiCallFunctions/EventApiCalls.js","ObjectClasses/EventObject.js","ContainerComponents/EventContainer.js","ListComponents/EventList.js","BranchComponents/Task.js","ApiCallFunctions/TaskApiCalls.js","ObjectClasses/TaskObject.js","ContainerComponents/TaskContainer.js","ApiCallFunctions/CategoryApiCalls.js","InputComponents/NewParentSearch.js","Modals/DeleteModal.js","ListComponents/TaskList.js","BranchComponents/Category.js","FormComponents/CategoryForm.js","ContainerComponents/CategoryContainer.js","ListComponents/CategoryList.js","FormComponents/LoginForm.js","UserContext.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","formInputsToObject","form","inputs","Array","from","querySelectorAll","newObj","forEach","input","type","name","checked","value","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","ApiCalls","routeString","_this","this","classCallCheck","createObject","parentType","parentId","jsonString","JSON","stringify","concat","responseData","modifyObject","_id","toString","getObject","objId","getAllObjects","deleteObject","responseDate","deleteObjectRebaseChildren","newParentType","newParentId","rebaseObject","id","NoteApiCalls","possibleConstructorReturn","getPrototypeOf","call","getNote","noteId","modifyNote","modifiedNote","deleteNote","createNote","newNote","Note","props","react_default","a","createElement","className","displayState","dateTime","note","TextInput","state","event","setState","target","Fragment","assign","toLowerCase","onChange","handleChange","bind","attributes","Component","PasswordInput","ResetInput","action","preventDefault","onClick","handleClick","CheckboxInput","handleCheck","SubmitInput","ButtonInput","DateInput","Date","getDate","EmailInput","NumberInput","TimeIntervalInput","InputTypes","TEXT","PASSWORD","SUBMIT","RESET","CHECKBOX","BUTTON","DATE","EMAIL","NUMBER","TIMEINTERVAL","FormBuilder","_this2","inputFields","propsWithKey","content","React","TaskForm","submitAction","document","getElementById","formData","taskJson","style","display","FormComponents_FormBuilder","handlers","NoteForm","noteJson","FormComponents_TaskForm","NoteObject","timeStamp","parent","ComponentName","NoteContainer","update","noteApiCalls","xAccessToken","returnedNote","task","modify","undefined","FormComponents_NoteForm","BranchComponents_Note","editAction","LoadingGif","modifyListActions","addNote","NoteList","addNewNoteTrue","toConsumableArray","noteListData","catId","ContainerComponents_NoteContainer","Event","date","length","completed","prqTasks","ListComponents_TaskList","prqEvents","ListComponents_EventList","notes","ListComponents_NoteList","EventForm","EventApiCalls","getEvent","eventId","modifyEvent","modifiedEvent","deleteEvent","createEvent","newEvent","rebaseEvent","EventObject","prqTask","prevDates","accoundId","accountId","EventContainer","expandCollapse","eventApiCalls","returnedEvent","FormComponents_EventForm","BranchComponents_Event","buttonAction","addEvent","EventList","addNewEventTrue","eventListData","evtId","ContainerComponents_EventContainer","Task","description","deadline","startDate","external","estTime","subTasks","events","src","showDeleteModal","TaskApiCalls","getTask","taskId","modifyTask","modifiedTask","deleteTaskAndChildren","deleteTaskRebaseChildren","createTask","newTask","rebaseTask","TaskObject","prqEvent","TaskContainer","taskApiCalls","returnedTask","BranchComponents_Task","addTask","CategoryApiCalls","getCategory","modifyCategory","modifiedCategory","deleteCategoryAndChildren","categoryId","deleteCategoryRebaseChildren","addCategory","category","returnedData","NewParentSearch","apiCalls","getSuggestions","inputValue","trim","inputLength","branches","filter","branch","slice","populateList","types","response","item","itemToDeleteId","getSuggestionValue","suggestion","renderSuggestion","onSuggestionsClearRequested","suggestions","_ref","newValue","onSuggestionsFetchRequested","_ref2","onSuggestionSelected","_ref3","suggestionValue","suggestionIndex","sectionIndex","rebaseParent","deleteAndRebaseChildren","rebaseChildren","parentTypes","inputProps","placeholder","dist_default","disabled","customStyles","top","left","right","bottom","marginRight","transform","Modal","setAppElement","DeleteModal","deleteChildren","taskToDeleteId","closeModal","lib_default","isOpen","modalIsOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","componentType","componentName","InputComponents_NewParentSearch","TaskList","taskName","taskToDeleteName","deleteModalOpen","assertThisInitialized","closeDeleteModal","subtitle","color","ContainerComponents_TaskContainer","Modals_DeleteModal","Category","tasks","CategoryForm","categoryJson","CategoryContainer","categoryApiCalls","returnedCategory","FormComponents_CategoryForm","BranchComponents_Category","CategoryList","categories","fetchOptions","x-access-token","cat","ContainerComponents_CategoryContainer","LoginForm","username","password","handleSubmit","defineProperty","login","UserContext","createContext","UserProvider","Provider","User","Consumer","apiUrl","uiUrl","ListComponents_CategoryList","FormComponents_LoginForm","App","src_User","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.ccdf3e19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    },\n\n    formInputsToObject:(form)=>{\n        const inputs = Array.from(form.querySelectorAll(\"input\"));\n        let newObj = {};\n        inputs.forEach((input)=>{\n            if(input.type===\"checkbox\") {\n                newObj[input.name]=(input.checked===\"checked\");\n            } else {\n                newObj[input.name] = input.value;\n\n            }\n        });\n        return newObj;\n    }\n};\n\n\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      return \"http://localhost:3434/\";\n      //return \"https://insolent-preclude.herokuapp.com/\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, null, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n\n\n        const headers = new Headers(\n            method==='get'?{}:{\n                'Content-Type': route==='account/login'?'application/x-www-form-urlencoded':'application/json'\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import fetchUtil from '../util/fetchUtil'\n\n\nclass ApiCalls {\n    constructor(routeString){\n        this.routeString = routeString;\n    }\n    /**\n     * Create object\n     * @param obj: the object to create\n     * @param parentType: \"Task\", \"Category\" or \"Event\"\n     * @param parentId: the id of the parent\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     * @returns {*|void}\n     */\n    createObject = (obj, parentType, parentId, token, callback)=>{\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.postData(\n            `${this.routeString}/${parentType}/${parentId}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n    /**\n     * Modify object\n     * @param obj: the modified version of obj\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     * @returns {*|void}\n     */\n\n    modifyObject= (obj, token, callback)=> {\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.putData(\n            `${this.routeString}/${obj._id.toString()}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n\n    /**\n     * Get object\n     * @param objId: the id to get\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     * @returns {*|void}\n     */\n\n    getObject= (objId, token, callback)=>{\n        const route = `${this.routeString}/${objId}`;\n        fetchUtil.getData(\n            route,\n            token,\n            responseData => {\n                callback(responseData);\n            }\n\n        );\n\n    }\n    getAllObjects= (token, callback)=>{\n        const route = `${this.routeString}`;\n        fetchUtil.getData(\n            route,\n            token,\n            responseData => {\n                callback(responseData);\n            }\n\n        );\n\n    }\n    /**\n     * Delete object\n     * @param objId: the id to delete\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     * @returns {*|void}\n     */\n    deleteObject=(objId, token, callback)=>{\n        fetchUtil.deleteData(\n            `${this.routeString}/${objId}`,\n            token,\n            responseDate=>callback(responseDate))\n    };\n\n    /**\n     * Delete object and rebase children. Only task and category can rebase children.\n     * @param objId: the id to delete\n     * @param token: xAccessToken\n     * @param newParentType: parent type to rebase to\n     * @param newParentId: id to rebase to\n     */\n    deleteObjectRebaseChildren=(objId,token,newParentType,newParentId, callback)=>{\n        //rebase only applies to task and category, otherwise just do regular delete\n        if(this.routeString==='task'||this.routeString==='category'){\n        fetchUtil.deleteData(`${this.routeString}/${objId}/${newParentType}/${newParentId}`,\n            token,\n            responseDate=>callback(responseDate));\n        } else {\n            this.deleteObject(objId,token,callback);\n        }\n    }\n\n    /**\n     * rebase object\n     * @param id: the id to rebase\n     * @param newParentType: type of parent to rebase to\n     * @param newParentId: id of new parent\n     * @param token: xAccessToken\n     * @param callback: calback after task is created\n     * @returns {*|void}\n     */\n    rebaseObject=(id,newParentType,newParentId,token,callback)=>fetchUtil.patchData(\n        `${this.routeString}/id`,\n        token,\n        JSON.stringify({newParentType:newParentType,parentId:newParentId}),\n        callback\n    )\n\n}\n\nexport default ApiCalls","import ApiCalls from \"./ApiCalls\";\n\nclass NoteApiCalls extends ApiCalls{\n    constructor(){\n        super('note');\n    }\n    getNote= (noteId,token, callback)=>this.getObject(noteId, token,callback);\n    modifyNote=(modifiedNote,token,callback)=>this.modifyObject(modifiedNote,token,callback);\n    deleteNote=(noteId,token, callback)=>this.deleteObject(noteId,token,callback);\n    createNote=(newNote, parentType, parentId, token, callback)=>this.createObject(newNote,parentType,parentId,token,callback);\n}\n\nexport default NoteApiCalls;","import React from \"react\";\nimport DisplayStates from \"../Enums/DisplayStates\";\n\n\n\nfunction Note(props) {\n    return (\n        <div className='note' id={props.data.id}>\n            <div className='dataWrapper'>\n                <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                    <div className='property'>\n                        {props.data.dateTime} : {props.data.note}\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Note;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TextInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='text'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TextInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass PasswordInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='password'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange = {this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default PasswordInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ResetInput extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='reset'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResetInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass CheckboxInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            checked:this.props.checked?this.state.checked:false\n        }\n    }\n\n    //not tested yet might not work\n    handleCheck(event){\n        this.setState({checked:event.target.checked})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='checkbox'\n                        name={this.props.name.toLowerCase()}\n                        checked = {this.state.checked}\n                        onChange={this.handleCheck.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass SubmitInput extends Component{\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                    <input\n                        type='submit'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n             </React.Fragment>\n        );\n    }\n}\n\nexport default SubmitInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ButtonInput extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='button'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ButtonInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass DateInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n\n            value:this.props.value instanceof Date?this.props.value.getDate():new Date(this.props.value).getDate()\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}::\n                    <input\n                        type='date'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DateInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass EmailInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='email'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EmailInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass NumberInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.props.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NumberInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TimeIntervalInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </fragment>\n        );\n    }\n}\n\nexport default TimeIntervalInput;","import TextInput from '../InputComponents/TextInput';\nimport PasswordInput from '../InputComponents/PasswordInput';\nimport ResetInput from '../InputComponents/ResetInput';\nimport CheckboxInput from '../InputComponents/CheckboxInput';\nimport SubmitInput from '../InputComponents/SubmitInput';\nimport ButtonInput from '../InputComponents/ButtonInput';\nimport DateInput from '../InputComponents/DateInput';\nimport EmailInput from '../InputComponents/EmailInput';\nimport NumberInput from '../InputComponents/NumberInput';\nimport TimeIntervalInput from '../InputComponents/TimeIntervalInput'\n\nconst InputTypes = Object.freeze({\n    TEXT: TextInput,\n    PASSWORD: PasswordInput,\n    SUBMIT: SubmitInput,\n    RESET: ResetInput,\n    CHECKBOX: CheckboxInput,\n    BUTTON: ButtonInput,\n    DATE: DateInput,\n    EMAIL: EmailInput,\n    NUMBER: NumberInput,\n    TIMEINTERVAL: TimeIntervalInput\n});\n\n\n\nexport default InputTypes;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass FormBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n\n    }\n\n\n    render() {\n         return <form id={this.props.id}>\n            {\n\n                this.props.inputFields.map(input=>{\n                    const propsWithKey = Object.assign({\n                        key:\"\" + this.props.data._id + input.props.name,\n                        value: this.props.data[input.props.name]}\n                        ,input.props);\n                    return input.content?\n                        React.createElement(input.type, propsWithKey,input.content):\n                        React.createElement(input.type, propsWithKey);\n                })\n            }\n        </form>\n    }\n}\n\nexport default FormBuilder;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport formUtil from '../util/formUtil'\n\nclass TaskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'description'}, type: InputTypes.TEXT},\n                {props: {name: 'deadline'}, type: InputTypes.DATE},\n                {props: {name: 'startDate'}, type: InputTypes.DATE},\n                {props: {name: 'external'}, type: InputTypes.CHECKBOX},\n                {props: {name: 'estTime'}, type: InputTypes.NUMBER},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n         };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const taskJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(taskJson)\n\n    }\n\n\n    render() {\n        return <div style = {{display:this.props.display?this.props.display:'block'}} className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\nexport default TaskForm;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from \"./TaskForm\";\nclass NoteForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {Note: 'name',}, type: InputTypes.TEXT},\n            ],\n\n\n        };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const noteJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(noteJson)\n\n    }\n\n\n    render() {\n        return <div className=\"noteInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\n\nexport default NoteForm;\n","class NoteObject{\n    constructor(note, timeStamp, parent, parentType){\n        this.timeStamp = timeStamp?timeStamp:new Date();\n        this.note=note?note:\"\";\n        this.parent=parent?parent:0;\n        this.parentType=parentType?parentType:\"\";\n    }\n}\n\nexport default NoteObject;","import React from \"react\";\n\n\nfunction ComponentName(props) {\n    return (\n        <div>\n            Loading gif...\n        </div>\n    );\n}\n\nexport default ComponentName;","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport NoteApiCalls from '../ApiCallFunctions/NoteApiCalls'\nimport Note from \"../BranchComponents/Note\";\nimport NoteForm from '../FormComponents/NoteForm'\nimport NoteObject from '../ObjectClasses/NoteObject'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\n\nclass NoteContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            task: undefined,\n            noteApiCalls: new NoteApiCalls()\n        }\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.noteApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedNote) => this.setState({task: returnedNote}))\n    };\n\n\n    modify =(modifyNote) =>{\n        this.state.noteApiCalls.modifyObject(modifyNote,this.props.xAccessToken,(returnedNote) => {\n                this.setState({task: returnedNote, displayState: DisplayStates.EXPANDED})\n            }\n        );\n    };\n\n\n    render() {\n        if (this.state.task) {\n             return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <NoteForm data={this.state.note} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Note\n                        data={this.state.task}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                    />\n            )\n        } else if(!this.props.id){\n            return <NoteForm data={new NoteObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addNote}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default NoteContainer;\n\n","import React, {Component} from 'react';\nimport '../App.css';\nimport NoteContainer from \"../ContainerComponents/NoteContainer\";\n\nclass NoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addNote: false\n        };\n    }\n\n    addNote = ()=>this.setState({addNote:true});\n    //null eventId will create a new event\n    addNewNoteTrue= data=>{\n        return [...data, null];\n    }\n\n    render() {\n        const noteListData = this.state.addNote ? this.addNewNoteTrue(this.props.data) : this.props.data;\n        return (\n            <div className='noteList' id={this.props.catId + 'NoteList'}>\n                {\n                    noteListData.map(\n                        noteId => {\n                            return <NoteContainer\n                                id={noteId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport TaskList from \"../ListComponents/TaskList\";\nimport NoteList from \"../ListComponents/NoteList\";\nimport EventList from \"../ListComponents/EventList\";\n\n\nfunction Event(props) {\n    return (\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Date : {props.data.date}\n                </div>\n                <div className='property'>\n                    Length : {props.data.length}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList\n                                data = {props.data.notes}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport formUtil from '../util/formUtil'\n\nclass EventForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'date'}, type: InputTypes.DATE},\n                {props: {name: 'length'}, type: InputTypes.NUMBER},\n            ],\n        };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const taskJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(taskJson)\n\n    }\n\n\n    render() {\n        return <div className=\"eventInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\nexport default EventForm;\n","import ApiCalls from \"./ApiCalls\";\n\n\nclass EventApiCalls extends ApiCalls{\n    constructor(){\n        super('event')\n    }\n    getEvent= (eventId,token, callback)=>this.getObject(eventId, token,callback);\n    modifyEvent=(modifiedEvent,token,callback)=>this.modifyObject(modifiedEvent,token,callback);\n    deleteEvent=(eventId,token, callback)=>this.deleteObject(eventId,token,callback);\n    createEvent=(newEvent, parentType, parentId, token, callback)=>this.createObject(newEvent,parentType,parentId,token,callback);\n    rebaseEvent=(eventId, newParentType, newParentId, token, callback)=>this.rebaseObject(eventId,newParentType,newParentId,token,callback);\n}\n\nexport default EventApiCalls;","class EventObject{\n   constructor(name,\n               dateTime,\n               length,\n               notes,\n               prqTask,\n               prqEvents,\n               parent,\n               parentType,\n               completed,\n               prevDates,\n               accoundId){\n       this.name = name?name:\"\";\n       this.dateTime = dateTime?dateTime:new Date();\n       this.length = length?length:0;\n       this.notes = notes?notes:[];\n       this.prqTask = prqTask?prqTask:[];\n       this.prqEvents = prqEvents?prqEvents:[];\n       this.parent = parent?parent:0;\n       this.completed = completed?completed:false;\n       this.prevDates = prevDates?prevDates:[];\n       this.accountId = accoundId?accoundId:0;\n\n   }\n\n}\n\nexport default EventObject;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Event from \"../BranchComponents/Event\";\nimport EventForm from \"../FormComponents/EventForm\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport EventApiCalls from \"../ApiCallFunctions/EventApiCalls\";\nimport EventObject from '../ObjectClasses/EventObject'\n\nclass EventContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            event: undefined,\n            eventApiCalls: new EventApiCalls()\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.eventApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedEvent) => this.setState({event: returnedEvent}))\n    };\n\n\n    modify =(modifiedEvent) =>{\n        this.state.eventApiCalls.modifyObject(modifiedEvent,this.props.xAccessToken,(returnedEvent) => {\n                this.setState({task: returnedEvent, displayState: DisplayStates.EXPANDED})\n            }\n        );\n    };\n\n    render() {\n        if (this.state.event) {\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <EventForm data={this.state.event} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Event\n                        data={this.state.event}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                    />\n            )\n        } else if(!this.props.id){\n            return <EventForm data={new EventObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addEvent}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default EventContainer;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport Event from \"../BranchComponents/Event\";\nimport TaskContainer from \"../ContainerComponents/TaskContainer\";\nimport EventContainer from \"../ContainerComponents/EventContainer\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEvent: false\n        };\n    }\n\n    addEvent = ()=>this.setState({addNote:true});\n    //null eventId will create a new event\n    addNewEventTrue=data=>{\n        return [...data, null];\n    }\n\n    render() {\n        const eventListData = this.state.addEvent ? this.addNewEventTrue(this.props.data) : this.props.data;\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    eventListData.map(\n                        evtId => {\n                            return <EventContainer\n                                id={evtId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React from \"react\";\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport NoteList from \"../ListComponents/NoteList\";\n\nfunction Task(props) {\n\n    const showDeleteModal =  ()=>{\n        props.showDeleteModal(props.data._id,props.data.name);\n    }\n    return <div className='task ' id={props.data._id}>\n        <div className='collapser'>\n            <button onClick={props.buttonAction}>\n                {props.displayState === DisplayStates.EXPANDED ? 'V' : '>'}\n            </button>\n        </div>\n\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Description : {props.data.description}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                <div className='property'>\n                    Deadline : {props.data.deadline}\n                </div>\n                <div className='property'>\n                    Start Date : {props.data.startDate}\n                </div>\n                <div className='property'>\n                    External : {props.data.external}\n                </div>\n                <div className='property'>\n                    Estimated Time : {props.data.estTime}\n                </div>\n                {\n                    props.data.subTasks?\n                        <div className='sublist'>\n                            <h5>SubTasks:</h5>\n                            <TaskList\n                                data = {props.data.subTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                                parentType = \"task\"\n                                parentId = {props.data._id}\n                                update = {props.update}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.events?\n                        <div className='sublist'>\n                            <h5>Events:</h5>\n                            <EventList data = {props.data.events}\n                                       xAccessToken = {props.xAccessToken}\n                                       modifyListActions = {props.modifyListActions}\n                                       parentType = \"task\"\n                                       parentId = {props.data._id}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList\n                                data = {props.data.notes}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                                parentType = \"task\"\n                                parentId = {props.data._id}\n\n                            />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n        <div className='editDeleteButton'>\n            <button onClick={props.editAction} className ='inputButton'>\n                <img src='../src/img/edit.svg' />\n            </button>\n            <button onClick={showDeleteModal} className='inputButton'>\n                <img src='../src/img/trash.png' />\n            </button>\n        </div>\n    </div>\n}\n\nexport default Task;","import ApiCalls from \"./ApiCalls\";\n\n\nclass TaskApiCalls extends ApiCalls{\n    constructor(){\n        super('task');\n    }\n    getTask= (taskId,token, callback)=>this.getObject(taskId, token,callback);\n    modifyTask=(modifiedTask,token,callback)=>this.modifyObject(modifiedTask,token,callback);\n    deleteTaskAndChildren=(taskId,token, callback)=>this.deleteObject(taskId,token,callback);\n    deleteTaskRebaseChildren=(taskId, token, newParentType,newParentId,callback)=>this.deleteObjectRebaseChildren(taskId,token,newParentType,newParentId)\n    createTask=(newTask, parentType, parentId, token, callback)=>this.createObject(newTask,parentType,parentId,token,callback);\n    rebaseTask=(taskId,newParentType,newParentId,token,callback)=>this.rebaseObject(taskId,newParentType,newParentId,token,callback);\n}\n\nexport default TaskApiCalls;","class TaskObject {\n    constructor(name,\n                description,\n                subTasks,\n                events,\n                completed,\n                deadline,\n                startDate,\n                notes,\n                external,\n                parent,\n                parentType,\n                prqTask,\n                prqEvent,\n                estTime,\n                accountId) {\n        this.name = name?name: \"\";\n        this.description =description?description: \"\";\n        this.subTasks=subTasks?subTasks: [];\n        this.events=events?events:[];\n        this.completed= completed?completed:\"\";\n        this.deadline=deadline?deadline:new Date();\n        this.startDate=startDate?startDate:new Date();\n        this.notes=notes?notes:[];\n        this.external=external?external:false;\n        this.parent=parent?parent:0;\n        this.parentType=parentType?parentType:\"\";\n        this.prqTask=prqTask?prqTask:[];\n        this.prqEvent=prqEvent?prqEvent:[];\n        this.estTime=estTime?estTime:0;\n        this.accountId=accountId?accountId:\"\";\n    }\n\n}\n\nexport default TaskObject;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport TaskObject from '../ObjectClasses/TaskObject'\n\n\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            task: undefined,\n            taskApiCalls: new TaskApiCalls(),\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.taskApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedTask) => this.setState({task: returnedTask}))\n    };\n\n\n    modify =(modifiedTask) =>{\n        this.state.taskApiCalls.modifyObject(modifiedTask,this.props.xAccessToken,(returnedTask) => {\n            this.setState({task: returnedTask, displayState: DisplayStates.EXPANDED})\n        }\n        );\n    };\n\n\n\n\n\n\n\n\n\n    render() {\n        if (this.state.task) {\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <TaskForm id = {this.props.id} display = 'block' data={this.state.task} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Task\n                        data={this.state.task}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        showDeleteModal = {this.props.showDeleteModal}\n                        update = {this.update}\n                    />\n            )\n        } else if(this.props.newTask){\n            return <TaskForm display = {this.props.display} data={new TaskObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.addTask} id={this.props.id}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default TaskContainer;\n","import fetchUtil from '../util/fetchUtil'\nimport ApiCalls from './ApiCalls'\n\n\n\n/**\n * Create a task\n * @param task: the task to create\n * @param parentType: \"TaskObject\" or \"Category\"\n * @param parentId: the id of the parent\n */\nclass CategoryApiCalls extends ApiCalls {\n    constructor(){\n        super('category');\n    }\n\n    getCategory= (id,token, callback)=>this.getObject(id, token,callback);\n    modifyCategory=(modifiedCategory,token,callback)=>this.modifyObject(modifiedCategory,token,callback);\n    deleteCategoryAndChildren=(categoryId,token, callback)=>this.deleteObject(categoryId,token,callback);\n    deleteCategoryRebaseChildren=(categoryId,token,newParentType,newParentId,callback)=>this.deleteObjectRebaseChildren(categoryId,token,newParentType,newParentType,callback);\n    addCategory=(category,token,callback)=>fetchUtil.postData(\n        //don't use ApiCalls because category is always child of root so no parentTyoe or parentId\n        \"category/\",\n        token,\n        category,\n        returnedData=>callback(returnedData)\n    )\n\n}\n\nexport default CategoryApiCalls","import React, {Component} from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport EventApiCalls from '../ApiCallFunctions/EventApiCalls'\n\nclass NewParentSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            suggestions:[],\n            branches:[],\n            rebaseParent:null\n        };\n    }\n    apiCalls = {'category':new CategoryApiCalls(),'task':new TaskApiCalls(),'event':new EventApiCalls()}\n\n    getSuggestions = value => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        return inputLength === 0 ? [] : this.state.branches.filter(branch =>\n            branch.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n    };\n\n    componentDidMount() {\n        this.populateList(this.props.parentTypes)\n    }\n\n\n    populateList= (types)=>{\n        return types.map(\n            type=>{\n                const apiCall = this.apiCalls[type];\n                apiCall.getAllObjects(this.props.xAccessToken,response=>{this.setState(\n                    {branches: this.state.branches.concat(\n                            response\n                                .filter(item=>item._id!==this.props.itemToDeleteId)\n                                .map(item=>Object.assign(item,{type:type}))\n                        )}\n                )}\n                )\n            }\n        );\n    };\n\n\n    getSuggestionValue=suggestion=>suggestion.name;\n\n    renderSuggestion = suggestion => <div>{suggestion.name}</div>;\n\n    onSuggestionsClearRequested =() => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    onChange = (event, {newValue})=>{\n        this.setState({value:newValue})\n    };\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n    };\n\n    onSuggestionSelected = (event,{suggestion, suggestionValue, suggestionIndex, sectionIndex, method}) =>{\n        this.setState({rebaseParent:suggestion});\n    };\n\n    deleteAndRebaseChildren=()=>{\n        this.props.rebaseChildren(this.state.rebaseParent.type,this.state.rebaseParent._id);\n    };\n\n    render() {\n        let inputProps={\n            placeholder: 'Type the name of the new parent',\n            value:this.state.value,\n            onChange: this.onChange\n        };\n        return <div>\n            Rebase child to parent:\n            <Autosuggest\n                suggestions={this.state.suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                getSuggestionValue={this.getSuggestionValue}\n                renderSuggestion={this.renderSuggestion}\n                inputProps={inputProps}\n                onSuggestionSelected = {this.onSuggestionSelected}\n            />\n            <button disabled={!this.state.rebaseParent} onClick={this.deleteAndRebaseChildren}>Delete and rebase children</button>\n        </div>\n\n    }\n}\n\nexport default NewParentSearch;\n","import React from \"react\";\nimport NewParentSearch from \"../InputComponents/NewParentSearch\";\nimport Modal from 'react-modal'\n\nconst customStyles = {\n    content : {\n        top                   : '50%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)'\n    }\n};\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root')\n\n\n/**\n * @param props: !modalIsOpen, !componentType, !componentName !parentTypes !rebaseChildren()  !deleteChildren()\n */\nclass DeleteModal extends React.Component  {\n    constructor(props){\n        super(props);\n        this.state={\n        }\n\n\n    }\n\n    deleteChildren=()=>{\n      this.props.deleteChildren(this.props.taskToDeleteId);\n      this.props.closeModal();\n    };\n\n    rebaseChildren=(newParentType, newParentId)=>{\n        this.props.rebaseChildren(this.props.taskToDeleteId, newParentType, newParentId);\n        this.props.closeModal();\n    }\n\n\n\n\n\n\n\n    render(){\n            return <Modal\n                isOpen={this.props.modalIsOpen}\n                onAfterOpen={this.props.afterOpenModal}\n                onRequestClose={this.props.closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n                The {this.props.componentType} {this.props.componentName} that you are deleting contains child Tasks or Events.\n                Do you want to delete the children or assign them to a new parent?\n                <button className=\"deleteChildren\" onClick={this.deleteChildren}>Delete Children</button>\n                <NewParentSearch itemToDeleteId={this.props.taskToDeleteId} parentTypes={this.props.parentTypes} rebaseChildren = {this.rebaseChildren} xAccessToken={this.props.xAccessToken}/>\n                <button onClick={this.props.closeModal} id='closeModalButton'>Cancel delete</button>\n\n            </Modal>\n            }\n\n    }\n\n\nexport default DeleteModal;","import React, { Component } from 'react';\nimport '../App.css';\nimport TaskContainer from '../ContainerComponents/TaskContainer';\nimport TaskObject from '../ObjectClasses/TaskObject'\nimport DeleteModal from \"../Modals/DeleteModal\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport TaskForm from \"../FormComponents/TaskForm\";\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newTask:false,\n            taskToDeleteName: '',\n            taskToDeleteId: 0,\n            deleteModalOpen:false,\n        };\n\n        this.taskApiCalls = new TaskApiCalls();\n        this.showDeleteModal = this.showDeleteModal.bind(this);\n        this.afterOpenModal = this.afterOpenModal.bind(this);\n        this.closeDeleteModal = this.closeDeleteModal.bind(this);\n\n    }\n\n    newTask = ()=>this.setState({newTask:true});\n\n    addTask =(task)=>{\n        this.taskApiCalls.createTask(task, this.props.parentType, this.props.parentId, this.props.xAccessToken, this.props.update)\n        this.state.newTask = false;\n    };\n\n    deleteTaskRebaseChildren=(taskId, newParentType, newParentId)=>{\n        this.taskApiCalls.deleteTaskRebaseChildren(taskId, this.props.xAccessToken,newParentType, newParentId, this.props.update);\n    };\n    deleteTaskAndChildren=(taskId)=>{\n        this.taskApiCalls.deleteTaskAndChildren(taskId,this.props.xAccessToken,this.props.update);\n    };\n\n    showDeleteModal=(taskId, taskName)=>{\n        this.setState({taskToDeleteName: taskName, taskToDeleteId: taskId});\n        this.setState({deleteModalOpen:true});\n    }\n\n    afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        this.subtitle.style.color = '#f00';\n    }\n\n    closeDeleteModal() {\n        this.setState({deleteModalOpen: false});\n    }\n\n\n    render() {\n        return (\n            <div className=\"TaskList\" id={this.props.catId + \"Tasks\"}>\n\n                {\n                    //fixme 190314: taskId here is the whole task, not just the id. so when I do `!taskId` in the task component it's not undefined\n                    this.props.data.map(\n                        taskId => {\n                            return <TaskContainer\n                                id={taskId}\n                                xAccessToken = {this.props.xAccessToken}\n                                showDeleteModal = {this.showDeleteModal}\n                                addTask = {this.addTask}\n                            />\n                        }\n                    )\n                }\n                <TaskContainer display = {this.state.newTask?'block':'none'}\n                               id={`NewTaskCat${this.props.parentId}`}\n                               xAccessToken = {this.props.xAccessToken}\n                               showDeleteModal = {this.showDeleteModal}\n                               addTask = {this.addTask}\n                               newTask = {true}\n                />\n                <div style = {{display:this.state.newTask?'none':'block'}} className='addButton'>\n                    <button  onClick={this.newTask}>+</button>\n                </div>\n                <DeleteModal\n                    modalIsOpen = {this.state.deleteModalOpen}\n                    closeModal = {this.closeDeleteModal}\n                    onAfterOpen = {this.afterOpenModal}\n                    componentType='task'\n                    parentTypes = {['category','task']}\n                    componentName = {this.state.taskToDeleteName}\n                    rebaseChildren = {this.deleteTaskRebaseChildren}\n                    deleteChildren = {this.deleteTaskAndChildren}\n                    taskToDeleteName = {this.state.taskToDeleteName}\n                    taskToDeleteId = {this.state.taskToDeleteId}\n                    xAccessToken = {this.props.xAccessToken}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport '../App.css';\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\n\nfunction Category(props){\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <h2 className = \"catName\">\n                {props.data.name}\n            </h2>\n            <h3>Tasks</h3>\n            <TaskList\n                data = {props.data.tasks}\n                parentType = \"category\"\n                parentId={props.data._id}\n                modifyListActions = {props.modifyListActions}\n                xAccessToken = {props.xAccessToken}\n                update={props.update}\n            />\n            <h3 >Events</h3>\n            <EventList\n                data={props.data.events} catId={props.data._id}\n                parentType = \"category\"\n                modifyListActions = {props.modifyListActions}\n                parentId={props.data._id}\n                xAccessToken = {props.xAccessToken}\n                update = {props.update}\n            />\n        </div>\n    );\n}\n\nexport default Category;","import React, {Component} from 'react';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from \"./FormBuilder\";\n\nclass CategoryForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n            ],\n\n\n        };\n\n\n\n\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const categoryJson = Object.assign(this.props.category, formData);\n        this.props.submitAction(categoryJson)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.category}\n            />\n        </div>\n    }\n\n}\n\nexport default CategoryForm;\n","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport Category from \"../BranchComponents/Category\";\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport CategoryForm from \"../FormComponents/CategoryForm\";\n\n\n\n\nclass CategoryContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED,\n            category: undefined,\n            categoryApiCalls: new CategoryApiCalls()\n        };\n    }\n\n    expandCollapse=()=>{\n        this.state.displayState===DisplayStates.COLLAPSED?\n            this.setState({displayState:DisplayStates.EXPANDED})\n            : this.setState({displayState:DisplayStates.COLLAPSED});\n    }\n\n\n    input=()=>{\n        this.setState({displayState:DisplayStates.INPUT});\n    };\n\n    update=()=>{\n        this.state.categoryApiCalls.getCategory(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n    modify=(modifiedCategory)=> {\n        this.state.categoryApiCalls.modifyCategory(\n            modifiedCategory,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n\n\n    render() {\n        if(this.state.category) {\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <CategoryForm data={this.props.data} submitAction = {this.modify}/> :\n                    <Category\n                        data={this.state.category}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        update = {this.update}\n                    />\n            )\n        } else {\n            this.update();\n            return <LoadingGif/>\n        }\n    }\n\n}\n\nexport default CategoryContainer;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport fetchUtil from '../util/fetchUtil';\nimport Category from '../BranchComponents/Category';\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport CategoryContainer from \"../ContainerComponents/CategoryContainer\";\n\n//TODO 181231: I want to change this so this component doesn't get the categories, the user component does. But I'll have to change the API to do that.\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: undefined,\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n        };\n    }\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                'category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData})\n                }\n            );\n            return (\n                <LoadingGif/>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <CategoryContainer id = {cat._id} xAccessToken = {this.props.xAccessToken}/>\n                                )\n                            }\n                        )\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React from \"react\";\n\nconst UserContext = React.createContext({});\n\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './ListComponents/CategoryList';\nimport LoginForm from './FormComponents/LoginForm';\nimport fetchUtil from './util/fetchUtil';\nimport {UserProvider} from './UserContext';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\nclass User extends Component {\n\n   \n\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"http://localhost:3434\",//\"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        };\n        this.login=this.login.bind(this);\n    }\n\n    componentDidMount(){\n\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            'account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(\n              <div id='userRoot'>\n                  <UserProvider value = {this.state.xAccessToken}>\n                    <CategoryList xAccessToken = {this.state.xAccessToken}/>\n                  </UserProvider>\n              </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n//registerServiceWorker();\n//unregister();\n"],"sourceRoot":""}