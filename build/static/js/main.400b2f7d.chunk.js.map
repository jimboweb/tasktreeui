{"version":3,"sources":["logo.svg","util/formUtil.js","util/fetchUtil.js","Enums/DisplayStates.js","BranchComponents/Event.js","ListComponents/EventList.js","ListComponents/NoteList.js","BranchComponents/Task.js","InputComponents/TimeIntervalInput.js","Enums/InputTypes.js","FormComponents/FormBuilder.js","FormComponents/TaskForm.js","ContainerComponents/TaskContainer.js","ListComponents/TaskList.js","BranchComponents/Category.js","ListComponents/CategoryList.js","FormComponents/LoginForm.js","UserContext.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","Event","props","react_default","a","createElement","EventList","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","className","id","catId","evt","BranchComponents_Event","Component","NoteList","Task","_id","onClick","buttonAction","displayState","name","description","completed","deadline","startDate","external","estTime","subTasks","ListComponents_TaskList","events","ListComponents_EventList","prqTasks","prqEvents","notes","ListComponents_NoteList","editAction","src","TimeIntervalInput","InputTypes","TEXT","PASSWORD","SUBMIT","RESET","RADIO","CHECKBOX","BUTTON","DATE","EMAIL","NUMBER","TIMEINTERVAL","FormBuilder","_this2","inputFields","input","propsWithKeyAndHandlers","assign","task","handlers","value","content","React","type","TaskForm","handleCheck","handleCancel","handleReset","handleSubmit","handleChange","bind","assertThisInitialized","event","setState","defineProperty","target","submit","preventDefault","reset","cancel","checked","FormComponents_FormBuilder","TaskContainer","expandCollapse","update","BranchComponents_Task","FormComponents_TaskForm","TaskList","fetchOptions","x-access-token","tsk","ContainerComponents_TaskContainer","Category","children","tasks","CategoryList","components","categories","undefined","cat","BranchComponents_Category","xAccessToken","responseData","LoginForm","username","password","login","onChange","UserContext","createContext","UserProvider","Provider","User","Consumer","apiUrl","uiUrl","ListComponents_CategoryList","FormComponents_LoginForm","App","src_User","isLocalhost","Boolean","window","location","hostname","match","register","navigator","URL","process","origin","addEventListener","swUrl","concat","response","status","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.400b2f7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        //FIXME: obj.params is not a thing. what should it be?\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    }\n}\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      //return \"http://localhost:3434\";\n      return \"https://insolent-preclude.herokuapp.com\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, data, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n        const headers = new Headers(\n            {\n                'Content-Type': 'application/x-www-form-urlencoded'\n\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import React from \"react\";\nimport '../App.css';\n\n\nfunction Event(props) {\n    return (\n        <div>\n\n        </div>\n    );\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport '../App.css';\nimport Event from \"../BranchComponents/Event\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    this.props.data.map(\n                        evt => {\n                            return <Event data={evt}/>\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass NoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return <div></div>\n    }\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport NoteList from \"../ListComponents/NoteList\";\n\n//TODO 181122: create an edit button that changes displayStates to input\nfunction Task(props) {\n\n\n    return <div className='task ' id={props.data._id}>\n        <div className='collapser'>\n            <button onClick={props.buttonAction}>\n                {props.displayState === DisplayStates.EXPANDED ? '-' : '+'}\n            </button>\n        </div>\n\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Description : {props.data.description}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                <div className='property'>\n                    Deadline : {props.data.deadline}\n                </div>\n                <div className='property'>\n                    Start Date : {props.data.startDate}\n                </div>\n                <div className='property'>\n                    External : {props.data.external}\n                </div>\n                <div className='property'>\n                    Estimated Time : {props.data.estTime}\n                </div>\n                {\n                    props.data.subTasks?\n                        <div className='sublist'>\n                            <h5>SubTasks:</h5>\n                            <TaskList data = {props.data.subTasks} />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.events?\n                        <div className='sublist'>\n                            <h5>Events:</h5>\n                            <EventList data = {props.data.events} />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList data = {props.data.prqTasks} />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList data = {props.data.prqEvents} />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList data = {props.data.notes} />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n        <div className='editButton'>\n            <button onClick={props.editAction}>\n                <img src='../img/edit.svg' />\n            </button>\n        </div>\n    </div>\n}\n\nexport default Task;","import React from \"react\";\nimport '../App.css';\n\n\nfunction TimeIntervalInput(props) {\n    return (\n        <fragment>\n            <label>\n                {props.name}:\n                <input\n                    type='number'\n                    name={props.name.toLowerCase()}\n                    //TODO 181111: change props.value to current task item value in each of these\n                    value={props.value}\n                    onChange = {props.handlers.handleChange}\n                    {...this.props.attributes}\n                />\n            </label>\n        </fragment>\n    );\n}\n\nexport default TimeIntervalInput;","import TextInput from '../InputComponents/TextInput';\nimport PasswordInput from '../InputComponents/PasswordInput';\nimport ResetInput from '../InputComponents/ResetInput';\nimport CheckboxInput from '../InputComponents/CheckboxInput';\nimport SubmitInput from '../InputComponents/SubmitInput';\nimport RadioInput from '../InputComponents/RadioInput';\nimport ButtonInput from '../InputComponents/ButtonInput';\nimport DateInput from \"../InputComponents/DateInput\";\nimport EmailInput from '../InputComponents/EmailInput';\nimport NumberInput from '../InputComponents/NumberInput';\nimport TimeIntervalInput from '../InputComponents/TimeIntervalInput'\n\nconst InputTypes = Object.freeze({\n    TEXT: 'TextInput',\n    PASSWORD: 'PasswordInput',\n    SUBMIT: 'SubmitInput',\n    RESET: 'ResetInput',\n    RADIO: 'RadioInput',\n    CHECKBOX: 'CheckboxInput',\n    BUTTON: 'ButtonInput',\n    DATE: 'DateInput',\n    EMAIL: 'EmailInput',\n    NUMBER: 'NumberInput',\n    TIMEINTERVAL: 'TimeIntervalInput'\n});\n//TODO 181110: make a StandardForm object that creates form inputFields for each of these types\n//TODO 181110: put that in the TaskForm section\n\nexport default InputTypes;\n","import React, {Component} from 'react';\nimport TextInput from '../InputComponents/TextInput';\nimport PasswordInput from '../InputComponents/PasswordInput';\nimport ResetInput from '../InputComponents/ResetInput';\nimport CheckboxInput from '../InputComponents/CheckboxInput';\nimport SubmitInput from '../InputComponents/SubmitInput';\nimport RadioInput from '../InputComponents/RadioInput';\nimport ButtonInput from '../InputComponents/ButtonInput';\nimport DateInput from \"../InputComponents/DateInput\";\nimport EmailInput from '../InputComponents/EmailInput';\nimport NumberInput from '../InputComponents/NumberInput';\nimport TimeIntervalInput from '../InputComponents/TimeIntervalInput'\nimport '../App.css';\n\nclass FormBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n//FIXME 181124: createElement creating null even though it's getting correct type OOOHHH it should be a string\n    render() {\n        return <form id={this.props.id}>\n            {\n\n                this.props.inputFields.map(input=>{\n                    const propsWithKeyAndHandlers = Object.assign({\n                        key:\"\" + this.props.task._id + input.props.name,\n                        handlers:this.props.handlers,\n                        value: this.props.task[input.props.name]}\n                        ,input.props);\n                    input.content?\n                        React.createElement(input.props.type, propsWithKeyAndHandlers,input.content):\n                        React.createElement(\"div\", propsWithKeyAndHandlers);\n                })\n            }\n        </form>\n    }\n}\n\nexport default FormBuilder;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\n\nclass TaskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name:'name', type:InputTypes.TEXT}},\n                {props: {name: 'description', type:InputTypes.TEXT}},\n                {props: {name:'deadline',type:InputTypes.DATE}},\n                {props:{name:'startDate',type:InputTypes.DATE}},\n                {props: {name:'external',type:InputTypes.CHECKBOX}},\n                {props: {name:'estTime',type:InputTypes.NUMBER}}\n            ],\n            handlers : {\n                handleCheck : this.handleCheck,\n                handleCancel: this.handleCancel,\n                handleReset: this.handleReset,\n                handleSubmit:this.handleSubmit,\n                handleChange:this.handleChange\n\n            }\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleCheck = this.handleCheck.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.submit(this.state.task);\n        event.preventDefault();\n    }\n\n    handleReset(event) {\n        this.props.reset(this.state.task);\n        event.preventDefault();\n    }\n\n    handleCancel(event){\n        this.props.cancel(this.state.task);\n        event.preventDefault();\n\n    }\n\n    handleCheck(event){\n        this.setState({[event.target.name]: event.target.checked});\n    }\n\n\n\n    render() {\n\n        return <div className=\"taskInput\" id={this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                task = {this.props.task}\n            />\n        </div>\n    }\n}\n\nexport default TaskForm;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED\n        };\n    }\n\n    expandCollapse=()=>{\n        this.state.displayState===DisplayStates.COLLAPSED?\n        this.setState({displayState:DisplayStates.EXPANDED})\n        : this.setState({displayState:DisplayStates.COLLAPSED});\n    }\n\n\n    input=()=>{\n        this.setState({displayState:DisplayStates.INPUT});\n    };\n\n    update=(data)=>{\n        // fetchUtil.postData()\n    };\n\n\n    render() {\n        return (\n            this.state.displayState!==DisplayStates.INPUT?\n            <Task data={this.props.data} buttonAction = {this.expandCollapse} editAction = {this.input} displayState = {this.state.displayState}/>\n            :<TaskForm task={this.props.data}/>\n        )\n    }\n}\n\nexport default TaskContainer;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport TaskContainer from '../ContainerComponents/TaskContainer';\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n        };\n    }\n\n\n    render() {\n        return (\n            <div className=\"TaskList\" id={this.props.catId+\"Tasks\"}>\n                {\n                    this.props.data.map(\n                        tsk=>{\n                            return <TaskContainer data = {tsk}/>\n\n                        }\n                    )\n                }\n            </div>\n        );\n\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport '../App.css';\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\n\n\nfunction Category(props){\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <h2 className = \"catName\">\n                {props.data.name}\n            </h2>\n            <h3>Tasks</h3>\n            <TaskList data = {props.data.children.tasks} catId={props.data._id}/>\n            <h3 >Events</h3>\n            <EventList data={props.data.children.events} catId={props.data._id}/>\n        </div>\n    );\n}\n\nexport default Category;","import React, { Component } from 'react';\nimport '../App.css';\nimport fetchUtil from '../util/fetchUtil';\nimport Category from '../BranchComponents/Category';\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            components: [],\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n            categories: undefined\n        };\n    }\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                '/category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData})\n                }\n            );\n            return (\n                <div>loading gif...</div>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <Category id = {cat._id} data = {cat}/>\n                                )\n                            }\n                        )\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React from \"react\";\n\nconst UserContext = React.createContext({});\n\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './ListComponents/CategoryList';\nimport LoginForm from './FormComponents/LoginForm';\nimport fetchUtil from './util/fetchUtil';\nimport {UserProvider} from './UserContext';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\n//TODO 181028: put username and xAccessToken in context so I can use it from anywhere\nclass User extends Component {\n\n   \n\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        };\n        this.login=this.login.bind(this);\n    }\n\n    componentDidMount(){\n\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            '/account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(\n              <div id='userRoot'>\n                  <UserProvider username = {this.state.username} xAccessToken = {this.state.xAccessToken}>\n                    <CategoryList xAccessToken = {this.state.xAccessToken}/>\n                  </UserProvider>\n              </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\nunregister();\n"],"sourceRoot":""}