{"version":3,"sources":["logo.svg","util/formUtil.js","util/fetchUtil.js","DisplayComponents/LoadingGif.js","Enums/DisplayStates.js","ApiCallFunctions/ApiCalls.js","ApiCallFunctions/NoteApiCalls.js","BranchComponents/Note.js","InputComponents/TextInput.js","InputComponents/PasswordInput.js","InputComponents/ResetInput.js","InputComponents/CheckboxInput.js","InputComponents/SubmitInput.js","InputComponents/ButtonInput.js","InputComponents/DateInput.js","InputComponents/EmailInput.js","InputComponents/NumberInput.js","InputComponents/TimeIntervalInput.js","Enums/InputTypes.js","FormComponents/FormBuilder.js","FormComponents/NoteForm.js","ObjectClasses/NoteObject.js","ContainerComponents/NoteContainer.js","ListComponents/NoteList.js","BranchComponents/Event.js","FormComponents/EventForm.js","ApiCallFunctions/EventApiCalls.js","ObjectClasses/EventObject.js","ContainerComponents/EventContainer.js","ListComponents/EventList.js","BranchComponents/Task.js","FormComponents/TaskForm.js","ApiCallFunctions/TaskApiCalls.js","ObjectClasses/TaskObject.js","ContainerComponents/TaskContainer.js","ApiCallFunctions/CategoryApiCalls.js","InputComponents/NewParentSearch.js","Modals/DeleteModal.js","ListComponents/TaskList.js","BranchComponents/Category.js","FormComponents/CategoryForm.js","ObjectClasses/CategoryObject.js","ContainerComponents/CategoryContainer.js","Enums/VisibleTaskOptions.js","ListComponents/CategoryList.js","FormComponents/LoginForm.js","UserContext.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","formInputsToObject","form","inputs","Array","from","querySelectorAll","newObj","forEach","input","type","name","checked","value","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","ComponentName","props","react_default","a","createElement","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","ApiCalls","routeString","_this","this","classCallCheck","createObject","parentType","parentId","jsonString","JSON","stringify","concat","responseData","modifyObject","_id","toString","getObject","objId","getAllObjects","deleteObject","responseDate","deleteObjectRebaseChildren","newParentType","newParentId","rebaseObject","id","NoteApiCalls","possibleConstructorReturn","getPrototypeOf","call","getNote","noteId","modifyNote","modifiedNote","deleteNote","createNote","newNote","Note","className","dateTime","note","onClick","editAction","src","delete","TextInput","state","event","setState","target","Fragment","assign","toLowerCase","onChange","handleChange","bind","attributes","Component","PasswordInput","ResetInput","action","preventDefault","handleClick","CheckboxInput","handleCheck","SubmitInput","ButtonInput","DateInput","Date","getDate","EmailInput","NumberInput","TimeIntervalInput","InputTypes","TEXT","PASSWORD","SUBMIT","RESET","CHECKBOX","BUTTON","DATE","EMAIL","NUMBER","TIMEINTERVAL","FormBuilder","_this2","inputFields","propsWithKey","content","React","NoteForm","submitAction","document","getElementById","formData","noteJson","FormComponents_FormBuilder","handlers","NoteObject","timeStamp","parent","NoteContainer","displayState","update","noteApiCalls","xAccessToken","returnedNote","modify","undefined","FormComponents_NoteForm","BranchComponents_Note","addNote","LoadingGif","NoteList","catId","ContainerComponents_NoteContainer","display","showDeleteModal","Event","date","length","completed","prqTasks","ListComponents_TaskList","modifyListActions","prqEvents","ListComponents_EventList","notes","ListComponents_NoteList","EventForm","taskJson","EventApiCalls","getEvent","eventId","modifyEvent","modifiedEvent","deleteEvent","createEvent","newEvent","rebaseEvent","EventObject","prqTask","prevDates","accoundId","accountId","EventContainer","expandCollapse","eventApiCalls","returnedEvent","task","FormComponents_EventForm","BranchComponents_Event","buttonAction","addEvent","EventList","addNewEventTrue","toConsumableArray","eventListData","evtId","ContainerComponents_EventContainer","Task","description","deadline","startDate","external","estTime","subTasks","visibleTasks","events","tasks","deleteTask","complete","TaskForm","style","TaskApiCalls","getTask","taskId","modifyTask","modifiedTask","deleteTaskAndChildren","deleteTaskRebaseChildren","createTask","newTask","rebaseTask","TaskObject","prqEvent","TaskContainer","taskApiCalls","returnedTask","completedTask","FormComponents_TaskForm","BranchComponents_Task","addTask","CategoryApiCalls","getCategory","modifyCategory","modifiedCategory","deleteCategoryAndChildren","categoryId","deleteCategoryRebaseChildren","addCategory","category","returnedData","NewParentSearch","apiCalls","getSuggestions","inputValue","trim","inputLength","branches","filter","branch","slice","populateList","types","response","item","itemToDeleteId","getSuggestionValue","suggestion","renderSuggestion","onSuggestionsClearRequested","suggestions","_ref","newValue","onSuggestionsFetchRequested","_ref2","onSuggestionSelected","_ref3","suggestionValue","suggestionIndex","sectionIndex","rebaseParent","deleteAndRebaseChildren","rebaseChildren","parentTypes","inputProps","placeholder","dist_default","disabled","customStyles","top","left","right","bottom","marginRight","transform","Modal","setAppElement","DeleteModal","deleteChildren","componentId","closeModal","lib_default","isOpen","modalIsOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","componentType","componentName","InputComponents_NewParentSearch","TaskList","taskName","taskToDeleteName","taskToDeleteId","deleteModalOpen","assertThisInitialized","closeDeleteModal","subtitle","color","ContainerComponents_TaskContainer","Modals_DeleteModal","Category","CategoryForm","categoryJson","CategoryObject","CategoryContainer","categoryApiCalls","returnedCategory","FormComponents_CategoryForm","BranchComponents_Category","newCategory","VisibleTaskOptions","INCOMPLETE","ALL","URGENT","CategoryList","categories","deleteAndRebase","deleteWithChildren","categoryName","categoryToDeleteName","categoryToDeleteId","setVisibleTasks","visibleTaskOption","fetchOptions","x-access-token","selected","cat","ContainerComponents_CategoryContainer","LoginForm","username","password","handleSubmit","defineProperty","login","UserContext","createContext","UserProvider","Provider","User","Consumer","apiUrl","uiUrl","res","userName","localStorage","setItem","persistState","getItem","parse","testToken","e","console","log","_this3","ListComponents_CategoryList","refreshToken","FormComponents_LoginForm","App","src_User","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.fb5d1b6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    },\n\n    formInputsToObject:(form)=>{\n        const inputs = Array.from(form.querySelectorAll(\"input\"));\n        let newObj = {};\n        inputs.forEach((input)=>{\n            if(input.type===\"checkbox\") {\n                newObj[input.name]=(input.checked===\"checked\");\n            } else {\n                newObj[input.name] = input.value;\n\n            }\n        });\n        return newObj;\n    }\n};\n\n\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      return \"http://localhost:3434/\";\n      //return \"https://insolent-preclude.herokuapp.com/\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, null, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n\n\n        const headers = new Headers(\n            method==='get'?{}:{\n                'Content-Type': route==='account/login'?'application/x-www-form-urlencoded':'application/json'\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","import React from \"react\";\n\n\nfunction ComponentName(props) {\n    return (\n        <div>\n            Loading gif...\n        </div>\n    );\n}\n\nexport default ComponentName;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import fetchUtil from '../util/fetchUtil'\n\n\nclass ApiCalls {\n    constructor(routeString){\n        this.routeString = routeString;\n    }\n    /**\n     * Create object\n     * @param obj: the object to create\n     * @param parentType: \"Task\", \"Category\" or \"Event\"\n     * @param parentId: the id of the parent\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     * @returns {*|void}\n     */\n    createObject = (obj, parentType, parentId, token, callback)=>{\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.postData(\n            `${this.routeString}/${parentType}/${parentId}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n    /**\n     * Modify object\n     * @param obj: the modified version of obj\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     * @returns {*|void}\n     */\n\n    modifyObject= (obj, token, callback)=> {\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.putData(\n            `${this.routeString}/${obj._id.toString()}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n\n    /**\n     * Get object\n     * @param objId: the id to get\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     * @returns {*|void}\n     */\n\n    getObject= (objId, token, callback)=>{\n        const route = `${this.routeString}/${objId}`;\n        fetchUtil.getData(\n            route,\n            token,\n            responseData => {\n                callback(responseData);\n            }\n\n        );\n\n    }\n    getAllObjects= (token, callback)=>{\n        const route = `${this.routeString}`;\n        fetchUtil.getData(\n            route,\n            token,\n            responseData => {\n                callback(responseData);\n            }\n\n        );\n\n    }\n    /**\n     * Delete object\n     * @param objId: the id to delete\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     * @returns {*|void}\n     */\n    deleteObject=(objId, token, callback)=>{\n        fetchUtil.deleteData(\n            `${this.routeString}/${objId}`,\n            token,\n            responseDate=>callback(responseDate))\n    };\n\n    /**\n     * Delete object and rebase children. Only task and category can rebase children.\n     * @param objId: the id to delete\n     * @param token: xAccessToken\n     * @param newParentType: parent type to rebase to\n     * @param newParentId: id to rebase to\n     */\n    deleteObjectRebaseChildren=(objId,token,newParentType,newParentId, callback)=>{\n        //rebase only applies to task and category, otherwise just do regular delete\n        if(this.routeString==='task'||this.routeString==='category'){\n        fetchUtil.deleteData(`${this.routeString}/${objId}/${newParentType}/${newParentId}`,\n            token,\n            responseDate=>callback(responseDate));\n        } else {\n            this.deleteObject(objId,token,callback);\n        }\n    }\n\n    /**\n     * rebase object\n     * @param id: the id to rebase\n     * @param newParentType: type of parent to rebase to\n     * @param newParentId: id of new parent\n     * @param token: xAccessToken\n     * @param callback: calback after task is created\n     * @returns {*|void}\n     */\n    rebaseObject=(id,newParentType,newParentId,token,callback)=>fetchUtil.patchData(\n        `${this.routeString}/id`,\n        token,\n        JSON.stringify({newParentType:newParentType,parentId:newParentId}),\n        callback\n    )\n\n}\n\nexport default ApiCalls","import ApiCalls from \"./ApiCalls\";\n\nclass NoteApiCalls extends ApiCalls{\n    constructor(){\n        super('note');\n    }\n    getNote= (noteId,token, callback)=>this.getObject(noteId, token,callback);\n    modifyNote=(modifiedNote,token,callback)=>this.modifyObject(modifiedNote,token,callback);\n    deleteNote=(noteId,token, callback)=>this.deleteObject(noteId,token,callback);\n    createNote=(newNote, parentType, parentId, token, callback)=>this.createObject(newNote,parentType,parentId,token,callback);\n}\n\nexport default NoteApiCalls;","import React from \"react\";\n\nfunction Note(props) {\n    return (\n        <div className='note' id={props.data.id}>\n            <div className='dataWrapper'>\n                    <div className='property'>\n                        {props.data.dateTime} : {props.data.note}\n                    </div>\n\n             </div>\n            <div className='editDeleteButton'>\n                <button onClick={props.editAction} className ='inputButton'>\n                    <img src='../src/img/edit.svg' />\n                </button>\n                <button onClick={props.delete} className='inputButton'>\n                    <img src='../src/img/trash.png' />\n                </button>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Note;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TextInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='text'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TextInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass PasswordInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='password'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange = {this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default PasswordInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ResetInput extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='reset'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResetInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass CheckboxInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            checked:this.props.checked?this.state.checked:false\n        }\n    }\n\n    //not tested yet might not work\n    handleCheck(event){\n        this.setState({checked:event.target.checked})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='checkbox'\n                        name={this.props.name.toLowerCase()}\n                        checked = {this.state.checked}\n                        onChange={this.handleCheck.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass SubmitInput extends Component{\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                    <input\n                        type='submit'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n             </React.Fragment>\n        );\n    }\n}\n\nexport default SubmitInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ButtonInput extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='button'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ButtonInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass DateInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n\n            value:this.props.value instanceof Date?this.props.value.getDate():new Date(this.props.value).getDate()\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}::\n                    <input\n                        type='date'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DateInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass EmailInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='email'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EmailInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass NumberInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:'0'\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NumberInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TimeIntervalInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </fragment>\n        );\n    }\n}\n\nexport default TimeIntervalInput;","import TextInput from '../InputComponents/TextInput';\nimport PasswordInput from '../InputComponents/PasswordInput';\nimport ResetInput from '../InputComponents/ResetInput';\nimport CheckboxInput from '../InputComponents/CheckboxInput';\nimport SubmitInput from '../InputComponents/SubmitInput';\nimport ButtonInput from '../InputComponents/ButtonInput';\nimport DateInput from '../InputComponents/DateInput';\nimport EmailInput from '../InputComponents/EmailInput';\nimport NumberInput from '../InputComponents/NumberInput';\nimport TimeIntervalInput from '../InputComponents/TimeIntervalInput'\n\nconst InputTypes = Object.freeze({\n    TEXT: TextInput,\n    PASSWORD: PasswordInput,\n    SUBMIT: SubmitInput,\n    RESET: ResetInput,\n    CHECKBOX: CheckboxInput,\n    BUTTON: ButtonInput,\n    DATE: DateInput,\n    EMAIL: EmailInput,\n    NUMBER: NumberInput,\n    TIMEINTERVAL: TimeIntervalInput\n});\n\n\n\nexport default InputTypes;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass FormBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n\n    }\n\n\n    render() {\n         return <form id={this.props.id}>\n            {\n\n                this.props.inputFields.map(input=>{\n                    const propsWithKey = Object.assign({\n                        key:\"\" + this.props.data._id + input.props.name,\n                        value: this.props.data[input.props.name]}\n                        ,input.props);\n                    return input.content?\n                        React.createElement(input.type, propsWithKey,input.content):\n                        React.createElement(input.type, propsWithKey);\n                })\n            }\n        </form>\n    }\n}\n\nexport default FormBuilder;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from './FormBuilder';\nclass NoteForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'Note',}, type: InputTypes.TEXT},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n        };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const noteJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(noteJson)\n\n    }\n\n\n    render() {\n        return <div className=\"noteInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n                id={this.props.id}\n            />\n        </div>\n    }\n}\n\n\nexport default NoteForm;\n","class NoteObject{\n    constructor(note, timeStamp, parent, parentType){\n        this.timeStamp = timeStamp?timeStamp:new Date();\n        this.note=note?note:\"\";\n        this.parent=parent?parent:0;\n        this.parentType=parentType?parentType:\"\";\n    }\n}\n\nexport default NoteObject;","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport NoteApiCalls from '../ApiCallFunctions/NoteApiCalls'\nimport Note from \"../BranchComponents/Note\";\nimport NoteForm from '../FormComponents/NoteForm'\nimport NoteObject from '../ObjectClasses/NoteObject'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\n\nclass NoteContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            note: undefined,\n            noteApiCalls: new NoteApiCalls()\n        }\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.noteApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedNote) => this.setState({note: returnedNote}))\n    };\n\n\n    modify =(modifyNote) =>{\n        this.state.noteApiCalls.modifyObject(modifyNote,this.props.xAccessToken,(returnedNote) => {\n                this.setState({note: returnedNote, displayState: DisplayStates.EXPANDED})\n            }\n        );\n    };\n\n    delete = ()=>{\n        this.state.noteApiCalls.deleteNote(this.state.data._id, this.props.xAccessToken, this.props.update)\n    }\n\n\n    render() {\n        if (this.state.note) {\n             return (\n                 //fixme 190330: err you are not allowed to retrieve that note - must be in api\n                this.state.displayState === DisplayStates.INPUT ?\n                    <NoteForm data={this.state.note} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Note\n                        data={this.state.note}\n                        editAction={this.input}\n                        delete = {this.delete}\n                    />\n            )\n        } else if(this.props.newNote){\n            return <NoteForm data={new NoteObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.addNote} id={this.props.id}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default NoteContainer;\n\n","import React, {Component} from 'react';\nimport '../App.css';\nimport NoteContainer from \"../ContainerComponents/NoteContainer\";\nimport NoteApiCalls from '../ApiCallFunctions/NoteApiCalls'\n\nclass NoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addNote: false,\n        };\n        this.noteApiCalls = new NoteApiCalls();\n    }\n\n    addNote = (note)=>{\n        this.noteApiCalls.createNote(note, this.props.parentType, this.props.parentId, this.props.xAccessToken, this.props.update)\n        this.state.newNote = false;\n\n    }\n\n    render() {\n        return (\n            <div className='noteList' id={this.props.catId + 'NoteList'}>\n                {\n                    this.props.data.map(\n                        noteId => {\n                            return <NoteContainer\n                                id={noteId}\n                                xAccessToken = {this.props.xAccessToken}\n                                newNote = {false}\n                            />\n                        }\n                    )\n                }\n                <NoteContainer display = {this.state.newNote?'block':'none'}\n                               id={`NewNoteCat${this.props.parentId}`}\n                               xAccessToken = {this.props.xAccessToken}\n                               showDeleteModal = {this.showDeleteModal}\n                               addNote = {this.addNote}\n                               newNote = {true}\n                />\n\n            </div>\n        )\n    }\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport TaskList from \"../ListComponents/TaskList\";\nimport NoteList from \"../ListComponents/NoteList\";\nimport EventList from \"../ListComponents/EventList\";\n\n\nfunction Event(props) {\n    return (\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Date : {props.data.date}\n                </div>\n                <div className='property'>\n                    Length : {props.data.length}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList\n                                data = {props.data.notes}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport formUtil from '../util/formUtil'\n\nclass EventForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'date'}, type: InputTypes.DATE},\n                {props: {name: 'length'}, type: InputTypes.NUMBER},\n            ],\n        };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const taskJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(taskJson)\n\n    }\n\n\n    render() {\n        return <div className=\"eventInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\nexport default EventForm;\n","import ApiCalls from \"./ApiCalls\";\n\n\nclass EventApiCalls extends ApiCalls{\n    constructor(){\n        super('event')\n    }\n    getEvent= (eventId,token, callback)=>this.getObject(eventId, token,callback);\n    modifyEvent=(modifiedEvent,token,callback)=>this.modifyObject(modifiedEvent,token,callback);\n    deleteEvent=(eventId,token, callback)=>this.deleteObject(eventId,token,callback);\n    createEvent=(newEvent, parentType, parentId, token, callback)=>this.createObject(newEvent,parentType,parentId,token,callback);\n    rebaseEvent=(eventId, newParentType, newParentId, token, callback)=>this.rebaseObject(eventId,newParentType,newParentId,token,callback);\n}\n\nexport default EventApiCalls;","class EventObject{\n   constructor(name,\n               dateTime,\n               length,\n               notes,\n               prqTask,\n               prqEvents,\n               parent,\n               parentType,\n               completed,\n               prevDates,\n               accoundId){\n       this.name = name?name:\"\";\n       this.dateTime = dateTime?dateTime:new Date();\n       this.length = length?length:0;\n       this.notes = notes?notes:[];\n       this.prqTask = prqTask?prqTask:[];\n       this.prqEvents = prqEvents?prqEvents:[];\n       this.parent = parent?parent:0;\n       this.completed = completed?completed:false;\n       this.prevDates = prevDates?prevDates:[];\n       this.accountId = accoundId?accoundId:0;\n\n   }\n\n}\n\nexport default EventObject;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Event from \"../BranchComponents/Event\";\nimport EventForm from \"../FormComponents/EventForm\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport EventApiCalls from \"../ApiCallFunctions/EventApiCalls\";\nimport EventObject from '../ObjectClasses/EventObject'\n\nclass EventContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            event: undefined,\n            eventApiCalls: new EventApiCalls()\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.eventApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedEvent) => this.setState({event: returnedEvent}))\n    };\n\n\n    modify =(modifiedEvent) =>{\n        this.state.eventApiCalls.modifyObject(modifiedEvent,this.props.xAccessToken,(returnedEvent) => {\n                this.setState({task: returnedEvent, displayState: DisplayStates.EXPANDED})\n            }\n        );\n    };\n\n    render() {\n        if (this.state.event) {\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <EventForm data={this.state.event} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Event\n                        data={this.state.event}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                    />\n            )\n        } else if(!this.props.id){\n            return <EventForm data={new EventObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addEvent}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default EventContainer;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport Event from \"../BranchComponents/Event\";\nimport TaskContainer from \"../ContainerComponents/TaskContainer\";\nimport EventContainer from \"../ContainerComponents/EventContainer\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEvent: false\n        };\n    }\n\n    addEvent = ()=>this.setState({addNote:true});\n    //null eventId will create a new event\n    addNewEventTrue=data=>{\n        return [...data, null];\n    }\n\n    render() {\n        const eventListData = this.state.addEvent ? this.addNewEventTrue(this.props.data) : this.props.data;\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    eventListData.map(\n                        evtId => {\n                            return <EventContainer\n                                id={evtId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React from \"react\";\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport NoteList from \"../ListComponents/NoteList\";\n\nfunction Task(props) {\n\n    const deleteOrShowModal =  ()=>{\n        if((props.data.tasks && props.data.tasks.length>0) || (props.data.events&&props.data.events.length>0)){\n            props.showDeleteModal(props.data._id,props.data.name);\n        } else {\n            props.deleteTask(props.data._id);\n        }\n    }\n    return <div className='task ' id={props.data._id}>\n        <div className='collapser'>\n            <button onClick={props.buttonAction}>\n                {props.displayState === DisplayStates.EXPANDED ? 'V' : '>'}\n            </button>\n        </div>\n\n        <div className='dataWrapper'>\n            <h4 className = {props.data.completed?'completedTaskName':'taskName'}>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Description : {props.data.description}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed.toString()}\n                </div>\n                <div className='property'>\n                    Deadline : {props.data.deadline}\n                </div>\n                <div className='property'>\n                    Start Date : {props.data.startDate}\n                </div>\n                <div className='property'>\n                    External : {props.data.external}\n                </div>\n                <div className='property'>\n                    Estimated Time : {props.data.estTime}\n                </div>\n                {\n                    props.data.subTasks?\n                        <div className='sublist'>\n                            <h5>SubTasks:</h5>\n                            <TaskList\n                                data = {props.data.subTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                                parentType = \"task\"\n                                parentId = {props.data._id}\n                                update = {props.update}\n                                visibleTasks = {props.visibleTasks}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.events?\n                        <div className='sublist'>\n                            <h5>Events:</h5>\n                            <EventList data = {props.data.events}\n                                       xAccessToken = {props.xAccessToken}\n                                       modifyListActions = {props.modifyListActions}\n                                       parentType = \"task\"\n                                       parentId = {props.data._id}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    <div className='sublist'>\n                        <h5>Notes:</h5>\n                        <NoteList\n                            data = {props.data.notes}\n                            xAccessToken = {props.xAccessToken}\n                            modifyListActions = {props.modifyListActions}\n                            parentType = \"task\"\n                            parentId = {props.data._id}\n                            update = {props.update}\n\n                        />\n                    </div>\n            }\n            </div>\n        </div>\n        <div className='editDeleteButton'>\n            <button onClick={props.editAction} className ='inputButton'>\n                <img src='../src/img/edit.svg' />\n            </button>\n            <button onClick={deleteOrShowModal} className='inputButton'>\n                <img src='../src/img/trash.png' />\n            </button>\n            <button onClick={props.complete} className='inputButton'>\n                &#10003;\n            </button>\n        </div>\n    </div>\n}\n\nexport default Task;","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport formUtil from '../util/formUtil'\n\nclass TaskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'description'}, type: InputTypes.TEXT},\n                {props: {name: 'deadline'}, type: InputTypes.DATE},\n                {props: {name: 'startDate'}, type: InputTypes.DATE},\n                {props: {name: 'external'}, type: InputTypes.CHECKBOX},\n                {props: {name: 'estTime'}, type: InputTypes.NUMBER},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n         };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const taskJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(taskJson)\n\n    }\n\n\n    render() {\n        return <div style = {{display:this.props.display?this.props.display:'block'}} className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\nexport default TaskForm;\n","import ApiCalls from \"./ApiCalls\";\n\n\nclass TaskApiCalls extends ApiCalls{\n    constructor(){\n        super('task');\n    }\n    getTask= (taskId,token, callback)=>this.getObject(taskId, token,callback);\n    modifyTask=(modifiedTask,token,callback)=>this.modifyObject(modifiedTask,token,callback);\n    deleteTaskAndChildren=(taskId,token, callback)=>this.deleteObject(taskId,token,callback);\n    deleteTaskRebaseChildren=(taskId, token, newParentType,newParentId,callback)=>this.deleteObjectRebaseChildren(taskId,token,newParentType,newParentId)\n    createTask=(newTask, parentType, parentId, token, callback)=>this.createObject(newTask,parentType,parentId,token,callback);\n    rebaseTask=(taskId,newParentType,newParentId,token,callback)=>this.rebaseObject(taskId,newParentType,newParentId,token,callback);\n}\n\nexport default TaskApiCalls;","class TaskObject {\n    constructor(name,\n                description,\n                subTasks,\n                events,\n                completed,\n                deadline,\n                startDate,\n                notes,\n                external,\n                parent,\n                parentType,\n                prqTask,\n                prqEvent,\n                estTime,\n                accountId) {\n        this.name = name?name: \"\";\n        this.description =description?description: \"\";\n        this.subTasks=subTasks?subTasks: [];\n        this.events=events?events:[];\n        this.completed= completed?completed:\"\";\n        this.deadline=deadline?deadline:new Date();\n        this.startDate=startDate?startDate:new Date();\n        this.notes=notes?notes:[];\n        this.external=external?external:false;\n        this.parent=parent?parent:0;\n        this.parentType=parentType?parentType:\"\";\n        this.prqTask=prqTask?prqTask:[];\n        this.prqEvent=prqEvent?prqEvent:[];\n        this.estTime=estTime?estTime:0;\n        this.accountId=accountId?accountId:\"\";\n    }\n\n}\n\nexport default TaskObject;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport TaskObject from '../ObjectClasses/TaskObject'\n\n\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            task: undefined,\n            taskApiCalls: new TaskApiCalls(),\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        this.state.taskApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedTask) => this.setState({task: returnedTask}))\n    };\n\n\n    modify =(modifiedTask) =>{\n        this.state.taskApiCalls.modifyObject(modifiedTask,this.props.xAccessToken,(returnedTask) => {\n            this.setState({task: returnedTask, displayState: DisplayStates.EXPANDED})\n        }\n        );\n    };\n\n    complete=()=>{\n        const completedTask = Object.assign(this.state.task,{completed: true});\n        this.state.taskApiCalls.modifyObject(completedTask,this.props.xAccessToken,(returnedTask) => {\n            this.setState({task: returnedTask, displayState: DisplayStates.EXPANDED})\n        })\n    }\n\n\n\n\n\n\n\n\n\n    render() {\n        if (this.state.task) {\n            if(!this.props.visibleTasks(this.state.task)){\n                return null;\n            }\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <TaskForm id = {this.props.id} display = 'block' data={this.state.task} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Task\n                        data={this.state.task}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        showDeleteModal = {this.props.showDeleteModal}\n                        update = {this.update}\n                        complete = {this.complete}\n                        visibleTasks = {this.props.visibleTasks}\n                        deleteTask = {this.props.deleteTask}\n                    />\n            )\n        } else if(this.props.newTask){\n            return <TaskForm display = {this.props.display} data={new TaskObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.addTask} id={this.props.id}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default TaskContainer;\n","import fetchUtil from '../util/fetchUtil'\nimport ApiCalls from './ApiCalls'\n\n\n\n/**\n * Create a task\n * @param task: the task to create\n * @param parentType: \"TaskObject\" or \"Category\"\n * @param parentId: the id of the parent\n */\nclass CategoryApiCalls extends ApiCalls {\n    constructor(){\n        super('category');\n    }\n\n    getCategory= (id,token, callback)=>this.getObject(id, token,callback);\n    modifyCategory=(modifiedCategory,token,callback)=>this.modifyObject(modifiedCategory,token,callback);\n    deleteCategoryAndChildren=(categoryId,token, callback)=>this.deleteObject(categoryId,token,callback);\n    deleteCategoryRebaseChildren=(categoryId,token,newParentType,newParentId,callback)=>this.deleteObjectRebaseChildren(categoryId,token,newParentType,newParentId,callback);\n    addCategory=(category,token,callback)=>fetchUtil.postData(\n        //don't use ApiCalls because category is always child of root so no parentTyoe or parentId\n        \"category/\",\n        token,\n        JSON.stringify(category),\n        returnedData=>callback(returnedData)\n    )\n\n}\n\nexport default CategoryApiCalls","import React, {Component} from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport EventApiCalls from '../ApiCallFunctions/EventApiCalls'\n\nclass NewParentSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            suggestions:[],\n            branches:[],\n            rebaseParent:null\n        };\n    }\n    apiCalls = {'category':new CategoryApiCalls(),'task':new TaskApiCalls(),'event':new EventApiCalls()}\n\n    getSuggestions = value => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        return inputLength === 0 ? [] : this.state.branches.filter(branch =>\n            branch.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n    };\n\n    componentDidMount() {\n        this.populateList(this.props.parentTypes)\n    }\n\n\n    populateList= (types)=>{\n        return types.map(\n            type=>{\n                const apiCall = this.apiCalls[type];\n                apiCall.getAllObjects(this.props.xAccessToken,response=>{this.setState(\n                    {branches: this.state.branches.concat(\n                            response\n                                .filter(item=>item._id!==this.props.itemToDeleteId)\n                                .map(item=>Object.assign(item,{type:type}))\n                        )}\n                )}\n                )\n            }\n        );\n    };\n\n\n    getSuggestionValue=suggestion=>suggestion.name;\n\n    renderSuggestion = suggestion => <div>{suggestion.name}</div>;\n\n    onSuggestionsClearRequested =() => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    onChange = (event, {newValue})=>{\n        this.setState({value:newValue})\n    };\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n    };\n\n    onSuggestionSelected = (event,{suggestion, suggestionValue, suggestionIndex, sectionIndex, method}) =>{\n        this.setState({rebaseParent:suggestion});\n    };\n\n    deleteAndRebaseChildren=()=>{\n        this.props.rebaseChildren(this.state.rebaseParent.type,this.state.rebaseParent._id);\n    };\n\n    render() {\n        let inputProps={\n            placeholder: 'Type the name of the new parent',\n            value:this.state.value,\n            onChange: this.onChange\n        };\n        return <div>\n            Rebase child to parent:\n            <Autosuggest\n                suggestions={this.state.suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                getSuggestionValue={this.getSuggestionValue}\n                renderSuggestion={this.renderSuggestion}\n                inputProps={inputProps}\n                onSuggestionSelected = {this.onSuggestionSelected}\n            />\n            <button disabled={!this.state.rebaseParent} onClick={this.deleteAndRebaseChildren}>Delete and rebase children</button>\n        </div>\n\n    }\n}\n\nexport default NewParentSearch;\n","import React from \"react\";\nimport NewParentSearch from \"../InputComponents/NewParentSearch\";\nimport Modal from 'react-modal'\n\nconst customStyles = {\n    content : {\n        top                   : '50%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)'\n    }\n};\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root')\n\n\n/**\n * @param props: !modalIsOpen, !componentType, !componentName !parentTypes !rebaseChildren()  !deleteChildren()\n */\nclass DeleteModal extends React.Component  {\n    constructor(props){\n        super(props);\n        this.state={\n        }\n\n\n    }\n\n    deleteChildren=()=>{\n      this.props.deleteChildren(this.props.componentId);\n      this.props.closeModal();\n    };\n\n    rebaseChildren=(newParentType, newParentId)=>{\n        this.props.rebaseChildren(this.props.componentId, newParentType, newParentId);\n        this.props.closeModal();\n    }\n\n\n\n\n\n\n\n    render(){\n            return <Modal\n                isOpen={this.props.modalIsOpen}\n                onAfterOpen={this.props.afterOpenModal}\n                onRequestClose={this.props.closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n                The {this.props.componentType} {this.props.componentName} that you are deleting contains child Tasks or Events.\n                Do you want to delete the children or assign them to a new parent?\n                <button className=\"deleteChildren\" onClick={this.deleteChildren}>Delete Children</button>\n                <NewParentSearch itemToDeleteId={this.props.componentId} parentTypes={this.props.parentTypes} rebaseChildren = {this.rebaseChildren} xAccessToken={this.props.xAccessToken}/>\n                <button onClick={this.props.closeModal} id='closeModalButton'>Cancel delete</button>\n\n            </Modal>\n            }\n\n    }\n\n\nexport default DeleteModal;","import React, { Component } from 'react';\nimport '../App.css';\nimport TaskContainer from '../ContainerComponents/TaskContainer';\nimport DeleteModal from \"../Modals/DeleteModal\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newTask:false,\n            taskToDeleteName: '',\n            taskToDeleteId: 0,\n            deleteModalOpen:false,\n        };\n\n        this.taskApiCalls = new TaskApiCalls();\n        this.showDeleteModal = this.showDeleteModal.bind(this);\n        this.afterOpenModal = this.afterOpenModal.bind(this);\n        this.closeDeleteModal = this.closeDeleteModal.bind(this);\n\n    }\n\n    newTask = ()=>this.setState({newTask:true});\n\n    addTask =(task)=>{\n        this.taskApiCalls.createTask(task, this.props.parentType, this.props.parentId, this.props.xAccessToken, this.props.update)\n        this.state.newTask = false;\n    };\n\n    deleteTaskRebaseChildren=(taskId, newParentType, newParentId)=>{\n        this.taskApiCalls.deleteTaskRebaseChildren(taskId, this.props.xAccessToken,newParentType, newParentId, this.props.update);\n    };\n\n    deleteTaskAndChildren=(taskId)=>{\n        this.taskApiCalls.deleteTaskAndChildren(taskId,this.props.xAccessToken,this.props.update);\n    };\n\n    showDeleteModal=(taskId, taskName)=>{\n        this.setState({taskToDeleteName: taskName, taskToDeleteId: taskId});\n        this.setState({deleteModalOpen:true});\n    }\n\n    afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        this.subtitle.style.color = '#f00';\n    }\n\n    closeDeleteModal() {\n        this.setState({deleteModalOpen: false});\n    }\n\n\n    render() {\n        return (\n            <div className=\"TaskList\" id={this.props.catId + \"Tasks\"}>\n\n                {\n                    this.props.data\n                        .map(\n                        taskId => {\n                            return <TaskContainer\n                                id={taskId}\n                                xAccessToken = {this.props.xAccessToken}\n                                showDeleteModal = {this.showDeleteModal}\n                                addTask = {this.addTask}\n                                visibleTasks = {this.props.visibleTasks}\n                                deleteTask = {this.deleteTaskAndChildren}\n                            />\n                        }\n                    )\n                }\n                <TaskContainer display = {this.state.newTask?'block':'none'}\n                               id={`NewTaskCat${this.props.parentId}`}\n                               xAccessToken = {this.props.xAccessToken}\n                               showDeleteModal = {this.showDeleteModal}\n                               addTask = {this.addTask}\n                               newTask = {true}\n                               visibleTasks = {this.props.visibleTasks}\n                               deleteTask = {this.deleteTaskAndChildren}\n                />\n                <div style = {{display:this.state.newTask?'none':'block'}} className='addButton'>\n                    <button  onClick={this.newTask}>+</button>\n                </div>\n                <DeleteModal\n                    modalIsOpen = {this.state.deleteModalOpen}\n                    closeModal = {this.closeDeleteModal}\n                    onAfterOpen = {this.afterOpenModal}\n                    componentType='task'\n                    parentTypes = {['category','task']}\n                    componentName = {this.state.taskToDeleteName}\n                    componentId = {this.state.taskToDeleteId}\n                    rebaseChildren = {this.deleteTaskRebaseChildren}\n                    deleteChildren = {this.deleteTaskAndChildren}\n                    xAccessToken = {this.props.xAccessToken}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport '../App.css';\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport DisplayStates from \"../Enums/DisplayStates\";\n\nfunction Category(props){\n    const showDeleteModal =  ()=>{\n        props.showDeleteModal(props.data._id,props.data.name);\n    };\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <div className='collapser'>\n                <button onClick={props.buttonAction}>\n                    {props.displayState === DisplayStates.EXPANDED ? 'V' : '>'}\n                </button>\n            </div>\n\n            <div className='dataWrapper'>\n                <h2 className = \"catName\">\n                    {props.data.name}\n                </h2>\n                <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                    <h3>Tasks</h3>\n                    <TaskList\n                        data={props.data.tasks}\n                        parentType=\"category\"\n                        parentId={props.data._id}\n                        modifyListActions={props.modifyListActions}\n                        xAccessToken={props.xAccessToken}\n                        update={props.update}\n                        visibleTasks={props.visibleTasks}\n                    />\n                    <h3>Events</h3>\n                    <EventList\n                        data={props.data.events} catId={props.data._id}\n                        parentType=\"category\"\n                        modifyListActions={props.modifyListActions}\n                        parentId={props.data._id}\n                        xAccessToken={props.xAccessToken}\n                        update={props.update}\n                    />\n                </div>\n            </div>\n\n            <div className='editDeleteButton'>\n                <button onClick={props.editAction} className ='inputButton'>\n                    <img src='../src/img/edit.svg' />\n                </button>\n                <button onClick={showDeleteModal} className='inputButton'>\n                    <img src='../src/img/trash.png' />\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Category;","import React, {Component} from 'react';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from \"./FormBuilder\";\n\nclass CategoryForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n        };\n\n\n\n\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const categoryJson = Object.assign(this.props.data, formData);\n        this.props.submitAction(categoryJson)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n\n}\n\nexport default CategoryForm;\n","class CategoryObject {\n    constructor(\n        name,\n        tasks,\n        events\n    ) {\n        this.name = name?name:'';\n        this.tasks = tasks?tasks:[];\n        this.events = events?events:[];\n    }\n\n}\n\nexport default CategoryObject;","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport Category from \"../BranchComponents/Category\";\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport CategoryForm from \"../FormComponents/CategoryForm\";\nimport CategoryObject from '../ObjectClasses/CategoryObject'\n\n//fixme 190328: when reloaded, doesn't show right category names\nclass CategoryContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED,\n            category: undefined,\n            categoryApiCalls: new CategoryApiCalls()\n        };\n    }\n\n    expandCollapse=()=>{\n        this.state.displayState===DisplayStates.COLLAPSED?\n            this.setState({displayState:DisplayStates.EXPANDED})\n            : this.setState({displayState:DisplayStates.COLLAPSED});\n    }\n\n\n    input=()=>{\n        this.setState({displayState:DisplayStates.INPUT});\n    };\n\n    update=()=>{\n        this.state.categoryApiCalls.getCategory(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n\n    modify=(modifiedCategory)=> {\n        this.state.categoryApiCalls.modifyCategory(\n            modifiedCategory,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory, displayState:DisplayStates.EXPANDED}))\n    };\n\n\n    render() {\n        if(this.state.category) {\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <CategoryForm data={this.state.category} submitAction = {this.modify}/> :\n                    <Category\n                        data={this.state.category}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        showDeleteModal = {this.props.showDeleteModal}\n                        update = {this.update}\n                        visibleTasks = {this.props.visibleTasks}\n                    />\n            )\n        } else if(this.props.newCategory){\n            const newCategory = new CategoryObject();\n            return <CategoryForm display = {this.props.display} data={newCategory} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.addCategory} id={this.props.id}/>\n        }else {\n            this.update();\n            return <LoadingGif/>\n        }\n    }\n\n}\n\nexport default CategoryContainer;\n","const VisibleTaskOptions = Object.freeze({\n    INCOMPLETE:(task)=>!task.completed,\n    ALL: task=>task,\n    URGENT: task=>task.deadline-task.startDate<1\n});\n\nexport default VisibleTaskOptions;","import React, { Component } from 'react';\nimport '../App.css';\nimport fetchUtil from '../util/fetchUtil';\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport CategoryContainer from \"../ContainerComponents/CategoryContainer\";\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport DeleteModal from \"../Modals/DeleteModal\";\nimport VisibleTaskOptions from '../Enums/VisibleTaskOptions'\n\n//TODO 181231: I want to change this so this component doesn't get the categories, the user component does. But I'll have to change the API to do that.\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: undefined,\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n            newCategory: false,\n            categoryToDeleteName:'',\n            categoryToDeleteId:'',\n            deleteModalOpen: false,\n            visibleTasks: VisibleTaskOptions.INCOMPLETE\n        };\n\n        this.categoryApiCalls = new CategoryApiCalls();\n    }\n\n    update = () => {\n        fetchUtil.getData(\n            'category/',\n            this.props.xAccessToken,\n            responseData => {\n                this.setState({categories:responseData})\n            }\n        );\n    };\n\n    addCategory = (category) =>{\n        this.categoryApiCalls.addCategory(category, this.props.xAccessToken,this.update)\n    };\n\n    deleteAndRebase = (categoryId,newParentType, newParentId) => {\n        this.categoryApiCalls.deleteCategoryRebaseChildren(categoryId,this.props.xAccessToken, newParentType,newParentId,this.update)\n    };\n\n    deleteWithChildren=(categoryId)=>{\n        this.categoryApiCalls.deleteCategoryAndChildren(categoryId,this.props.xAccessToken,this.update)\n    };\n    showDeleteModal = (categoryId, categoryName) => {\n        this.setState({categoryToDeleteName: categoryName, categoryToDeleteId: categoryId});\n        this.state.deleteModalOpen = true;\n    };\n\n    afterOpenModal=() => {\n        // references are now sync'd and can be accessed.\n        this.subtitle.style.color = '#f00';\n    }\n\n    closeDeleteModal=() =>{\n        this.setState({deleteModalOpen: false});\n    };\n\n    setVisibleTasks=()=>{\n        const visibleTaskOptionInput = document.getElementById('visibleTasks');\n        const visibleTaskOption = visibleTaskOptionInput.value;\n        this.setState({visibleTasks:VisibleTaskOptions[visibleTaskOption]});\n    }\n\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                'category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData, display:'allTasks'})\n                }\n            );\n            return (\n                <LoadingGif/>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">]\n                    Display:\n                    <select id='visibleTasks' onChange = {this.setVisibleTasks}>\n                        <option value='INCOMPLETE' selected={true}>Incomplete Tasks</option>\n                        <option value = 'ALL'>All Tasks</option>\n                        <option value = 'URGENT' >Urgent</option>\n                    </select>\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <CategoryContainer\n                                        id = {cat._id}\n                                        xAccessToken = {this.props.xAccessToken}\n                                        showDeleteModal = {this.showDeleteModal}\n                                        addCategory = {this.addCategory}\n                                        visibleTasks={this.state.visibleTasks}\n                                    />\n                                )\n                            }\n                        )\n                    }\n                    <CategoryContainer display = {this.state.newTask?'block':'none'}\n                                   id={`NewCat`}\n                                   xAccessToken = {this.props.xAccessToken}\n                                   showDeleteModal = {this.showDeleteModal}\n                                   addCategory= {this.addCategory}\n                                   newCategory = {true}\n                                   visibleTasks={this.state.visibleTasks}\n\n                    />\n                    <div style = {{display:this.state.newCategory?'none':'block'}} className='addButton'>\n                        <button  onClick={this.newCategory}>+</button>\n                    </div>\n                    <DeleteModal\n                        modalIsOpen = {this.state.deleteModalOpen}\n                        closeModal = {this.closeDeleteModal}\n                        onAfterOpen = {this.afterOpenModal}\n                        componentType='category'\n                        parentTypes = {['category','task']}\n                        componentName = {this.state.categoryToDeleteName}\n                        componentId = {this.state.categoryToDeleteId}\n                        rebaseChildren = {this.deleteAndRebase}\n                        deleteChildren = {this.deleteWithChildren}\n                        xAccessToken = {this.props.xAccessToken}\n                        visibleTasks = {this.state.visibleTasks}\n                    />\n                </div>\n\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React from \"react\";\n\nconst UserContext = React.createContext({});\n\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './ListComponents/CategoryList';\nimport LoginForm from './FormComponents/LoginForm';\nimport fetchUtil from './util/fetchUtil';\nimport {UserProvider} from './UserContext';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\nclass User extends Component {\n\n   \n\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"http://localhost:3434\",//\"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        };\n        this.login=this.login.bind(this);\n    }\n\n    //check to see if token from local storage is up to date\n    testToken(){\n        fetchUtil.getData('user',this.state.xAccessToken,\n                res=>{if(!res.userName){\n                    this.setState({xAccessToken:undefined});\n                    localStorage.setItem('userState', JSON.stringify(this.state));\n                }}\n            )\n    }\n\n    componentDidMount () {\n        const persistState = localStorage.getItem('userState');\n\n        if (persistState) {\n            try {\n                this.setState(JSON.parse(persistState),this.testToken);\n            } catch (e) {\n                console.log(\"user state is not JSON\")\n            }\n        }\n    }\n\n    componentWillUnmount () {\n    }\n\n    refreshToken(){\n        this.setState({xAccessToken:null});\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            'account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n                localStorage.setItem('userState', JSON.stringify(this.state));\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(\n              <div id='userRoot'>\n                  <UserProvider value = {this.state.xAccessToken}>\n                    <CategoryList\n                        xAccessToken = {this.state.xAccessToken}\n                        refreshToken = {this.refreshToken}\n                    />\n                  </UserProvider>\n              </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n//registerServiceWorker();\n//unregister();\n"],"sourceRoot":""}