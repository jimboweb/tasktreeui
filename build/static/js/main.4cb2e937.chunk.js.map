{"version":3,"sources":["logo.svg","util/formUtil.js","util/fetchUtil.js","Enums/DisplayStates.js","BranchComponents/Event.js","ListComponents/EventList.js","ListComponents/NoteList.js","BranchComponents/Task.js","InputComponents/TextInput.js","InputComponents/PasswordInput.js","InputComponents/ResetInput.js","InputComponents/CheckboxInput.js","InputComponents/SubmitInput.js","InputComponents/ButtonInput.js","InputComponents/DateInput.js","InputComponents/EmailInput.js","InputComponents/NumberInput.js","InputComponents/TimeIntervalInput.js","Enums/InputTypes.js","FormComponents/FormBuilder.js","ApiCallFunctions/TaskApiCalls.js","FormComponents/TaskForm.js","UserContext.js","DisplayComponents/LoadingGif.js","ObjectClasses/TaskObject.js","util/ModifyListActions.js","ContainerComponents/TaskContainer.js","ListComponents/TaskList.js","BranchComponents/Category.js","ApiCallFunctions/CategoryApiCalls.js","FormComponents/CategoryForm.js","ContainerComponents/CategoryContainer.js","ListComponents/CategoryList.js","FormComponents/LoginForm.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","formInputsToJsonObject","form","inputs","Array","from","querySelectorAll","newObj","forEach","input","name","value","JSON","stringify","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","Event","props","react_default","a","createElement","EventList","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","className","id","catId","evt","BranchComponents_Event","Component","Task","TextInput","event","setState","target","Fragment","assign","type","toLowerCase","onChange","handleChange","bind","attributes","PasswordInput","ResetInput","action","preventDefault","onClick","handleClick","CheckboxInput","checked","handleCheck","SubmitInput","ButtonInput","DateInput","split","EmailInput","NumberInput","TimeIntervalInput","InputTypes","TEXT","PASSWORD","SUBMIT","RESET","CHECKBOX","BUTTON","DATE","EMAIL","NUMBER","TIMEINTERVAL","FormBuilder","_this2","inputFields","propsWithKey","task","_id","content","React","TaskApiCalls","createTask","parentType","parentId","modifyTask","toString","getTask","taskId","responseData","TaskForm","submitAction","document","getElementById","FormComponents_FormBuilder","handlers","UserContext","createContext","UserProvider","Provider","Consumer","ComponentName","TaskObject","description","subTasks","events","completed","deadline","Date","startDate","notes","external","parent","prqTask","prqEvent","estTime","accountId","ModifyListActions","setStateCallback","addTask","returnedTask","TaskContainer","expandCollapse","displayState","update","xAccessToken","modify","modifiedTask","modifyListActions","undefined","FormComponents_TaskForm","ObjectClasses_TaskObject","buttonAction","editAction","LoadingGif","TaskList","addNewTaskTrue","toConsumableArray","concat","taskListData","ContainerComponents_TaskContainer","Category","ListComponents_TaskList","tasks","ListComponents_EventList","getCategory","modifyCategory","modifiedCategory","category","CategoryApiCalls","returnedCategory","CategoryForm","BranchComponents_Category","CategoryList","categories","fetchOptions","x-access-token","cat","CategoryContainer","LoginForm","username","password","assertThisInitialized","handleSubmit","defineProperty","login","User","apiUrl","uiUrl","ListComponents_CategoryList","FormComponents_LoginForm","App","src_User","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.4cb2e937.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    },\n\n    formInputsToJsonObject:(form)=>{\n        const inputs = Array.from(form.querySelectorAll(\"input\"));\n        let newObj = {};\n        inputs.forEach((input)=>{\n            newObj[input.name]=input.value;\n        });\n        return JSON.stringify(newObj);\n    }\n};\n\n\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      //return \"http://localhost:3434\";\n      return \"https://insolent-preclude.herokuapp.com/\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, data, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n        const headers = new Headers(\n            {\n                'Content-Type': 'application/x-www-form-urlencoded'\n\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import React from \"react\";\nimport '../App.css';\n\n\nfunction Event(props) {\n    return (\n        <div>\n\n        </div>\n    );\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport '../App.css';\nimport Event from \"../BranchComponents/Event\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    this.props.data.map(\n                        evt => {\n                            return <Event data={evt}/>\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass NoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return <div></div>\n    }\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport NoteList from \"../ListComponents/NoteList\";\n\nfunction Task(props) {\n\n\n    return <div className='task ' id={props.data._id}>\n        <div className='collapser'>\n            <button onClick={props.buttonAction}>\n                {props.displayState === DisplayStates.EXPANDED ? '-' : '+'}\n            </button>\n        </div>\n\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Description : {props.data.description}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                <div className='property'>\n                    Deadline : {props.data.deadline}\n                </div>\n                <div className='property'>\n                    Start Date : {props.data.startDate}\n                </div>\n                <div className='property'>\n                    External : {props.data.external}\n                </div>\n                <div className='property'>\n                    Estimated Time : {props.data.estTime}\n                </div>\n                {\n                    props.data.subTasks?\n                        <div className='sublist'>\n                            <h5>SubTasks:</h5>\n                            <TaskList data = {props.data.subTasks} xAccessToken = {props.xAccessToken}/>\n                        </div>\n                        :''\n                }\n                {\n                    props.data.events?\n                        <div className='sublist'>\n                            <h5>Events:</h5>\n                            <EventList data = {props.data.events}  xAccessToken = {props.xAccessToken}/>\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList data = {props.data.prqTasks}  xAccessToken = {props.xAccessToken}/>\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList data = {props.data.prqEvents}  modify = {true}/>\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList data = {props.data.notes}  modify = {true}/>\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n        <div className='editButton'>\n            <button onClick={props.editAction}>\n                <img src='../img/edit.svg' />\n            </button>\n        </div>\n    </div>\n}\n\nexport default Task;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TextInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='text'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TextInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass PasswordInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='password'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange = {this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default PasswordInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ResetInput extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='reset'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResetInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass CheckboxInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            checked:this.props.checked?this.state.checked:false\n        }\n    }\n\n    //not tested yet might not work\n    handleCheck(event){\n        this.setState({checked:event.target.checked})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='checkbox'\n                        name={this.props.name.toLowerCase()}\n                        checked = {this.state.checked}\n                        onChange={this.handleCheck.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass SubmitInput extends Component{\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                    <input\n                        type='submit'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n             </React.Fragment>\n        );\n    }\n}\n\nexport default SubmitInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ButtonInput extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='button'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ButtonInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass DateInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value.split('T')[0]\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}::\n                    <input\n                        type='date'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DateInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass EmailInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='email'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EmailInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass NumberInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.props.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NumberInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TimeIntervalInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </fragment>\n        );\n    }\n}\n\nexport default TimeIntervalInput;","import TextInput from '../InputComponents/TextInput';\nimport PasswordInput from '../InputComponents/PasswordInput';\nimport ResetInput from '../InputComponents/ResetInput';\nimport CheckboxInput from '../InputComponents/CheckboxInput';\nimport SubmitInput from '../InputComponents/SubmitInput';\nimport ButtonInput from '../InputComponents/ButtonInput';\nimport DateInput from '../InputComponents/DateInput';\nimport EmailInput from '../InputComponents/EmailInput';\nimport NumberInput from '../InputComponents/NumberInput';\nimport TimeIntervalInput from '../InputComponents/TimeIntervalInput'\n\nconst InputTypes = Object.freeze({\n    TEXT: TextInput,\n    PASSWORD: PasswordInput,\n    SUBMIT: SubmitInput,\n    RESET: ResetInput,\n    CHECKBOX: CheckboxInput,\n    BUTTON: ButtonInput,\n    DATE: DateInput,\n    EMAIL: EmailInput,\n    NUMBER: NumberInput,\n    TIMEINTERVAL: TimeIntervalInput\n});\n//TODO 181110: make a StandardForm object that creates form inputFields for each of these types\n//TODO 181110: put that in the TaskForm section\n\nexport default InputTypes;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass FormBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n\n    }\n\n\n//FIXME 181228: I'm not passing the task as a prop here. so it doesn't know what's the id when it makes the http call.\n    render() {\n         return <form id={this.props.id}>\n            {\n\n                this.props.inputFields.map(input=>{\n                    const propsWithKey = Object.assign({\n                        key:\"\" + this.props.task._id + input.props.name,\n                        value: this.props.task[input.props.name]}\n                        ,input.props);\n                    return input.content?\n                        React.createElement(input.type, propsWithKey,input.content):\n                        React.createElement(input.type, propsWithKey);\n                })\n            }\n        </form>\n    }\n}\n\nexport default FormBuilder;\n","import fetchUtil from '../util/fetchUtil'\n\n//TODO 181209: I have to get the token from somewhere.\n\n/**\n * Create a task\n * @param task: the task to create\n * @param parentType: \"TaskObject\" or \"Category\"\n * @param parentId: the id of the parent\n */\nconst TaskApiCalls = {\n    createTask: (task, parentType, parentId, token, callback)=>{\n        fetchUtil.postData(parentType +\"/\"+parentId,token,task,callback);\n    },\n    modifyTask: (task, token, callback)=> {\n        fetchUtil.putData(task._id.toString(),token,task,callback);\n    },\n    getTask: (taskId,token,callback)=>{\n        const route = 'task/' + taskId;\n        fetchUtil.getData(\n        route,\n        token,\n        responseData => {\n            callback(responseData);\n        }\n\n);\n\n}\n}\n\nexport default TaskApiCalls\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport formUtil from '../util/formUtil'\nimport fetchUtil from '../util/fetchUtil'\n\nclass TaskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'description'}, type: InputTypes.TEXT},\n                {props: {name: 'deadline'}, type: InputTypes.DATE},\n                {props: {name: 'startDate'}, type: InputTypes.DATE},\n                {props: {name: 'external'}, type: InputTypes.CHECKBOX},\n                {props: {name: 'estTime'}, type: InputTypes.NUMBER},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n         };\n\n\n\n\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const task = formUtil.formInputsToJsonObject(form);\n        this.props.submitAction(task)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                task = {this.props.task}\n            />\n        </div>\n    }\n}\n\nexport default TaskForm;\n","import React from \"react\";\n\nconst UserContext = React.createContext({});\n\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;","import React from \"react\";\n\n\nfunction ComponentName(props) {\n    return (\n        <div>\n            Loading gif...\n        </div>\n    );\n}\n\nexport default ComponentName;","class TaskObject {\n    constructor() {\n        this.name = \"\";\n        this.description = \"\";\n        this.subTasks= [];\n        this.events=[];\n        this.completed=\"\";\n        this.deadline=new Date();\n        this.startDate=new Date();\n        this.notes=[];\n        this.external=false;\n        this.parent=0;\n        this.parentType=\"\";\n        this.prqTask=[];\n        this.prqEvent=[];\n        this.estTime=0;\n        this.accountId=\"\";\n    }\n\n}\n\nexport default TaskObject;","import TaskApiCalls from \"../ApiCallFunctions/TaskApiCalls\";\n\n//TODO 181231: add create & delete operations for all branch types\n\nclass ModifyListActions{\n    constructor(parentType,parentId,token, setStateCallback){\n        this.addTask= (task) => {\n            TaskApiCalls.createTask(\n                task,\n                parentType,\n                parentId,\n                token,\n                (returnedTask) => setStateCallback(returnedTask));\n        }\n\n    }\n    \n}\n\nexport default ModifyListActions;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport {UserConsumer} from \"../UserContext\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport TaskObject from '../ObjectClasses/TaskObject'\nimport ModifyListActions from \"../util/ModifyListActions\";\n\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            task: undefined\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        TaskApiCalls.getTask(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedTask) => this.setState({task: returnedTask}))\n    };\n\n    modify =(modifiedTask) =>{\n        TaskApiCalls.modifyTask(modifiedTask,this.props.xAccessToken,(returnedTask) => this.setState({task: returnedTask}));\n    };\n\n    modifyListActions = new ModifyListActions(\n        \"TaskObject\",\n        this.state.task._id,\n        this.props.xAccessToken,\n        this.update()\n        )\n\n\n    render() {\n        if (this.state.task) {\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <TaskForm data={this.state.task} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <TaskObject data={this.state.task} buttonAction={this.expandCollapse} editAction={this.input}\n                                displayState={this.state.displayState} xAccessToken = {this.props.xAccessToken}/>\n            )\n        } else if(!this.props.id){\n            return <TaskForm data={new TaskObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addTask}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default TaskContainer;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport TaskContainer from '../ContainerComponents/TaskContainer';\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addTask:false\n        };\n    }\n\n    addTask = ()=>this.setState({addTask:true});\n    //null taskId will create a new task\n    addNewTaskTrue=data=>{\n        return [...data, null];\n    }\n\n    render() {\n\n        const taskListData = this.addTask?\n            this.props.data:\n            this.props.data.addNewTaskTrue();\n        return (\n            <div className=\"TaskList\" id={this.props.catId + \"Tasks\"}>\n                {\n                    taskListData.map(\n                        taskId => {\n                            return <TaskContainer id={taskId} xAccessToken = {this.props.xAccessToken}\n                            modifyListActions = {this.props.modifyListActions}/>\n                        }\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport '../App.css';\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\n\n\nfunction Category(props){\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <h2 className = \"catName\">\n                {props.data.name}\n            </h2>\n            <h3>Tasks</h3>\n            <TaskList data = {props.data.tasks} catId={props.data._id} modifyListActions = {props.modifyListActions}/>\n            <h3 >Events</h3>\n            <EventList data={props.data.events} catId={props.data._id} modifyListActions = {props.modifyListActions} />\n        </div>\n    );\n}\n\nexport default Category;","import fetchUtil from '../util/fetchUtil'\n\n//TODO 181209: I have to get the token from somewhere.\n\n/**\n * Create a task\n * @param task: the task to create\n * @param parentType: \"TaskObject\" or \"Category\"\n * @param parentId: the id of the parent\n */\nconst TaskApiCalls = {\n    getCategory: (id,token, callback)=>{\n        const route = 'category/' + id;\n        fetchUtil.getData(\n            route,\n            token,\n            responseData => {\n                callback(responseData);\n            }\n        );\n\n    },\n    modifyCategory:(modifiedCategory,token,callback)=>{\n        fetchUtil.putData(modifiedCategory._id.toString(),token,modifiedCategory,callback);\n    }\n}\n\nexport default TaskApiCalls","import React, {Component} from 'react';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from \"./FormBuilder\";\n\nclass ComponentName extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n            ],\n\n\n        };\n\n\n\n\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const category = formUtil.formInputsToJsonObject(form);\n        this.props.submitAction(category)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                category = {this.props.category}\n            />\n        </div>\n    }\n\n}\n\nexport default ComponentName;\n","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport fetchUtil from \"../util/fetchUtil\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport Category from \"../BranchComponents/Category\";\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport CategoryForm from \"../FormComponents/CategoryForm\";\nimport ModifyListActions from \"../util/ModifyListActions\";\n\nclass ComponentName extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED,\n            category: undefined\n        };\n    }\n\n    expandCollapse=()=>{\n        this.state.displayState===DisplayStates.COLLAPSED?\n            this.setState({displayState:DisplayStates.EXPANDED})\n            : this.setState({displayState:DisplayStates.COLLAPSED});\n    }\n\n\n    input=()=>{\n        this.setState({displayState:DisplayStates.INPUT});\n    };\n\n    update=()=>{\n        CategoryApiCalls.getCategory(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n    modify=(modifiedCategory)=> {\n        CategoryApiCalls.modifyCategory(\n            modifiedCategory,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n\n    modifyListActions = new ModifyListActions(\n        \"Category\",\n        this.state.category._id,\n        this.props.xAccessToken,\n        this.update()\n        )\n\n\n    render() {\n        if(this.state.category) {\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <CategoryForm data={this.props.data} submitAction = {this.modify}/> :\n                    <Category data={this.props.data} buttonAction={this.expandCollapse} editAction={this.input}\n                              displayState={this.state.displayState} modifyListActions = {this.modifyListActions}/>\n            )\n        } else {\n            this.update();\n            return <LoadingGif/>\n        }\n    }\n\n}\n\nexport default ComponentName;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport fetchUtil from '../util/fetchUtil';\nimport Category from '../BranchComponents/Category';\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport CategoryContainer from \"../ContainerComponents/CategoryContainer\";\n\n//TODO 181231: I want to change this so this component doesn't get the categories, the user component does. But I'll have to change the API to do that.\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: undefined,\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n        };\n    }\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                'category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData})\n                }\n            );\n            return (\n                <LoadingGif/>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <CategoryContainer id = {cat._id}/>\n                                )\n                            }\n                        )\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './ListComponents/CategoryList';\nimport LoginForm from './FormComponents/LoginForm';\nimport fetchUtil from './util/fetchUtil';\nimport {UserProvider} from './UserContext';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\n//TODO 181028: put username and xAccessToken in context so I can use it from anywhere\nclass User extends Component {\n\n   \n\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        };\n        this.login=this.login.bind(this);\n    }\n\n    componentDidMount(){\n\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            'account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(\n              <div id='userRoot'>\n                  <UserProvider value = {this.state.xAccessToken}>\n                    <CategoryList xAccessToken = {this.state.xAccessToken}/>\n                  </UserProvider>\n              </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n//registerServiceWorker();\n//unregister();\n"],"sourceRoot":""}