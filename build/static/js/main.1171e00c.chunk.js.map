{"version":3,"sources":["logo.svg","util/formUtil.js","util/fetchUtil.js","Enums/DisplayStates.js","BranchComponents/Event.js","ContainerComponents/EventContainer.js","ListComponents/EventList.js","ContainerComponents/NoteContainer.js","ListComponents/NoteList.js","BranchComponents/Task.js","InputComponents/TextInput.js","InputComponents/PasswordInput.js","InputComponents/ResetInput.js","InputComponents/CheckboxInput.js","InputComponents/SubmitInput.js","InputComponents/ButtonInput.js","InputComponents/DateInput.js","InputComponents/EmailInput.js","InputComponents/NumberInput.js","InputComponents/TimeIntervalInput.js","Enums/InputTypes.js","FormComponents/FormBuilder.js","ApiCallFunctions/ApiCalls.js","ApiCallFunctions/TaskApiCalls.js","FormComponents/TaskForm.js","DisplayComponents/LoadingGif.js","ObjectClasses/TaskObject.js","ListActions/ModifyListActions.js","ListActions/ModifyTaskListActions.js","ContainerComponents/TaskContainer.js","ListComponents/TaskList.js","BranchComponents/Category.js","ApiCallFunctions/CategoryApiCalls.js","FormComponents/CategoryForm.js","ContainerComponents/CategoryContainer.js","ListComponents/CategoryList.js","FormComponents/LoginForm.js","UserContext.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","formInputsToObject","form","inputs","Array","from","querySelectorAll","newObj","forEach","input","type","name","checked","value","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","Event","EventContainer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Component","EventList","addEvent","setState","addNote","addNewEventTrue","toConsumableArray","concat","_this2","eventListData","addNewNoteTrue","className","id","catId","evtId","ContainerComponents_EventContainer","xAccessToken","modifyListActions","NoteContainer","NoteList","noteListData","noteId","ContainerComponents_NoteContainer","Task","_id","onClick","buttonAction","displayState","description","completed","deadline","startDate","external","estTime","subTasks","ListComponents_TaskList","events","ListComponents_EventList","prqTasks","prqEvents","notes","ListComponents_NoteList","editAction","class","src","TextInput","event","target","Fragment","assign","toLowerCase","onChange","handleChange","bind","attributes","PasswordInput","ResetInput","action","preventDefault","handleClick","CheckboxInput","handleCheck","SubmitInput","ButtonInput","DateInput","split","EmailInput","NumberInput","TimeIntervalInput","InputTypes","TEXT","PASSWORD","SUBMIT","RESET","CHECKBOX","BUTTON","DATE","EMAIL","NUMBER","TIMEINTERVAL","FormBuilder","inputFields","propsWithKey","content","React","ApiCalls","routeString","createObject","parentType","parentId","jsonString","JSON","stringify","responseData","modifyObject","toString","getObject","objId","deleteObject","responseDate","rebaseObject","newParentType","newParentId","TaskApiCalls","getTask","taskId","get","prototype","assertThisInitialized","modifyTask","modifiedTask","deleteTask","createTask","newTask","rebaseTask","TaskForm","submitAction","document","getElementById","formData","taskJson","FormComponents_FormBuilder","handlers","ComponentName","TaskObject","Date","parent","prqTask","prqEvent","accountId","ModifyListActions","apiCallObject","setStateCallback","addItem","returnedTask","ModifyTaskListActions","TaskContainer","expandCollapse","update","task","modify","undefined","FormComponents_TaskForm","BranchComponents_Task","LoadingGif","addTask","TaskList","addNewTaskTrue","taskListData","ContainerComponents_TaskContainer","Category","_React$createElement","tasks","defineProperty","CategoryApiCalls","getCategory","modifyCategory","modifiedCategory","deleteCategory","categoryId","addCategory","category","returnedData","CategoryForm","categoryJson","CategoryContainer","returnedCategory","FormComponents_CategoryForm","BranchComponents_Category","CategoryList","categories","fetchOptions","x-access-token","cat","ContainerComponents_CategoryContainer","LoginForm","username","password","handleSubmit","login","UserContext","createContext","UserProvider","Provider","User","Consumer","apiUrl","uiUrl","ListComponents_CategoryList","FormComponents_LoginForm","App","src_User","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.1171e00c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    },\n\n    formInputsToObject:(form)=>{\n        const inputs = Array.from(form.querySelectorAll(\"input\"));\n        let newObj = {};\n        inputs.forEach((input)=>{\n            if(input.type===\"checkbox\") {\n                newObj[input.name]=(input.checked===\"checked\");\n            } else {\n                newObj[input.name] = input.value;\n\n            }\n        });\n        return newObj;\n    }\n};\n\n\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      //return \"http://localhost:3434/\";\n      return \"https://insolent-preclude.herokuapp.com/\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, null, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n\n\n        const headers = new Headers(\n            method==='get'?{}:{\n                'Content-Type': route==='account/login'?'application/x-www-form-urlencoded':'application/json'\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import React from \"react\";\n\n\n//todo 190105: make event component\nfunction Event(props) {\n    return (\n        <div>\n\n        </div>\n    );\n}\n\nexport default Event;","import React, {Component} from 'react';\n//todo 190105: make event container\n\nclass EventContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return <div></div>\n    }\n}\n\nexport default EventContainer;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport Event from \"../BranchComponents/Event\";\nimport TaskContainer from \"../ContainerComponents/TaskContainer\";\nimport EventContainer from \"../ContainerComponents/EventContainer\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEvent: false\n        };\n    }\n\n    addEvent = ()=>this.setState({addNote:true});\n    //null eventId will create a new event\n    addNewEventTrue=data=>{\n        return [...data, null];\n    }\n\n    render() {\n        const eventListData = this.state.addNote?\n            this.props.data:\n            this.props.data.addNewNoteTrue();\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    eventListData.map(\n                        evtId => {\n                            return <EventContainer\n                                id={evtId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React, {Component} from 'react';\n//todo 190105: make note container\n\nclass NoteContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return <div></div>\n    }\n}\n\nexport default NoteContainer;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport NoteContainer from \"../ContainerComponents/NoteContainer\";\n\nclass NoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addNote: false\n        };\n    }\n\n    addNote = ()=>this.setState({addNote:true});\n    //null eventId will create a new event\n    addNewNoteTrue= data=>{\n        return [...data, null];\n    }\n\n    render() {\n        const noteListData = this.state.addNote?\n            this.props.data:\n            this.props.data.addNewNoteTrue();\n        return (\n            <div className='noteList' id={this.props.catId + 'NoteList'}>\n                {\n                    noteListData.map(\n                        noteId => {\n                            return <NoteContainer\n                                id={noteId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport NoteList from \"../ListComponents/NoteList\";\n\nfunction Task(props) {\n\n\n    return <div className='task ' id={props.data._id}>\n        <div className='collapser'>\n            <button onClick={props.buttonAction}>\n                {props.displayState === DisplayStates.EXPANDED ? '-' : '+'}\n            </button>\n        </div>\n\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Description : {props.data.description}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                <div className='property'>\n                    Deadline : {props.data.deadline}\n                </div>\n                <div className='property'>\n                    Start Date : {props.data.startDate}\n                </div>\n                <div className='property'>\n                    External : {props.data.external}\n                </div>\n                <div className='property'>\n                    Estimated Time : {props.data.estTime}\n                </div>\n                {\n                    props.data.subTasks?\n                        <div className='sublist'>\n                            <h5>SubTasks:</h5>\n                            <TaskList\n                                data = {props.data.subTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.events?\n                        <div className='sublist'>\n                            <h5>Events:</h5>\n                            <EventList data = {props.data.events}\n                                       xAccessToken = {props.xAccessToken}\n                                       modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList\n                                data = {props.data.notes}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n        <div className='editButton'>\n            <button onClick={props.editAction} class ='inputButton'>\n                <img src='../src/img/edit.svg' />\n            </button>\n        </div>\n    </div>\n}\n\nexport default Task;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TextInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='text'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TextInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass PasswordInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='password'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange = {this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default PasswordInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ResetInput extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='reset'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResetInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass CheckboxInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            checked:this.props.checked?this.state.checked:false\n        }\n    }\n\n    //not tested yet might not work\n    handleCheck(event){\n        this.setState({checked:event.target.checked})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='checkbox'\n                        name={this.props.name.toLowerCase()}\n                        checked = {this.state.checked}\n                        onChange={this.handleCheck.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass SubmitInput extends Component{\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                    <input\n                        type='submit'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n             </React.Fragment>\n        );\n    }\n}\n\nexport default SubmitInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ButtonInput extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='button'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ButtonInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass DateInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n\n            value:this.props.value.split('T')[0]\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}::\n                    <input\n                        type='date'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DateInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass EmailInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='email'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EmailInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass NumberInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.props.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NumberInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TimeIntervalInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </fragment>\n        );\n    }\n}\n\nexport default TimeIntervalInput;","import TextInput from '../InputComponents/TextInput';\nimport PasswordInput from '../InputComponents/PasswordInput';\nimport ResetInput from '../InputComponents/ResetInput';\nimport CheckboxInput from '../InputComponents/CheckboxInput';\nimport SubmitInput from '../InputComponents/SubmitInput';\nimport ButtonInput from '../InputComponents/ButtonInput';\nimport DateInput from '../InputComponents/DateInput';\nimport EmailInput from '../InputComponents/EmailInput';\nimport NumberInput from '../InputComponents/NumberInput';\nimport TimeIntervalInput from '../InputComponents/TimeIntervalInput'\n\nconst InputTypes = Object.freeze({\n    TEXT: TextInput,\n    PASSWORD: PasswordInput,\n    SUBMIT: SubmitInput,\n    RESET: ResetInput,\n    CHECKBOX: CheckboxInput,\n    BUTTON: ButtonInput,\n    DATE: DateInput,\n    EMAIL: EmailInput,\n    NUMBER: NumberInput,\n    TIMEINTERVAL: TimeIntervalInput\n});\n\n\n\nexport default InputTypes;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass FormBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n\n    }\n\n\n    render() {\n         return <form id={this.props.id}>\n            {\n\n                this.props.inputFields.map(input=>{\n                    const propsWithKey = Object.assign({\n                        key:\"\" + this.props.data._id + input.props.name,\n                        value: this.props.data[input.props.name]}\n                        ,input.props);\n                    return input.content?\n                        React.createElement(input.type, propsWithKey,input.content):\n                        React.createElement(input.type, propsWithKey);\n                })\n            }\n        </form>\n    }\n}\n\nexport default FormBuilder;\n","import fetchUtil from '../util/fetchUtil'\n//todo 190105: create all the other apiCalls classes and all the methods\n\n\nclass ApiCalls {\n    constructor(routeString){\n        this.routeString = routeString;\n    }\n    /**\n     * Create object\n     * @param obj: the object to create\n     * @param parentType: \"Task\", \"Category\" or \"Event\"\n     * @param parentId: the id of the parent\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     */\n    createObject = (obj, parentType, parentId, token, callback)=>{\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.postData(\n            `${this.routeString}/${parentType}/${parentId}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n    /**\n     * Modify object\n     * @param obj: the modified version of obj\n     * @param token: xAccessToken\n     * @param callback to do after obj is created\n     */\n\n    modifyObject= (obj, token, callback)=> {\n        const jsonString = JSON.stringify(obj);\n        fetchUtil.putData(\n            `${this.routeString}/${obj._id.toString()}`,\n            token,\n            jsonString,\n            responseData=>callback(responseData));\n    }\n\n    /**\n     * Get object\n     * @param objId: the id to get\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     */\n\n    getObject= (objId, token, callback)=>{\n        const route = `${this.routeString}/${objId}`;\n        fetchUtil.getData(\n            route,\n            token,\n            responseData => {\n                callback(responseData);\n            }\n\n        );\n\n    }\n    /**\n     * Delete object\n     * @param objType: 'category','task','note','event'\n     * @param objId: the id to delete\n     * @param token: xAccessToken\n     * @param callback to do after task is created\n     */\n    deleteObject=(objId, token, callback)=>{\n        fetchUtil.deleteData(\n            `${this.routeString}/${objId}`,\n            token,\n            responseDate=>callback(responseDate))\n    }\n\n    rebaseObject=(id,newParentType,newParentId,token,callback)=>fetchUtil.patchData(\n        `${this.routeString}/id`,\n        token,\n        JSON.stringify({newParentType:newParentType,parentId:newParentId}),\n        callback\n    )\n\n}\n\nexport default ApiCalls","import ApiCalls from \"./ApiCalls\";\n//todo 190105: create all the other apiCalls classes and all the methods\n\n\nclass TaskApiCalls extends ApiCalls{\n    constructor(){\n        super('task/');\n    }\n    getTask= (taskId,token, callback)=>super.getObject(taskId, token,callback);\n    modifyTask=(modifiedTask,token,callback)=>super.modifyObject(modifiedTask,token,callback);\n    deleteTask=(taskId,token, callback)=>super.deleteObject(taskId,token,callback);\n    createTask=(newTask, parentType, parentId, token, callback)=>super.createObject(newTask,parentType,parentId,token,callback);\n    rebaseTask=(taskId,newParentType,newParentId,token,callback)=>super.rebaseObject(taskId,newParentType,newParentId,token,callback);\n}\n\nexport default TaskApiCalls;","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport formUtil from '../util/formUtil'\nimport fetchUtil from '../util/fetchUtil'\n\nclass TaskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'description'}, type: InputTypes.TEXT},\n                {props: {name: 'deadline'}, type: InputTypes.DATE},\n                {props: {name: 'startDate'}, type: InputTypes.DATE},\n                {props: {name: 'external'}, type: InputTypes.CHECKBOX},\n                {props: {name: 'estTime'}, type: InputTypes.NUMBER},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n         };\n    }\n\n    //'external' is \"on\" when it should be \"true\"\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const taskJson = Object.assign(this.props.data,formData);\n        this.props.submitAction(taskJson)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.data}\n            />\n        </div>\n    }\n}\n\nexport default TaskForm;\n","import React from \"react\";\n\n\nfunction ComponentName(props) {\n    return (\n        <div>\n            Loading gif...\n        </div>\n    );\n}\n\nexport default ComponentName;","class TaskObject {\n    constructor() {\n        this.name = \"\";\n        this.description = \"\";\n        this.subTasks= [];\n        this.events=[];\n        this.completed=\"\";\n        this.deadline=new Date();\n        this.startDate=new Date();\n        this.notes=[];\n        this.external=false;\n        this.parent=0;\n        this.parentType=\"\";\n        this.prqTask=[];\n        this.prqEvent=[];\n        this.estTime=0;\n        this.accountId=\"\";\n    }\n\n}\n\nexport default TaskObject;","import TaskApiCalls from \"../ApiCallFunctions/TaskApiCalls\";\n\n//TODO 181231: add create & delete operations for all branch types\n\nclass ModifyListActions{\n    constructor(parentType,parentId,token, apiCallObject, setStateCallback){\n        this.addItem= (obj) => {\n            apiCallObject.createObject(\n                obj,\n                parentType,\n                parentId,\n                token,\n                (returnedTask) => setStateCallback(returnedTask));\n        }\n\n\n    }\n    \n}\n\nexport default ModifyListActions;","import ModifyListActions from \"./ModifyListActions\";\nimport TaskApiCalls from \"../ApiCallFunctions/TaskApiCalls\";\n\nclass ModifyTaskListActions extends ModifyListActions {\n    constructor(parentType,parentId,token, setStateCallback){\n        super(parentType,parentId,token,TaskApiCalls,setStateCallback);\n    }\n}\n\nexport default ModifyTaskListActions;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport TaskObject from '../ObjectClasses/TaskObject'\nimport ModifyTaskListActions from \"../ListActions/ModifyTaskListActions\";\n\n\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            task: undefined\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        TaskApiCalls.getObject(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedTask) => this.setState({task: returnedTask}))\n    };\n\n    modify =(modifiedTask) =>{\n        TaskApiCalls.modifyObject(modifiedTask,this.props.xAccessToken,(returnedTask) => {\n            this.setState({task: returnedTask, displayState: DisplayStates.EXPANDED})\n        }\n        );\n    };\n\n\n\n\n\n\n\n    render() {\n        if (this.state.task) {\n            const modifyListActions = new ModifyTaskListActions(\n                \"TaskObject\",\n                this.state.task._id,\n                this.props.xAccessToken,\n                this.update\n            )\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <TaskForm data={this.state.task} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Task\n                        data={this.state.task}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        modifyListActions = {modifyListActions}\n                    />\n            )\n        } else if(!this.props.id){\n            return <TaskForm data={new TaskObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addTask}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default TaskContainer;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport TaskContainer from '../ContainerComponents/TaskContainer';\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addTask:false\n        };\n    }\n\n    addTask = ()=>this.setState({addTask:true});\n    //null taskId will create a new task\n    addNewTaskTrue=data=>{\n        return [...data, null];\n    }\n\n    render() {\n\n        const taskListData = this.state.addTask?\n            this.props.data:\n            this.props.data.addNewTaskTrue();\n        return (\n            <div className=\"TaskList\" id={this.props.catId + \"Tasks\"}>\n                {\n                    taskListData.map(\n                        taskId => {\n                            return <TaskContainer\n                                id={taskId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport '../App.css';\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\n\n\nfunction Category(props){\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <h2 className = \"catName\">\n                {props.data.name}\n            </h2>\n            <h3>Tasks</h3>\n            <TaskList\n                data = {props.data.tasks}\n                catId={props.data._id}\n                modifyListActions = {props.modifyListActions}\n                xAccessToken = {props.xAccessToken}\n            />\n            <h3 >Events</h3>\n            <EventList\n                data={props.data.events} catId={props.data._id}\n                modifyListActions = {props.modifyListActions}\n                catId={props.data._id}\n                xAccessToken = {props.xAccessToken}\n\n            />\n        </div>\n    );\n}\n\nexport default Category;","import fetchUtil from '../util/fetchUtil'\nimport ApiCalls from './ApiCalls'\n\n\n\n/**\n * Create a task\n * @param task: the task to create\n * @param parentType: \"TaskObject\" or \"Category\"\n * @param parentId: the id of the parent\n */\nclass CategoryApiCalls extends ApiCalls {\n    constructor(){\n        super('category');\n    }\n\n    getCategory= (id,token, callback)=>super.getObject(id, token,callback);\n    modifyCategory=(modifiedCategory,token,callback)=>super.modifyObject(modifiedCategory,token,callback);\n    deleteCategory=(categoryId,token, callback)=>super.deleteObject(categoryId,token,callback);\n    addCategory=(category,token,callback)=>fetchUtil.postData(\n        //don't use ApiCalls because category is always child of root so no parentTyoe or parentId\n        \"category/\",\n        token,\n        category,\n        returnedData=>callback(returnedData)\n    )\n\n}\n\nexport default CategoryApiCalls","import React, {Component} from 'react';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from \"./FormBuilder\";\n\nclass CategoryForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n            ],\n\n\n        };\n\n\n\n\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const formData = formUtil.formInputsToObject(form);\n        const categoryJson = Object.assign(this.props.category, formData);\n        this.props.submitAction(categoryJson)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                data = {this.props.category}\n            />\n        </div>\n    }\n\n}\n\nexport default CategoryForm;\n","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport fetchUtil from \"../util/fetchUtil\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport Category from \"../BranchComponents/Category\";\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport CategoryForm from \"../FormComponents/CategoryForm\";\nimport ModifyListActions from \"../ListActions/ModifyListActions\";\n\n//todo 190105: make all the update, add, modify methods in category, task, note\n\nclass CategoryContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED,\n            category: undefined\n        };\n    }\n\n    expandCollapse=()=>{\n        this.state.displayState===DisplayStates.COLLAPSED?\n            this.setState({displayState:DisplayStates.EXPANDED})\n            : this.setState({displayState:DisplayStates.COLLAPSED});\n    }\n\n\n    input=()=>{\n        this.setState({displayState:DisplayStates.INPUT});\n    };\n\n    update=()=>{\n        CategoryApiCalls.getCategory(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n    modify=(modifiedCategory)=> {\n        CategoryApiCalls.modifyCategory(\n            modifiedCategory,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n\n\n\n    render() {\n        if(this.state.category) {\n            const modifyListActions = new ModifyListActions(\n                \"Category\",\n                this.state.category._id,\n                this.props.xAccessToken,\n                this.update\n            )\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <CategoryForm data={this.props.data} submitAction = {this.modify}/> :\n                    <Category\n                        data={this.state.category}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        modifyListActions = {modifyListActions}\n                        xAccessToken = {this.props.xAccessToken}\n                    />\n            )\n        } else {\n            this.update();\n            return <LoadingGif/>\n        }\n    }\n\n}\n\nexport default CategoryContainer;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport fetchUtil from '../util/fetchUtil';\nimport Category from '../BranchComponents/Category';\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport CategoryContainer from \"../ContainerComponents/CategoryContainer\";\n\n//TODO 181231: I want to change this so this component doesn't get the categories, the user component does. But I'll have to change the API to do that.\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: undefined,\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n        };\n    }\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                'category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData})\n                }\n            );\n            return (\n                <LoadingGif/>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <CategoryContainer id = {cat._id} xAccessToken = {this.props.xAccessToken}/>\n                                )\n                            }\n                        )\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React from \"react\";\n\nconst UserContext = React.createContext({});\n\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './ListComponents/CategoryList';\nimport LoginForm from './FormComponents/LoginForm';\nimport fetchUtil from './util/fetchUtil';\nimport {UserProvider} from './UserContext';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\nclass User extends Component {\n\n   \n\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"http://localhost:3434\",//\"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        };\n        this.login=this.login.bind(this);\n    }\n\n    componentDidMount(){\n\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            'account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(\n              <div id='userRoot'>\n                  <UserProvider value = {this.state.xAccessToken}>\n                    <CategoryList xAccessToken = {this.state.xAccessToken}/>\n                  </UserProvider>\n              </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n//registerServiceWorker();\n//unregister();\n"],"sourceRoot":""}