{"version":3,"sources":["logo.svg","util/formUtil.js","util/fetchUtil.js","Enums/DisplayStates.js","BranchComponents/Event.js","ListComponents/EventList.js","ListComponents/NoteList.js","BranchComponents/Task.js","InputComponents/TextInput.js","InputComponents/PasswordInput.js","InputComponents/ResetInput.js","InputComponents/CheckboxInput.js","InputComponents/SubmitInput.js","InputComponents/ButtonInput.js","InputComponents/DateInput.js","InputComponents/EmailInput.js","InputComponents/NumberInput.js","InputComponents/TimeIntervalInput.js","Enums/InputTypes.js","FormComponents/FormBuilder.js","ApiCallFunctions/TaskApiCalls.js","FormComponents/TaskForm.js","UserContext.js","DisplayComponents/LoadingGif.js","ObjectClasses/TaskObject.js","util/ModifyListActions.js","ContainerComponents/TaskContainer.js","ListComponents/TaskList.js","BranchComponents/Category.js","ApiCallFunctions/CategoryApiCalls.js","FormComponents/CategoryForm.js","ContainerComponents/CategoryContainer.js","ListComponents/CategoryList.js","FormComponents/LoginForm.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","formInputsToJsonObject","form","inputs","Array","from","querySelectorAll","newObj","forEach","input","name","value","JSON","stringify","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","Event","props","react_default","a","createElement","EventList","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","className","id","catId","evt","BranchComponents_Event","Component","NoteList","Task","_id","onClick","buttonAction","displayState","description","completed","deadline","startDate","external","estTime","subTasks","ListComponents_TaskList","xAccessToken","modifyListActions","events","ListComponents_EventList","prqTasks","prqEvents","notes","ListComponents_NoteList","editAction","src","TextInput","event","setState","target","Fragment","assign","type","toLowerCase","onChange","handleChange","bind","attributes","PasswordInput","ResetInput","action","preventDefault","handleClick","CheckboxInput","checked","handleCheck","SubmitInput","ButtonInput","DateInput","split","EmailInput","NumberInput","TimeIntervalInput","InputTypes","TEXT","PASSWORD","SUBMIT","RESET","CHECKBOX","BUTTON","DATE","EMAIL","NUMBER","TIMEINTERVAL","FormBuilder","_this2","inputFields","propsWithKey","task","content","React","TaskApiCalls","createTask","parentType","parentId","modifyTask","toString","getTask","taskId","responseData","TaskForm","submitAction","document","getElementById","FormComponents_FormBuilder","handlers","UserContext","createContext","UserProvider","Provider","Consumer","ComponentName","TaskObject","Date","parent","prqTask","prqEvent","accountId","ModifyListActions","setStateCallback","addTask","returnedTask","TaskContainer","expandCollapse","update","modify","modifiedTask","undefined","FormComponents_TaskForm","BranchComponents_Task","LoadingGif","TaskList","addNewTaskTrue","toConsumableArray","concat","taskListData","ContainerComponents_TaskContainer","Category","_React$createElement","tasks","defineProperty","getCategory","modifyCategory","modifiedCategory","category","CategoryApiCalls","returnedCategory","CategoryForm","BranchComponents_Category","CategoryList","categories","fetchOptions","x-access-token","cat","CategoryContainer","LoginForm","username","password","assertThisInitialized","handleSubmit","login","User","apiUrl","uiUrl","ListComponents_CategoryList","FormComponents_LoginForm","App","src_User","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6KCoBzBC,EAnBE,CACbC,0BAA2B,SAASC,GAChC,OAAOC,OAAOC,KAAKF,GAAKG,IAAI,SAACC,GACzB,OAAOC,mBAAmBD,GAAO,IAAMC,mBAAmBL,EAAII,MAC/DE,KAAK,MAGZC,uBAAuB,SAACC,GACpB,IAAMC,EAASC,MAAMC,KAAKH,EAAKI,iBAAiB,UAC5CC,EAAS,GAIb,OAHAJ,EAAOK,QAAQ,SAACC,GACZF,EAAOE,EAAMC,MAAMD,EAAME,QAEtBC,KAAKC,UAAUN,KCRxBO,EAAY,CAEdC,UAAU,WAER,MAAO,4CAITC,QAAQ,SAACC,EAAOC,EAAOC,GACnBL,EAAUM,UAAUH,EAAO,MAAOC,EAAO,KAAMC,IAGnDE,SAAU,SAACJ,EAAOC,EAAOI,EAAMH,GAC3BL,EAAUM,UAAUH,EAAO,OAAQC,EAAOI,EAAMH,IAGpDI,QAAS,SAACN,EAAOC,EAAOI,EAAMH,GAC1BL,EAAUM,UAAUH,EAAO,MAAOC,EAAOI,EAAMH,IAGnDK,WAAY,SAACP,EAAOC,EAAOI,EAAMH,GAC7BL,EAAUM,UAAUH,EAAO,SAAUC,EAAOI,EAAMH,IAGtDM,UAAW,SAACR,EAAOC,EAAOI,EAAMH,GAC5BL,EAAUM,UAAUH,EAAO,QAASC,EAAOI,EAAMH,IAGrDC,UAAY,SAACH,EAAOS,EAAQR,EAAOI,EAAMH,GACrC,IAAMQ,EAAU,IAAIC,QAChB,CACIC,eAAgB,sCAKrBX,GACCS,EAAQG,IAAI,iBAAiBZ,GAGjC,IAAIa,EAAe,CACfL,OAAQA,EACRM,KAAM,OACNC,SAAU,SACVN,QAASA,GAGD,QAATD,GAAkBJ,IACjBS,EAAaG,KAAKZ,GAGtB,IAAMa,EAAU,IAAIC,QAChBtB,EAAUC,YAAcE,EACxBc,GAGJM,MAAMF,GACDG,KACG,SAAAC,GACI,OAAOA,EAAKC,QAEhB,SAAAC,GACI,KAAM,UAAYA,IAEzBH,KACG,SAAAI,GAAWvB,EAASuB,OAKrB5B,mBCpEA6B,EAROhD,OAAOiD,OACzB,CACIC,SAAS,WACTC,UAAW,YACXC,MAAO,UCQAC,MARf,SAAeC,GACX,OACIC,EAAAC,EAAAC,cAAA,aCoBOC,cArBX,SAAAA,EAAYJ,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAH,IACfC,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAA0D,GAAAM,KAAAH,KAAMP,KACDW,MAAQ,GAFEN,wEAOf,OACIJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAYC,GAAIN,KAAKP,MAAMc,MAAQ,aAE1CP,KAAKP,MAAM3B,KAAKzB,IACZ,SAAAmE,GACI,OAAOd,EAAAC,EAAAC,cAACa,EAAD,CAAO3C,KAAM0C,cAbxBE,aCWTC,cAXX,SAAAA,EAAYlB,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAW,IACfb,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAwE,GAAAR,KAAAH,KAAMP,KACDW,MAAQ,GAFEN,wEAOf,OAAOJ,EAAAC,EAAAC,cAAA,mBARQc,aC4GRE,MAxGf,SAAcnB,GAGV,OAAOC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,QAAQC,GAAIb,EAAM3B,KAAK+C,KACzCnB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACXX,EAAAC,EAAAC,cAAA,UAAQkB,QAASrB,EAAMsB,cAClBtB,EAAMuB,eAAiB7B,EAAcE,SAAW,IAAM,MAI/DK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACXX,EAAAC,EAAAC,cAAA,UAAKH,EAAM3B,KAAKZ,MAChBwC,EAAAC,EAAAC,cAAA,OAAKS,UAAWZ,EAAMuB,eAAiB7B,EAAcE,SAAW,WAAa,aACzEK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,iBACmBZ,EAAM3B,KAAKmD,aAE9BvB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,eACiBZ,EAAM3B,KAAKoD,WAE5BxB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,cACgBZ,EAAM3B,KAAKqD,UAE3BzB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,gBACkBZ,EAAM3B,KAAKsD,WAE7B1B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,cACgBZ,EAAM3B,KAAKuD,UAE3B3B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,oBACsBZ,EAAM3B,KAAKwD,SAG7B7B,EAAM3B,KAAKyD,SACP7B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAC4B,EAAD,CACI1D,KAAQ2B,EAAM3B,KAAKyD,SACnBE,aAAgBhC,EAAMgC,aACtBC,kBAAqBjC,EAAMiC,qBAIlC,GAGLjC,EAAM3B,KAAK6D,OACPjC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACgC,EAAD,CAAW9D,KAAQ2B,EAAM3B,KAAK6D,OACnBF,aAAgBhC,EAAMgC,aACtBC,kBAAqBjC,EAAMiC,qBAIzC,GAGLjC,EAAM3B,KAAK+D,SACPnC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAC4B,EAAD,CACI1D,KAAQ2B,EAAM3B,KAAK+D,SACnBJ,aAAgBhC,EAAMgC,aACtBC,kBAAqBjC,EAAMiC,qBAGlC,GAGLjC,EAAM3B,KAAKgE,UACPpC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACgC,EAAD,CACI9D,KAAQ2B,EAAM3B,KAAKgE,UACnBL,aAAgBhC,EAAMgC,aACtBC,kBAAqBjC,EAAMiC,qBAIlC,GAGLjC,EAAM3B,KAAKiE,MACPrC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACoC,EAAD,CACIlE,KAAQ2B,EAAM3B,KAAKiE,MACnBN,aAAgBhC,EAAMgC,aACtBC,kBAAqBjC,EAAMiC,qBAIlC,KAIjBhC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACXX,EAAAC,EAAAC,cAAA,UAAQkB,QAASrB,EAAMwC,YACnBvC,EAAAC,EAAAC,cAAA,OAAKsC,IAAI,wBCrEVC,cA9BX,SAAAA,EAAY1C,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAmC,IACdrC,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAgG,GAAAhC,KAAAH,KAAMP,KACDW,MAAM,CACPjD,MAAO2C,EAAKL,MAAMtC,MAAM2C,EAAKL,MAAMtC,MAAM,IAH/B2C,4EAOLsC,GACTpC,KAAKqC,SAAS,CAAClF,MAAOiF,EAAME,OAAOnF,yCAKnC,OACIuC,EAAAC,EAAAC,cAACF,EAAAC,EAAM4C,SAAP,KACI7C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAqG,OAAA,CACIC,KAAK,OACLvF,KAAM8C,KAAKP,MAAMvC,KAAKwF,cACtBvF,MAAO6C,KAAKI,MAAMjD,MAClBwF,SAAU3C,KAAK4C,aAAaC,KAAK7C,OAC7BA,KAAKP,MAAMqD,sBAxBfpC,aCgCTqC,cA9BX,SAAAA,EAAYtD,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA+C,IACdjD,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAA4G,GAAA5C,KAAAH,KAAMP,KACDW,MAAM,CACPjD,MAAM2C,EAAKL,MAAMtC,MAAM2C,EAAKL,MAAMtC,MAAM,IAH9B2C,4EAOLsC,GACTpC,KAAKqC,SAAS,CAAClF,MAAOiF,EAAME,OAAOnF,yCAInC,OACIuC,EAAAC,EAAAC,cAACF,EAAAC,EAAM4C,SAAP,KACI7C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAqG,OAAA,CACIC,KAAK,WACLvF,KAAM8C,KAAKP,MAAMvC,KAAKwF,cACtBvF,MAAO6C,KAAKI,MAAMjD,MAClBwF,SAAY3C,KAAK4C,aAAaC,KAAK7C,OAC/BA,KAAKP,MAAMqD,sBAvBXpC,aC2BbsC,cAzBX,SAAAA,EAAYvD,GAAO,OAAAtD,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAgD,GAAA7G,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAA6G,GAAA7C,KAAAH,KACTP,6EAIE2C,GACRpC,KAAKP,MAAMwD,SACXb,EAAMc,kDAKN,OACIxD,EAAAC,EAAAC,cAACF,EAAAC,EAAM4C,SAAP,KACS7C,EAAAC,EAAAC,cAAA,QAAAzD,OAAAqG,OAAA,CACGC,KAAK,QACLvF,KAAM8C,KAAKP,MAAMvC,KAAKwF,cACtB5B,QAASd,KAAKmD,YAAYN,KAAK7C,OAC3BA,KAAKP,MAAMqD,qBApBdpC,aCgCV0C,cA9BX,SAAAA,EAAY3D,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAoD,IACdtD,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAiH,GAAAjD,KAAAH,KAAMP,KACDW,MAAQ,CACTiD,UAAQvD,EAAKL,MAAM4D,SAAQvD,EAAKM,MAAMiD,SAH5BvD,2EAQNsC,GACRpC,KAAKqC,SAAS,CAACgB,QAAQjB,EAAME,OAAOe,2CAIpC,OACI3D,EAAAC,EAAAC,cAACF,EAAAC,EAAM4C,SAAP,KACI7C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAqG,OAAA,CACIC,KAAK,WACLvF,KAAM8C,KAAKP,MAAMvC,KAAKwF,cACtBW,QAAWrD,KAAKI,MAAMiD,QACtBV,SAAU3C,KAAKsD,YAAYT,KAAK7C,OAC5BA,KAAKP,MAAMqD,sBAxBXpC,aC4Bb6C,cA1BX,SAAAA,EAAY9D,GAAO,OAAAtD,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAuD,GAAApH,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAoH,GAAApD,KAAAH,KACTP,6EAIE2C,GACRpC,KAAKP,MAAMwD,SACXb,EAAMc,kDAMN,OACIxD,EAAAC,EAAAC,cAACF,EAAAC,EAAM4C,SAAP,KACQ7C,EAAAC,EAAAC,cAAA,QAAAzD,OAAAqG,OAAA,CACIC,KAAK,SACLvF,KAAM8C,KAAKP,MAAMvC,KAAKwF,cACtB5B,QAASd,KAAKmD,YAAYN,KAAK7C,OAC3BA,KAAKP,MAAMqD,qBArBbpC,aCyBX8C,cAvBX,SAAAA,EAAY/D,GAAO,OAAAtD,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAwD,GAAArH,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAqH,GAAArD,KAAAH,KACTP,6EAGE2C,GACRpC,KAAKP,MAAMwD,SACXb,EAAMc,kDAIN,OACIxD,EAAAC,EAAAC,cAACF,EAAAC,EAAM4C,SAAP,KACS7C,EAAAC,EAAAC,cAAA,QAAAzD,OAAAqG,OAAA,CACGC,KAAK,SACLvF,KAAM8C,KAAKP,MAAMvC,KAAKwF,cACtB5B,QAASd,KAAKmD,YAAYN,KAAK7C,OAC3BA,KAAKP,MAAMqD,qBAlBbpC,aC+BX+C,cA7BX,SAAAA,EAAYhE,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAyD,IACd3D,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAsH,GAAAtD,KAAAH,KAAMP,KACDW,MAAM,CACPjD,MAAM2C,EAAKL,MAAMtC,MAAMuG,MAAM,KAAK,IAHxB5D,4EAOLsC,GACTpC,KAAKqC,SAAS,CAAClF,MAAOiF,EAAME,OAAOnF,yCAInC,OACIuC,EAAAC,EAAAC,cAACF,EAAAC,EAAM4C,SAAP,KACI7C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,KAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAqG,OAAA,CACIC,KAAK,OACLvF,KAAM8C,KAAKP,MAAMvC,KAAKwF,cACtBvF,MAAO6C,KAAKI,MAAMjD,MAClBwF,SAAU3C,KAAK4C,aAAaC,KAAK7C,OAC7BA,KAAKP,MAAMqD,sBAvBfpC,aC+BTiD,cA7BX,SAAAA,EAAYlE,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA2D,IACd7D,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAwH,GAAAxD,KAAAH,KAAMP,KACDW,MAAQ,CACTjD,MAAM2C,EAAKL,MAAMtC,MAAM2C,EAAKL,MAAMtC,MAAM,IAH9B2C,4EAOLsC,GACTpC,KAAKqC,SAAS,CAAClF,MAAOiF,EAAME,OAAOnF,yCAInC,OACIuC,EAAAC,EAAAC,cAACF,EAAAC,EAAM4C,SAAP,KACI7C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAqG,OAAA,CACIC,KAAK,QACLvF,KAAM8C,KAAKP,MAAMvC,KAAKwF,cACtBvF,MAAO6C,KAAKI,MAAMjD,MAClBwF,SAAU3C,KAAK4C,aAAaC,KAAK7C,OAC7BA,KAAKP,MAAMqD,sBAvBdpC,aC+BVkD,cA7BX,SAAAA,EAAYnE,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA4D,IACd9D,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAyH,GAAAzD,KAAAH,KAAMP,KACDW,MAAQ,CACTjD,MAAM2C,EAAKL,MAAMtC,MAAM2C,EAAKL,MAAMtC,MAAM,IAH9B2C,4EAOLsC,GACTpC,KAAKqC,SAAS,CAAClF,MAAOiF,EAAME,OAAOnF,yCAInC,OACIuC,EAAAC,EAAAC,cAACF,EAAAC,EAAM4C,SAAP,KACI7C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAqG,OAAA,CACIC,KAAK,SACLvF,KAAM8C,KAAKP,MAAMvC,KAAKwF,cACtBvF,MAAO6C,KAAKP,MAAMtC,MAClBwF,SAAU3C,KAAK4C,aAAaC,KAAK7C,OAC7BA,KAAKP,MAAMqD,sBAvBbpC,aC+BXmD,cA7BX,SAAAA,EAAYpE,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA6D,IACd/D,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAA0H,GAAA1D,KAAAH,KAAMP,KACDW,MAAM,CACPjD,MAAO2C,EAAKL,MAAMtC,MAAM2C,EAAKL,MAAMtC,MAAM,IAH/B2C,4EAOLsC,GACTpC,KAAKqC,SAAS,CAAClF,MAAOiF,EAAME,OAAOnF,yCAInC,OACIuC,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAqG,OAAA,CACIC,KAAK,SACLvF,KAAM8C,KAAKP,MAAMvC,KAAKwF,cACtBvF,MAAO6C,KAAKI,MAAMjD,MAClBwF,SAAU3C,KAAK4C,aAAaC,KAAK7C,OAC7BA,KAAKP,MAAMqD,sBAvBPpC,aCsBjBoD,EAfI3H,OAAOiD,OAAO,CAC7B2E,KAAM5B,EACN6B,SAAUjB,EACVkB,OAAQV,EACRW,MAAOlB,EACPmB,SAAUf,EACVgB,OAAQZ,EACRa,KAAMZ,EACNa,MAAOX,EACPY,OAAQX,EACRY,aAAcX,ICUHY,cA3BX,SAAAA,EAAYhF,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAyE,IACf3E,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAsI,GAAAtE,KAAAH,KAAMP,KACDW,MAAQ,GAFEN,wEASV,IAAA4E,EAAA1E,KACJ,OAAON,EAAAC,EAAAC,cAAA,QAAMU,GAAIN,KAAKP,MAAMa,IAGrBN,KAAKP,MAAMkF,YAAYtI,IAAI,SAAAY,GACvB,IAAM2H,EAAezI,OAAOqG,OAAO,CAC/BlG,IAAI,GAAKoI,EAAKjF,MAAMoF,KAAKhE,IAAM5D,EAAMwC,MAAMvC,KAC3CC,MAAOuH,EAAKjF,MAAMoF,KAAK5H,EAAMwC,MAAMvC,OAClCD,EAAMwC,OACX,OAAOxC,EAAM6H,QACTC,IAAMnF,cAAc3C,EAAMwF,KAAMmC,EAAa3H,EAAM6H,SACnDC,IAAMnF,cAAc3C,EAAMwF,KAAMmC,aArB9BlE,aC4BXsE,EArBM,CACjBC,WAAY,SAACJ,EAAMK,EAAYC,EAAUzH,EAAOC,GAC5CL,EAAUO,SAASqH,EAAY,IAAIC,EAASzH,EAAMmH,EAAKlH,IAE3DyH,WAAY,SAACP,EAAMnH,EAAOC,GACtBL,EAAUS,QAAQ8G,EAAKhE,IAAIwE,WAAW3H,EAAMmH,EAAKlH,IAErD2H,QAAS,SAACC,EAAO7H,EAAMC,GACnB,IAAMF,EAAQ,QAAU8H,EACxBjI,EAAUE,QACVC,EACAC,EACA,SAAA8H,GACI7H,EAAS6H,OCsBNC,cApCX,SAAAA,EAAYhG,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAyF,IACf3F,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAsJ,GAAAtF,KAAAH,KAAMP,KAgBViG,aAAa,WACT,IAAMhJ,EAAOiJ,SAASC,eAAe,OAAO9F,EAAKL,MAAMa,IACjDuE,EAAO7I,EAASS,uBAAuBC,GAC7CoD,EAAKL,MAAMiG,aAAab,IAlBxB/E,EAAKM,MAAQ,CACTuE,YAAa,CACT,CAAClF,MAAO,CAACvC,KAAM,QAAUuF,KAAMqB,EAAWC,MAC1C,CAACtE,MAAO,CAACvC,KAAM,eAAgBuF,KAAMqB,EAAWC,MAChD,CAACtE,MAAO,CAACvC,KAAM,YAAauF,KAAMqB,EAAWO,MAC7C,CAAC5E,MAAO,CAACvC,KAAM,aAAcuF,KAAMqB,EAAWO,MAC9C,CAAC5E,MAAO,CAACvC,KAAM,YAAauF,KAAMqB,EAAWK,UAC7C,CAAC1E,MAAO,CAACvC,KAAM,WAAYuF,KAAMqB,EAAWS,QAC5C,CAAC9E,MAAO,CAACvC,KAAM,OAAQ+F,OAAQnD,EAAK4F,cAAejD,KAAMqB,EAAWG,UAV7DnE,wEA0Bf,OAAOJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAYC,GAAI,OAAON,KAAKP,MAAMa,IACpDZ,EAAAC,EAAAC,cAACiG,EAAD,CACIlB,YAAa3E,KAAKI,MAAMuE,YACxBmB,SAAY9F,KAAKI,MAAM0F,SACvBjB,KAAQ7E,KAAKP,MAAMoF,eA/BZnE,aCNjBqF,EAAchB,IAAMiB,cAAc,IAE3BC,EAAeF,EAAYG,SACZH,EAAYI,SCMzBC,MARf,SAAuB3G,GACnB,OACIC,EAAAC,EAAAC,cAAA,8BCgBOyG,EApBX,SAAAA,IAAelK,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAqG,GACXrG,KAAK9C,KAAO,GACZ8C,KAAKiB,YAAc,GACnBjB,KAAKuB,SAAU,GACfvB,KAAK2B,OAAO,GACZ3B,KAAKkB,UAAU,GACflB,KAAKmB,SAAS,IAAImF,KAClBtG,KAAKoB,UAAU,IAAIkF,KACnBtG,KAAK+B,MAAM,GACX/B,KAAKqB,UAAS,EACdrB,KAAKuG,OAAO,EACZvG,KAAKkF,WAAW,GAChBlF,KAAKwG,QAAQ,GACbxG,KAAKyG,SAAS,GACdzG,KAAKsB,QAAQ,EACbtB,KAAK0G,UAAU,ICGRC,EAdX,SAAAA,EAAYzB,EAAWC,EAASzH,EAAOkJ,GAAkBzK,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA2G,GACrD3G,KAAK6G,QAAS,SAAChC,GACXG,EAAaC,WACTJ,EACAK,EACAC,EACAzH,EACA,SAACoJ,GAAD,OAAkBF,EAAiBE,OCkEpCC,cAhEX,SAAAA,EAAYtH,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA+G,IACfjH,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAA4K,GAAA5G,KAAAH,KAAMP,KAOVuH,eAAiB,WACblH,EAAKM,MAAMY,eAAiB7B,EAAcG,UACtCQ,EAAKuC,SAAS,CAACrB,aAAc7B,EAAcE,WACzCS,EAAKuC,SAAS,CAACrB,aAAc7B,EAAcG,aAXlCQ,EAenB7C,MAAQ,WACJ6C,EAAKuC,SAAS,CAACrB,aAAc7B,EAAcI,SAhB5BO,EAmBnBmH,OAAS,WACLjC,EAAaM,QACTxF,EAAKL,MAAMa,GACXR,EAAKL,MAAMgC,aACX,SAACqF,GAAD,OAAkBhH,EAAKuC,SAAS,CAACwC,KAAMiC,OAvB5BhH,EA0BnBoH,OAAQ,SAACC,GACLnC,EAAaI,WAAW+B,EAAarH,EAAKL,MAAMgC,aAAa,SAACqF,GAAD,OAAkBhH,EAAKuC,SAAS,CAACwC,KAAMiC,OAzBpGhH,EAAKM,MAAQ,CACTY,aAAc7B,EAAcG,UAC5BuF,UAAMuC,GAJKtH,wEAiCf,GAAIE,KAAKI,MAAMyE,KAAM,CACjB,IAAMnD,EAAoB,IAAIiF,EAC1B,aACA3G,KAAKI,MAAMyE,KAAKhE,IAChBb,KAAKP,MAAMgC,aACXzB,KAAKiH,UAET,OACIjH,KAAKI,MAAMY,eAAiB7B,EAAcI,MACtCG,EAAAC,EAAAC,cAACyH,EAAD,CAAUvJ,KAAMkC,KAAKI,MAAMyE,KAAMpD,aAAczB,KAAKP,MAAMgC,aAAciE,aAAgB1F,KAAKkH,SAC7FxH,EAAAC,EAAAC,cAAC0H,EAAD,CACIxJ,KAAMkC,KAAKI,MAAMyE,KACjB9D,aAAcf,KAAKgH,eACnB/E,WAAYjC,KAAK/C,MACjB+D,aAAchB,KAAKI,MAAMY,aACzBS,aAAgBzB,KAAKP,MAAMgC,aAC3BC,kBAAqBA,IAG9B,OAAI1B,KAAKP,MAAMa,IAIlBN,KAAKiH,SAEDvH,EAAAC,EAAAC,cAAC2H,EAAD,OALG7H,EAAAC,EAAAC,cAACyH,EAAD,CAAUvJ,KAAM,IAAIuI,EAAc5E,aAAczB,KAAKP,MAAMgC,aACjDiE,aAAgB1F,KAAKP,MAAMiC,kBAAkBmF,iBAvD9CnG,aC4Bb8G,cApCX,SAAAA,EAAY/H,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAwH,IACf1H,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAqL,GAAArH,KAAAH,KAAMP,KAMVoH,QAAU,kBAAI/G,EAAKuC,SAAS,CAACwE,SAAQ,KAPlB/G,EASnB2H,eAAe,SAAA3J,GACX,OAAO3B,OAAAuL,EAAA,EAAAvL,CAAI2B,GAAX6J,OAAA,CAAiB,QARjB7H,EAAKM,MAAQ,CACTyG,SAAQ,GAHG/G,wEAaV,IAAA4E,EAAA1E,KAEC4H,EAAe5H,KAAK6G,QACtB7G,KAAKP,MAAM3B,KACXkC,KAAKP,MAAM3B,KAAK2J,iBACpB,OACI/H,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WAAWC,GAAIN,KAAKP,MAAMc,MAAQ,SAEzCqH,EAAavL,IACT,SAAAkJ,GACI,OAAO7F,EAAAC,EAAAC,cAACiI,EAAD,CACHvH,GAAIiF,EACJ9D,aAAgBiD,EAAKjF,MAAMgC,aAC3BC,kBAAqBgD,EAAKjF,MAAMiC,8BA3BzChB,aC2BRoH,MAzBf,SAAkBrI,GAAM,IAAAsI,EACpB,OACIrI,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WAAWC,GAAIb,EAAM3B,KAAK+C,KACrCnB,EAAAC,EAAAC,cAAA,MAAIS,UAAY,WACXZ,EAAM3B,KAAKZ,MAEhBwC,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC4B,EAAD,CACI1D,KAAQ2B,EAAM3B,KAAKkK,MACnBzH,MAAOd,EAAM3B,KAAK+C,IAClBa,kBAAqBjC,EAAMiC,kBAC3BD,aAAgBhC,EAAMgC,eAE1B/B,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACgC,GAADmG,EAAA,CACIjK,KAAM2B,EAAM3B,KAAK6D,OAAQpB,MAAOd,EAAM3B,KAAK+C,IAC3Ca,kBAAqBjC,EAAMiC,mBAF/BvF,OAAA8L,EAAA,EAAA9L,CAAA4L,EAAA,QAGWtI,EAAM3B,KAAK+C,KAHtB1E,OAAA8L,EAAA,EAAA9L,CAAA4L,EAAA,eAIoBtI,EAAMgC,cAJ1BsG,MCOG/C,EAjBM,CACjBkD,YAAa,SAAC5H,EAAG5C,EAAOC,GACpB,IAAMF,EAAQ,YAAc6C,EAC5BhD,EAAUE,QACNC,EACAC,EACA,SAAA8H,GACI7H,EAAS6H,MAKrB2C,eAAe,SAACC,EAAiB1K,EAAMC,GACnCL,EAAUS,QAAQqK,EAAiBvH,IAAIwE,WAAW3H,EAAM0K,EAAiBzK,KCkBlEyI,cAnCX,SAAAA,EAAY3G,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAoG,IACftG,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAiK,GAAAjG,KAAAH,KAAMP,KAcViG,aAAa,WACT,IAAMhJ,EAAOiJ,SAASC,eAAe,OAAO9F,EAAKL,MAAMa,IACjD+H,EAAWrM,EAASS,uBAAuBC,GACjDoD,EAAKL,MAAMiG,aAAa2C,IAhBxBvI,EAAKM,MAAQ,CACTuE,YAAa,CACT,CAAClF,MAAO,CAACvC,KAAM,QAAUuF,KAAMqB,EAAWC,QAJnCjE,wEAwBf,OAAOJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAYC,GAAI,OAAON,KAAKP,MAAMa,IACpDZ,EAAAC,EAAAC,cAACiG,EAAD,CACIlB,YAAa3E,KAAKI,MAAMuE,YACxBmB,SAAY9F,KAAKI,MAAM0F,SACvBuC,SAAYrI,KAAKP,MAAM4I,mBA7BX3H,aCsEb0F,cA9DX,SAAAA,EAAY3G,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAoG,IACftG,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAiK,GAAAjG,KAAAH,KAAMP,KAOVuH,eAAe,WACXlH,EAAKM,MAAMY,eAAe7B,EAAcG,UACpCQ,EAAKuC,SAAS,CAACrB,aAAa7B,EAAcE,WACxCS,EAAKuC,SAAS,CAACrB,aAAa7B,EAAcG,aAXjCQ,EAenB7C,MAAM,WACF6C,EAAKuC,SAAS,CAACrB,aAAa7B,EAAcI,SAhB3BO,EAmBnBmH,OAAO,WACHqB,EAAiBJ,YACbpI,EAAKL,MAAMa,GACXR,EAAKL,MAAMgC,aACX,SAAC8G,GAAD,OAAoBzI,EAAKuC,SAAS,CAACgG,SAASE,OAvBjCzI,EAyBnBoH,OAAO,SAACkB,GACJE,EAAiBH,eACbC,EACAtI,EAAKL,MAAMgC,aACX,SAAC8G,GAAD,OAAoBzI,EAAKuC,SAAS,CAACgG,SAASE,OA3BhDzI,EAAKM,MAAQ,CACTY,aAAa7B,EAAcG,UAC3B+I,cAAUjB,GAJCtH,wEAmCf,GAAGE,KAAKI,MAAMiI,SAAU,CACpB,IAAM3G,EAAoB,IAAIiF,EAC1B,WACA3G,KAAKI,MAAMiI,SAASxH,IACpBb,KAAKP,MAAMgC,aACXzB,KAAKiH,UAET,OACIjH,KAAKI,MAAMY,eAAiB7B,EAAcI,MACtCG,EAAAC,EAAAC,cAAC4I,EAAD,CAAc1K,KAAMkC,KAAKP,MAAM3B,KAAM4H,aAAgB1F,KAAKkH,SAC1DxH,EAAAC,EAAAC,cAAC6I,EAAD,CACI3K,KAAMkC,KAAKI,MAAMiI,SACjBtH,aAAcf,KAAKgH,eACnB/E,WAAYjC,KAAK/C,MACjB+D,aAAchB,KAAKI,MAAMY,aACzBU,kBAAqBA,EACrBD,aAAgBzB,KAAKP,MAAMgC,eAKvC,OADAzB,KAAKiH,SACEvH,EAAAC,EAAAC,cAAC2H,EAAD,aAzDS7G,aC0CbgI,cA5CX,SAAAA,EAAYjJ,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA0I,IACf5I,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAuM,GAAAvI,KAAAH,KAAMP,KACDW,MAAQ,CACTuI,gBAAYvB,EACZwB,aAAc,CACV1K,OAAQ,OAEZC,QAAS,IAAIC,QAAQ,CACjByK,iBAAkB/I,EAAKL,MAAL,gBARXK,wEAcV,IAAA4E,EAAA1E,KACL,OAAKA,KAAKI,MAAMuI,WAaRjJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eAAeC,GAAG,gBAEzBN,KAAKI,MAAMuI,WAAWtM,IAClB,SAAAyM,GACI,OACIpJ,EAAAC,EAAAC,cAACmJ,EAAD,CAAmBzI,GAAMwI,EAAIjI,IAAKY,aAAgBiD,EAAKjF,MAAMgC,mBAjBrFnE,EAAUE,QACN,YACAwC,KAAKP,MAAMgC,aACX,SAAA+D,GACId,EAAKrC,SAAS,CAACsG,WAAWnD,MAI9B9F,EAAAC,EAAAC,cAAC2H,EAAD,cAzBW7G,aCoDZsI,cA1DX,SAAAA,EAAYvJ,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAgJ,IACflJ,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAA6M,GAAA7I,KAAAH,KAAMP,KACDW,MAAQ,CACT6I,SAAU,GACVC,SAAU,IAGdpJ,EAAK8C,aAAe9C,EAAK8C,aAAaC,KAAlB1G,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAA2D,KACpBA,EAAKsJ,aAAetJ,EAAKsJ,aAAavG,KAAlB1G,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAA2D,KARLA,4EAWNsC,GACTpC,KAAKqC,SAALlG,OAAA8L,EAAA,EAAA9L,CAAA,GAAgBiG,EAAME,OAAOpF,KAAOkF,EAAME,OAAOnF,6CAGxCiF,GACTpC,KAAKP,MAAM4J,MAAMrJ,KAAKI,MAAM6I,SAASjJ,KAAKI,MAAM8I,UAChD9G,EAAMc,kDAKN,OACIxD,EAAAC,EAAAC,cAAA,QAAMU,GAAIN,KAAKP,MAAMa,IAArB,mCAEIZ,EAAAC,EAAAC,cAAA,yBAEIF,EAAAC,EAAAC,cAAA,SACI6C,KAAK,OACLvF,KAAK,WACLoD,GAAG,gBACHnD,MAAO6C,KAAKI,MAAM6I,SAClBtG,SAAY3C,KAAK4C,gBAGzBlD,EAAAC,EAAAC,cAAA,yBAEIF,EAAAC,EAAAC,cAAA,SACI6C,KAAK,WACLvF,KAAK,WACLoD,GAAG,gBACHnD,MAAO6C,KAAKI,MAAM8I,SAClBvG,SAAY3C,KAAK4C,gBAGzBlD,EAAAC,EAAAC,cAAA,SACI6C,KAAK,SACLvF,KAAO,SACPoD,GAAG,cACHnD,MAAQ,SACR2D,QAASd,KAAKoJ,uBAnDV1I,aCgET4I,cArDX,SAAAA,EAAY7J,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAsJ,IACdxJ,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAmN,GAAAnJ,KAAAH,KAAMP,KACDW,MAAM,CACP6I,cAAU7B,EACV3F,kBAAc2F,EACdmC,OAAQ,0CACRC,MAAO,yBAEX1J,EAAKuJ,MAAMvJ,EAAKuJ,MAAMxG,KAAX1G,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAA2D,KARGA,kHAgBZmJ,EAAUC,GAAS,IAAAxE,EAAA1E,KACflC,EAAO9B,EAASC,0BAClB,CACIgN,SAASA,EACTC,SAASA,IAGjB5L,EAAUO,SACN,gBACA,KACAC,EACA,SAAA0H,GACId,EAAKrC,SAAS,CAACZ,aAAa+D,EAAa9H,2CAUjD,OAAGsC,KAAKI,MAAMqB,aAER/B,EAAAC,EAAAC,cAAA,OAAKU,GAAG,YACJZ,EAAAC,EAAAC,cAACqG,EAAD,CAAc9I,MAAS6C,KAAKI,MAAMqB,cAChC/B,EAAAC,EAAAC,cAAC6J,EAAD,CAAchI,aAAgBzB,KAAKI,MAAMqB,iBAI1C/B,EAAAC,EAAAC,cAAC8J,EAAD,CAAWL,MAASrJ,KAAKqJ,MAAOE,OAAUvJ,KAAKI,MAAMmJ,gBAlDrD7I,aCMJiJ,mLARX,OACIjK,EAAAC,EAAAC,cAACgK,EAAD,aAHUlJ,aCKEmJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAOzK,EAAAC,EAAAC,cAACwK,EAAD,MAASzE,SAASC,eAAe","file":"static/js/main.de8f04ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    },\n\n    formInputsToJsonObject:(form)=>{\n        const inputs = Array.from(form.querySelectorAll(\"input\"));\n        let newObj = {};\n        inputs.forEach((input)=>{\n            newObj[input.name]=input.value;\n        });\n        return JSON.stringify(newObj);\n    }\n};\n\n\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      //return \"http://localhost:3434\";\n      return \"https://insolent-preclude.herokuapp.com/\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, data, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n        const headers = new Headers(\n            {\n                'Content-Type': 'application/x-www-form-urlencoded'\n\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import React from \"react\";\nimport '../App.css';\n\n\nfunction Event(props) {\n    return (\n        <div>\n\n        </div>\n    );\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport '../App.css';\nimport Event from \"../BranchComponents/Event\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    this.props.data.map(\n                        evt => {\n                            return <Event data={evt}/>\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass NoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return <div></div>\n    }\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport NoteList from \"../ListComponents/NoteList\";\n\nfunction Task(props) {\n\n\n    return <div className='task ' id={props.data._id}>\n        <div className='collapser'>\n            <button onClick={props.buttonAction}>\n                {props.displayState === DisplayStates.EXPANDED ? '-' : '+'}\n            </button>\n        </div>\n\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Description : {props.data.description}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                <div className='property'>\n                    Deadline : {props.data.deadline}\n                </div>\n                <div className='property'>\n                    Start Date : {props.data.startDate}\n                </div>\n                <div className='property'>\n                    External : {props.data.external}\n                </div>\n                <div className='property'>\n                    Estimated Time : {props.data.estTime}\n                </div>\n                {\n                    props.data.subTasks?\n                        <div className='sublist'>\n                            <h5>SubTasks:</h5>\n                            <TaskList\n                                data = {props.data.subTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.events?\n                        <div className='sublist'>\n                            <h5>Events:</h5>\n                            <EventList data = {props.data.events}\n                                       xAccessToken = {props.xAccessToken}\n                                       modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList\n                                data = {props.data.prqTasks}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList\n                                data = {props.data.prqEvents}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList\n                                data = {props.data.notes}\n                                xAccessToken = {props.xAccessToken}\n                                modifyListActions = {props.modifyListActions}\n\n                            />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n        <div className='editButton'>\n            <button onClick={props.editAction}>\n                <img src='../img/edit.svg' />\n            </button>\n        </div>\n    </div>\n}\n\nexport default Task;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TextInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='text'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TextInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass PasswordInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='password'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange = {this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default PasswordInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ResetInput extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='reset'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResetInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass CheckboxInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            checked:this.props.checked?this.state.checked:false\n        }\n    }\n\n    //not tested yet might not work\n    handleCheck(event){\n        this.setState({checked:event.target.checked})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='checkbox'\n                        name={this.props.name.toLowerCase()}\n                        checked = {this.state.checked}\n                        onChange={this.handleCheck.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass SubmitInput extends Component{\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                    <input\n                        type='submit'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n             </React.Fragment>\n        );\n    }\n}\n\nexport default SubmitInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ButtonInput extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='button'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ButtonInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass DateInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value.split('T')[0]\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}::\n                    <input\n                        type='date'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DateInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass EmailInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='email'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EmailInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass NumberInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.props.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NumberInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TimeIntervalInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </fragment>\n        );\n    }\n}\n\nexport default TimeIntervalInput;","import TextInput from '../InputComponents/TextInput';\nimport PasswordInput from '../InputComponents/PasswordInput';\nimport ResetInput from '../InputComponents/ResetInput';\nimport CheckboxInput from '../InputComponents/CheckboxInput';\nimport SubmitInput from '../InputComponents/SubmitInput';\nimport ButtonInput from '../InputComponents/ButtonInput';\nimport DateInput from '../InputComponents/DateInput';\nimport EmailInput from '../InputComponents/EmailInput';\nimport NumberInput from '../InputComponents/NumberInput';\nimport TimeIntervalInput from '../InputComponents/TimeIntervalInput'\n\nconst InputTypes = Object.freeze({\n    TEXT: TextInput,\n    PASSWORD: PasswordInput,\n    SUBMIT: SubmitInput,\n    RESET: ResetInput,\n    CHECKBOX: CheckboxInput,\n    BUTTON: ButtonInput,\n    DATE: DateInput,\n    EMAIL: EmailInput,\n    NUMBER: NumberInput,\n    TIMEINTERVAL: TimeIntervalInput\n});\n//TODO 181110: make a StandardForm object that creates form inputFields for each of these types\n//TODO 181110: put that in the TaskForm section\n\nexport default InputTypes;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass FormBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n\n    }\n\n\n//FIXME 181228: I'm not passing the task as a prop here. so it doesn't know what's the id when it makes the http call.\n    render() {\n         return <form id={this.props.id}>\n            {\n\n                this.props.inputFields.map(input=>{\n                    const propsWithKey = Object.assign({\n                        key:\"\" + this.props.task._id + input.props.name,\n                        value: this.props.task[input.props.name]}\n                        ,input.props);\n                    return input.content?\n                        React.createElement(input.type, propsWithKey,input.content):\n                        React.createElement(input.type, propsWithKey);\n                })\n            }\n        </form>\n    }\n}\n\nexport default FormBuilder;\n","import fetchUtil from '../util/fetchUtil'\n\n//TODO 181209: I have to get the token from somewhere.\n\n/**\n * Create a task\n * @param task: the task to create\n * @param parentType: \"TaskObject\" or \"Category\"\n * @param parentId: the id of the parent\n */\nconst TaskApiCalls = {\n    createTask: (task, parentType, parentId, token, callback)=>{\n        fetchUtil.postData(parentType +\"/\"+parentId,token,task,callback);\n    },\n    modifyTask: (task, token, callback)=> {\n        fetchUtil.putData(task._id.toString(),token,task,callback);\n    },\n    getTask: (taskId,token,callback)=>{\n        const route = 'task/' + taskId;\n        fetchUtil.getData(\n        route,\n        token,\n        responseData => {\n            callback(responseData);\n        }\n\n);\n\n}\n}\n\nexport default TaskApiCalls\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport formUtil from '../util/formUtil'\nimport fetchUtil from '../util/fetchUtil'\n\nclass TaskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'description'}, type: InputTypes.TEXT},\n                {props: {name: 'deadline'}, type: InputTypes.DATE},\n                {props: {name: 'startDate'}, type: InputTypes.DATE},\n                {props: {name: 'external'}, type: InputTypes.CHECKBOX},\n                {props: {name: 'estTime'}, type: InputTypes.NUMBER},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n         };\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const task = formUtil.formInputsToJsonObject(form);\n        this.props.submitAction(task)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                task = {this.props.task}\n            />\n        </div>\n    }\n}\n\nexport default TaskForm;\n","import React from \"react\";\n\nconst UserContext = React.createContext({});\n\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;","import React from \"react\";\n\n\nfunction ComponentName(props) {\n    return (\n        <div>\n            Loading gif...\n        </div>\n    );\n}\n\nexport default ComponentName;","class TaskObject {\n    constructor() {\n        this.name = \"\";\n        this.description = \"\";\n        this.subTasks= [];\n        this.events=[];\n        this.completed=\"\";\n        this.deadline=new Date();\n        this.startDate=new Date();\n        this.notes=[];\n        this.external=false;\n        this.parent=0;\n        this.parentType=\"\";\n        this.prqTask=[];\n        this.prqEvent=[];\n        this.estTime=0;\n        this.accountId=\"\";\n    }\n\n}\n\nexport default TaskObject;","import TaskApiCalls from \"../ApiCallFunctions/TaskApiCalls\";\n\n//TODO 181231: add create & delete operations for all branch types\n\nclass ModifyListActions{\n    constructor(parentType,parentId,token, setStateCallback){\n        this.addTask= (task) => {\n            TaskApiCalls.createTask(\n                task,\n                parentType,\n                parentId,\n                token,\n                (returnedTask) => setStateCallback(returnedTask));\n        }\n\n    }\n    \n}\n\nexport default ModifyListActions;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport {UserConsumer} from \"../UserContext\";\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport TaskObject from '../ObjectClasses/TaskObject'\nimport ModifyListActions from \"../util/ModifyListActions\";\nimport Category from \"../BranchComponents/Category\";\n\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState: DisplayStates.COLLAPSED,\n            task: undefined\n        }\n    }\n\n    expandCollapse = () => {\n        this.state.displayState === DisplayStates.COLLAPSED ?\n            this.setState({displayState: DisplayStates.EXPANDED})\n            : this.setState({displayState: DisplayStates.COLLAPSED});\n    }\n\n\n    input = () => {\n        this.setState({displayState: DisplayStates.INPUT});\n    };\n\n    update = () => {\n        TaskApiCalls.getTask(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedTask) => this.setState({task: returnedTask}))\n    };\n\n    modify =(modifiedTask) =>{\n        TaskApiCalls.modifyTask(modifiedTask,this.props.xAccessToken,(returnedTask) => this.setState({task: returnedTask}));\n    };\n\n\n\n    render() {\n        if (this.state.task) {\n            const modifyListActions = new ModifyListActions(\n                \"TaskObject\",\n                this.state.task._id,\n                this.props.xAccessToken,\n                this.update()\n            )\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <TaskForm data={this.state.task} xAccessToken={this.props.xAccessToken} submitAction = {this.modify}/> :\n                    <Task\n                        data={this.state.task}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        xAccessToken = {this.props.xAccessToken}\n                        modifyListActions = {modifyListActions}\n                    />\n            )\n        } else if(!this.props.id){\n            return <TaskForm data={new TaskObject()} xAccessToken={this.props.xAccessToken}\n                             submitAction = {this.props.modifyListActions.addTask}/>\n        } else {\n            this.update();\n            return (\n                <LoadingGif/>\n            )\n        }\n    }\n}\n\nexport default TaskContainer;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport TaskContainer from '../ContainerComponents/TaskContainer';\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addTask:false\n        };\n    }\n\n    addTask = ()=>this.setState({addTask:true});\n    //null taskId will create a new task\n    addNewTaskTrue=data=>{\n        return [...data, null];\n    }\n\n    render() {\n\n        const taskListData = this.addTask?\n            this.props.data:\n            this.props.data.addNewTaskTrue();\n        return (\n            <div className=\"TaskList\" id={this.props.catId + \"Tasks\"}>\n                {\n                    taskListData.map(\n                        taskId => {\n                            return <TaskContainer\n                                id={taskId}\n                                xAccessToken = {this.props.xAccessToken}\n                                modifyListActions = {this.props.modifyListActions}\n                            />\n                        }\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport '../App.css';\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\n\n\nfunction Category(props){\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <h2 className = \"catName\">\n                {props.data.name}\n            </h2>\n            <h3>Tasks</h3>\n            <TaskList\n                data = {props.data.tasks}\n                catId={props.data._id}\n                modifyListActions = {props.modifyListActions}\n                xAccessToken = {props.xAccessToken}\n            />\n            <h3 >Events</h3>\n            <EventList\n                data={props.data.events} catId={props.data._id}\n                modifyListActions = {props.modifyListActions}\n                catId={props.data._id}\n                xAccessToken = {props.xAccessToken}\n\n            />\n        </div>\n    );\n}\n\nexport default Category;","import fetchUtil from '../util/fetchUtil'\n\n//TODO 181209: I have to get the token from somewhere.\n\n/**\n * Create a task\n * @param task: the task to create\n * @param parentType: \"TaskObject\" or \"Category\"\n * @param parentId: the id of the parent\n */\nconst TaskApiCalls = {\n    getCategory: (id,token, callback)=>{\n        const route = 'category/' + id;\n        fetchUtil.getData(\n            route,\n            token,\n            responseData => {\n                callback(responseData);\n            }\n        );\n\n    },\n    modifyCategory:(modifiedCategory,token,callback)=>{\n        fetchUtil.putData(modifiedCategory._id.toString(),token,modifiedCategory,callback);\n    }\n}\n\nexport default TaskApiCalls","import React, {Component} from 'react';\nimport InputTypes from \"../Enums/InputTypes\";\nimport formUtil from \"../util/formUtil\";\nimport FormBuilder from \"./FormBuilder\";\n\nclass ComponentName extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n            ],\n\n\n        };\n\n\n\n\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const category = formUtil.formInputsToJsonObject(form);\n        this.props.submitAction(category)\n\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                category = {this.props.category}\n            />\n        </div>\n    }\n\n}\n\nexport default ComponentName;\n","import React, {Component} from 'react';\nimport DisplayStates from \"../Enums/DisplayStates\";\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport fetchUtil from \"../util/fetchUtil\";\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport Category from \"../BranchComponents/Category\";\nimport CategoryApiCalls from '../ApiCallFunctions/CategoryApiCalls'\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport CategoryForm from \"../FormComponents/CategoryForm\";\nimport ModifyListActions from \"../util/ModifyListActions\";\n\nclass ComponentName extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED,\n            category: undefined\n        };\n    }\n\n    expandCollapse=()=>{\n        this.state.displayState===DisplayStates.COLLAPSED?\n            this.setState({displayState:DisplayStates.EXPANDED})\n            : this.setState({displayState:DisplayStates.COLLAPSED});\n    }\n\n\n    input=()=>{\n        this.setState({displayState:DisplayStates.INPUT});\n    };\n\n    update=()=>{\n        CategoryApiCalls.getCategory(\n            this.props.id,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n    modify=(modifiedCategory)=> {\n        CategoryApiCalls.modifyCategory(\n            modifiedCategory,\n            this.props.xAccessToken,\n            (returnedCategory)=>this.setState({category:returnedCategory}))\n    };\n\n\n\n    render() {\n        if(this.state.category) {\n            const modifyListActions = new ModifyListActions(\n                \"Category\",\n                this.state.category._id,\n                this.props.xAccessToken,\n                this.update()\n            )\n            return (\n                this.state.displayState === DisplayStates.INPUT ?\n                    <CategoryForm data={this.props.data} submitAction = {this.modify}/> :\n                    <Category\n                        data={this.state.category}\n                        buttonAction={this.expandCollapse}\n                        editAction={this.input}\n                        displayState={this.state.displayState}\n                        modifyListActions = {modifyListActions}\n                        xAccessToken = {this.props.xAccessToken}\n                    />\n            )\n        } else {\n            this.update();\n            return <LoadingGif/>\n        }\n    }\n\n}\n\nexport default ComponentName;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport fetchUtil from '../util/fetchUtil';\nimport Category from '../BranchComponents/Category';\nimport LoadingGif from \"../DisplayComponents/LoadingGif\";\nimport CategoryContainer from \"../ContainerComponents/CategoryContainer\";\n\n//TODO 181231: I want to change this so this component doesn't get the categories, the user component does. But I'll have to change the API to do that.\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: undefined,\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n        };\n    }\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                'category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData})\n                }\n            );\n            return (\n                <LoadingGif/>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <CategoryContainer id = {cat._id} xAccessToken = {this.props.xAccessToken}/>\n                                )\n                            }\n                        )\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './ListComponents/CategoryList';\nimport LoginForm from './FormComponents/LoginForm';\nimport fetchUtil from './util/fetchUtil';\nimport {UserProvider} from './UserContext';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\n//TODO 181028: put username and xAccessToken in context so I can use it from anywhere\nclass User extends Component {\n\n   \n\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        };\n        this.login=this.login.bind(this);\n    }\n\n    componentDidMount(){\n\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            'account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(\n              <div id='userRoot'>\n                  <UserProvider value = {this.state.xAccessToken}>\n                    <CategoryList xAccessToken = {this.state.xAccessToken}/>\n                  </UserProvider>\n              </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n//registerServiceWorker();\n//unregister();\n"],"sourceRoot":""}