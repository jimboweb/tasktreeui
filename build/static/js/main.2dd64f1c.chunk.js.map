{"version":3,"sources":["logo.svg","util/formUtil.js","util/fetchUtil.js","util/DisplayStates.js","Event.js","EventList.js","NoteList.js","Task.js","TaskInput.js","TaskContainer.js","TaskList.js","Category.js","CategoryList.js","LoginForm.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","Event","props","react_default","a","createElement","EventList","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","className","id","catId","evt","src_Event","Component","NoteList","Task","_id","onClick","buttonAction","displayState","name","description","completed","deadline","startDate","external","estTime","subTasks","src_TaskList","events","src_EventList","prqTasks","prqEvents","notes","src_NoteList","TaskInput","TaskContainer","expandCollapse","setState","input","src_Task","src_TaskInput","TaskList","fetchOptions","x-access-token","tsk","src_TaskContainer","Category","children","tasks","CategoryList","components","categories","undefined","_this2","cat","src_Category","xAccessToken","responseData","LoginForm","username","password","handleChange","bind","assertThisInitialized","handleSubmit","event","defineProperty","target","value","login","preventDefault","type","onChange","User","apiUrl","uiUrl","src_CategoryList","src_LoginForm","App","src_User","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2dd64f1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        //FIXME: obj.params is not a thing. what should it be?\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    }\n}\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      //return \"http://localhost:3434\";\n      return \"https://insolent-preclude.herokuapp.com\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, data, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n        const headers = new Headers(\n            {\n                'Content-Type': 'application/x-www-form-urlencoded'\n\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import React from \"react\";\nimport './App.css';\n\n\nfunction Event(props) {\n    return (\n        <div>\n\n        </div>\n    );\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport './App.css';\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    this.props.data.map(\n                        evt => {\n                            return <Event data={evt}/>\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React, {Component} from 'react';\nimport './App.css';\n\nclass NoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return <div></div>\n    }\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport './App.css';\nimport DisplayStates from './util/DisplayStates'\nimport TaskList from \"./TaskList\";\nimport EventList from \"./EventList\";\nimport NoteList from \"./NoteList\";\n\n\nfunction Task(props) {\n    return <div className='task ' id={props.data._id}>\n        <button className='collapser' onClick={props.buttonAction}>\n            {props.displayState === DisplayStates.EXPANDED ? '-' : '+'}\n        </button>\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Description : {props.data.description}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                <div className='property'>\n                    Deadline : {props.data.deadline}\n                </div>\n                <div className='property'>\n                    Start Date : {props.data.startDate}\n                </div>\n                <div className='property'>\n                    External : {props.data.external}\n                </div>\n                <div className='property'>\n                    Estimated Time : {props.data.estTime}\n                </div>\n                {\n                    props.data.subTasks?\n                        <div className='sublist'>\n                            <h5>SubTasks:</h5>\n                            <TaskList data = {props.data.subTasks} />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.events?\n                        <div className='sublist'>\n                            <h5>Events:</h5>\n                            <EventList data = {props.data.events} />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList data = {props.data.prqTasks} />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList data = {props.data.prqEvents} />\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList data = {props.data.notes} />\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default Task;","import React, {Component} from 'react';\nimport './App.css';\n\nclass TaskInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default TaskInput;\n","import React, {Component} from 'react';\nimport './App.css';\nimport DisplayStates from './util/DisplayStates'\nimport Task from \"./Task\";\nimport TaskInput from \"./TaskInput\";\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED\n        };\n    }\n\n    expandCollapse=()=>{\n        this.state.displayState===DisplayStates.COLLAPSED?\n        this.setState({displayState:DisplayStates.EXPANDED})\n        : this.setState({displayState:DisplayStates.COLLAPSED});\n    }\n\n\n    input=()=>{\n        this.setState({displayState:DisplayStates.INPUT});\n    }\n\n\n    render() {\n        return (\n            this.state.displayState!==DisplayStates.INPUT?\n            <Task data={this.props.data} buttonAction = {this.expandCollapse} displayState = {this.state.displayState}/>\n            :<TaskInput data={this.props.data}/>\n        )\n    }\n}\n\nexport default TaskContainer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport TaskContainer from \"./TaskContainer\";\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n        };\n    }\n\n\n    render() {\n        return (\n            <div className=\"TaskList\" id={this.props.catId+\"Tasks\"}>\n                {\n                    this.props.data.map(\n                        tsk=>{\n                            return <TaskContainer data = {tsk}/>\n\n                        }\n                    )\n                }\n            </div>\n        );\n\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport './App.css';\nimport TaskList from \"./TaskList\";\nimport EventList from \"./EventList\";\n\n\nfunction Category(props){\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <h2 className = \"catName\">\n                {props.data.name}\n            </h2>\n            <h3>Tasks</h3>\n            <TaskList data = {props.data.children.tasks} catId={props.data._id}/>\n            <h3 >Events</h3>\n            <EventList data={props.data.children.events} catId={props.data._id}/>\n        </div>\n    );\n}\n\nexport default Category;","import React, { Component } from 'react';\nimport './App.css';\nimport fetchUtil from './util/fetchUtil';\nimport Category from './Category';\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            components: [],\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n            categories: undefined\n        };\n    }\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                '/category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData})\n                }\n            );\n            return (\n                <div>loading gif...</div>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <Category id = {cat._id} data = {cat}/>\n                                )\n                            }\n                        )\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './CategoryList';\nimport LoginForm from './LoginForm';\nimport fetchUtil from './util/fetchUtil';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\n\nclass User extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        }\n        this.login=this.login.bind(this);\n    }\n\n    componentDidMount(){\n        //TODO 180925: login, get x-access-token\n\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            '/account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(  <div id='userRoot'>\n                <CategoryList xAccessToken = {this.state.xAccessToken}/>\n            </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n//unregister();\n"],"sourceRoot":""}