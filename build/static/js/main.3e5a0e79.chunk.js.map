{"version":3,"sources":["Task.java","Event.java","logo.svg","util/formUtil.js","util/fetchUtil.js","util/DisplayStates.js","TaskInput.js","TaskContainer.js","TaskList.js","EventList.js","Category.js","CategoryList.js","LoginForm.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","TaskInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Component","TaskContainer","displayState","setState","displayStates","Task_default","buttonAction","expandCollapse","src_TaskInput","TaskList","fetchOptions","x-access-token","className","id","catId","tsk","src_TaskContainer","EventList","evt","Event_default","Category","_id","name","src_TaskList","tasks","src_EventList","events","CategoryList","components","categories","undefined","_this2","cat","src_Category","xAccessToken","responseData","LoginForm","username","password","handleChange","bind","assertThisInitialized","handleSubmit","event","defineProperty","target","value","login","preventDefault","type","onChange","onClick","User","apiUrl","uiUrl","src_CategoryList","src_LoginForm","App","src_User","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3e5a0e79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Task.f92ab5d7.java\";","module.exports = __webpack_public_path__ + \"static/media/Event.f3fd74fc.java\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        //FIXME: obj.params is not a thing. what should it be?\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    }\n}\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      return \"http://localhost:3434\";\n      //return \"https://insolent-preclude.herokuapp.com\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, data, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n        const headers = new Headers(\n            {\n                'Content-Type': 'application/x-www-form-urlencoded'\n\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import React, {Component} from 'react';\nimport './App.css';\n\nclass TaskInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default TaskInput;\n","import React, {Component} from 'react';\nimport './App.css';\nimport DisplayStates from './util/DisplayStates'\nimport Task from \"./Task.java\";\nimport TaskInput from \"./TaskInput\";\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED\n        };\n    }\n\n    expandCollapse(displayState){\n        displayState===DisplayStates.COLLAPSED?\n        this.setState({displayStates:DisplayStates.EXPANDED})\n        : this.setState({displayStates:DisplayStates.EXPANDED});\n    }\n\n\n    input(){\n        this.setState({displayStates:DisplayStates.INPUT});\n    }\n\n\n    render() {\n        return (\n            this.state.displayState!==DisplayStates.INPUT?\n            <Task data={this.props.data} buttonAction = {this.expandCollapse}/>\n            :<TaskInput data={this.props.data}/>\n        )\n    }\n}\n\nexport default TaskContainer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport TaskContainer from \"./TaskContainer\";\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n        };\n    }\n\n\n    render() {\n        return (\n            <div className=\"TaskList\" id={this.props.catId+\"Tasks\"}>\n                {\n                    this.props.data.map(\n                        tsk=>{\n                            return <TaskContainer data = {tsk}/>\n\n                        }\n                    )\n                }\n            </div>\n        );\n\n    }\n}\n\nexport default TaskList;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Event from \"./Event.java\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    this.props.data.map(\n                        evt => {\n                            return <Event data={evt}/>\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React from \"react\";\nimport './App.css';\nimport TaskList from \"./TaskList\";\nimport EventList from \"./EventList\";\n\n\nfunction Category(props){\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <h2 className = \"catName\">\n                {props.data.name}\n            </h2>\n            <h3>Tasks</h3>\n            <TaskList data = {props.data.tasks} catId={props.data._id}/>\n            <h3 >Events</h3>\n            <EventList data={props.data.events} catId={props.data._id}/>\n        </div>\n    );\n}\n\nexport default Category;","import React, { Component } from 'react';\nimport './App.css';\nimport fetchUtil from './util/fetchUtil';\nimport Category from './Category';\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            components: [],\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n            categories: undefined\n        };\n    }\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                '/category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData})\n                }\n            );\n            return (\n                <div>loading gif...</div>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <Category id = {cat._id} data = {cat}/>\n                                )\n                            }\n                        )\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './CategoryList';\nimport LoginForm from './LoginForm';\nimport fetchUtil from './util/fetchUtil';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\n\nclass User extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        }\n        this.login=this.login.bind(this);\n    }\n\n    componentDidMount(){\n        //TODO 180925: login, get x-access-token\n\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            '/account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(  <div id='userRoot'>\n                <CategoryList xAccessToken = {this.state.xAccessToken}/>\n            </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n//unregister();\n"],"sourceRoot":""}