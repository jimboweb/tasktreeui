{"version":3,"sources":["logo.svg","util/formUtil.js","util/fetchUtil.js","Enums/DisplayStates.js","BranchComponents/Event.js","ListComponents/EventList.js","ListComponents/NoteList.js","BranchComponents/Task.js","InputComponents/TextInput.js","InputComponents/PasswordInput.js","InputComponents/ResetInput.js","InputComponents/CheckboxInput.js","InputComponents/SubmitInput.js","InputComponents/ButtonInput.js","InputComponents/DateInput.js","InputComponents/EmailInput.js","InputComponents/NumberInput.js","InputComponents/TimeIntervalInput.js","Enums/InputTypes.js","FormComponents/FormBuilder.js","ApiCallFunctions/TaskApiCalls.js","FormComponents/TaskForm.js","UserContext.js","ContainerComponents/TaskContainer.js","ListComponents/TaskList.js","BranchComponents/Category.js","ListComponents/CategoryList.js","FormComponents/LoginForm.js","User.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formUtil","composeXWwwFormUrlEncoded","obj","Object","keys","map","key","encodeURIComponent","join","formInputsToJsonObject","form","inputs","Array","from","querySelectorAll","newObj","forEach","input","name","value","JSON","stringify","fetchUtil","getApiUrl","getData","route","token","callback","fetchData","postData","data","putData","deleteData","patchData","method","headers","Headers","Content-Type","set","requestProps","mode","redirect","body","request","Request","fetch","then","resp","json","err","respData","DisplayStates","freeze","EXPANDED","COLLAPSED","INPUT","Event","props","react_default","a","createElement","EventList","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","className","id","catId","evt","BranchComponents_Event","Component","NoteList","Task","_id","onClick","buttonAction","displayState","description","completed","deadline","startDate","external","estTime","subTasks","ListComponents_TaskList","modify","events","ListComponents_EventList","prqTasks","prqEvents","notes","ListComponents_NoteList","editAction","src","TextInput","event","setState","target","Fragment","assign","type","toLowerCase","onChange","handleChange","bind","attributes","PasswordInput","ResetInput","action","preventDefault","handleClick","CheckboxInput","checked","handleCheck","SubmitInput","ButtonInput","DateInput","split","EmailInput","NumberInput","TimeIntervalInput","InputTypes","TEXT","PASSWORD","SUBMIT","RESET","CHECKBOX","BUTTON","DATE","EMAIL","NUMBER","TIMEINTERVAL","FormBuilder","_this2","inputFields","propsWithKey","task","content","React","TaskApiCalls","createTask","parentType","parentId","modifyTask","toString","TaskForm","submitAction","document","getElementById","xAccessToken","console","log","parent","FormComponents_FormBuilder","handlers","UserContext","createContext","UserProvider","Provider","UserConsumer","Consumer","TaskContainer","expandCollapse","update","BranchComponents_Task","context","FormComponents_TaskForm","TaskList","fetchOptions","x-access-token","tsk","ContainerComponents_TaskContainer","Category","children","tasks","CategoryList","components","categories","undefined","cat","BranchComponents_Category","responseData","LoginForm","username","password","assertThisInitialized","handleSubmit","defineProperty","login","User","apiUrl","uiUrl","ListComponents_CategoryList","FormComponents_LoginForm","App","src_User","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4KCoBzBC,EAnBE,CACbC,0BAA2B,SAASC,GAChC,OAAOC,OAAOC,KAAKF,GAAKG,IAAI,SAACC,GACzB,OAAOC,mBAAmBD,GAAO,IAAMC,mBAAmBL,EAAII,MAC/DE,KAAK,MAGZC,uBAAuB,SAACC,GACpB,IAAMC,EAASC,MAAMC,KAAKH,EAAKI,iBAAiB,UAC5CC,EAAS,GAIb,OAHAJ,EAAOK,QAAQ,SAACC,GACZF,EAAOE,EAAMC,MAAMD,EAAME,QAEtBC,KAAKC,UAAUN,KCRxBO,EAAY,CAEdC,UAAU,WAER,MAAO,4CAITC,QAAQ,SAACC,EAAOC,EAAOC,GACnBL,EAAUM,UAAUH,EAAO,MAAOC,EAAO,KAAMC,IAGnDE,SAAU,SAACJ,EAAOC,EAAOI,EAAMH,GAC3BL,EAAUM,UAAUH,EAAO,OAAQC,EAAOI,EAAMH,IAGpDI,QAAS,SAACN,EAAOC,EAAOI,EAAMH,GAC1BL,EAAUM,UAAUH,EAAO,MAAOC,EAAOI,EAAMH,IAGnDK,WAAY,SAACP,EAAOC,EAAOI,EAAMH,GAC7BL,EAAUM,UAAUH,EAAO,SAAUC,EAAOI,EAAMH,IAGtDM,UAAW,SAACR,EAAOC,EAAOI,EAAMH,GAC5BL,EAAUM,UAAUH,EAAO,QAASC,EAAOI,EAAMH,IAGrDC,UAAY,SAACH,EAAOS,EAAQR,EAAOI,EAAMH,GACrC,IAAMQ,EAAU,IAAIC,QAChB,CACIC,eAAgB,sCAKrBX,GACCS,EAAQG,IAAI,iBAAiBZ,GAGjC,IAAIa,EAAe,CACfL,OAAQA,EACRM,KAAM,OACNC,SAAU,SACVN,QAASA,GAGD,QAATD,GAAkBJ,IACjBS,EAAaG,KAAKZ,GAGtB,IAAMa,EAAU,IAAIC,QAChBtB,EAAUC,YAAcE,EACxBc,GAGJM,MAAMF,GACDG,KACG,SAAAC,GACI,OAAOA,EAAKC,QAEhB,SAAAC,GACI,KAAM,UAAYA,IAEzBH,KACG,SAAAI,GAAWvB,EAASuB,OAKrB5B,ICpEA6B,EAROhD,OAAOiD,OACzB,CACIC,SAAS,WACTC,UAAW,YACXC,MAAO,UCQAC,MARf,SAAeC,GACX,OACIC,EAAAC,EAAAC,cAAA,aCoBOC,cArBX,SAAAA,EAAYJ,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAH,IACfC,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAA0D,GAAAM,KAAAH,KAAMP,KACDW,MAAQ,GAFEN,wEAOf,OACIJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAYC,GAAIN,KAAKP,MAAMc,MAAQ,aAE1CP,KAAKP,MAAM3B,KAAKzB,IACZ,SAAAmE,GACI,OAAOd,EAAAC,EAAAC,cAACa,EAAD,CAAO3C,KAAM0C,cAbxBE,aCWTC,cAXX,SAAAA,EAAYlB,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAW,IACfb,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAwE,GAAAR,KAAAH,KAAMP,KACDW,MAAQ,GAFEN,wEAOf,OAAOJ,EAAAC,EAAAC,cAAA,mBARQc,aCsFRE,MAlFf,SAAcnB,GAGV,OAAOC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,QAAQC,GAAIb,EAAM3B,KAAK+C,KACzCnB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACXX,EAAAC,EAAAC,cAAA,UAAQkB,QAASrB,EAAMsB,cAClBtB,EAAMuB,eAAiB7B,EAAcE,SAAW,IAAM,MAI/DK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACXX,EAAAC,EAAAC,cAAA,UAAKH,EAAM3B,KAAKZ,MAChBwC,EAAAC,EAAAC,cAAA,OAAKS,UAAWZ,EAAMuB,eAAiB7B,EAAcE,SAAW,WAAa,aACzEK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,iBACmBZ,EAAM3B,KAAKmD,aAE9BvB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,eACiBZ,EAAM3B,KAAKoD,WAE5BxB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,cACgBZ,EAAM3B,KAAKqD,UAE3BzB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,gBACkBZ,EAAM3B,KAAKsD,WAE7B1B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,cACgBZ,EAAM3B,KAAKuD,UAE3B3B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAf,oBACsBZ,EAAM3B,KAAKwD,SAI7B7B,EAAM3B,KAAKyD,SACP7B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAC4B,EAAD,CAAU1D,KAAQ2B,EAAM3B,KAAKyD,SAAUE,QAAU,KAEpD,GAGLhC,EAAM3B,KAAK4D,OACPhC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC+B,EAAD,CAAW7D,KAAQ2B,EAAM3B,KAAK4D,OAAQD,QAAU,KAEnD,GAGLhC,EAAM3B,KAAK8D,SACPlC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAC4B,EAAD,CAAU1D,KAAQ2B,EAAM3B,KAAK8D,SAAUH,QAAU,KAEpD,GAGLhC,EAAM3B,KAAK+D,UACPnC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAC+B,EAAD,CAAW7D,KAAQ2B,EAAM3B,KAAK+D,UAAYJ,QAAU,KAEvD,GAGLhC,EAAM3B,KAAKgE,MACPpC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACmC,EAAD,CAAUjE,KAAQ2B,EAAM3B,KAAKgE,MAAQL,QAAU,KAElD,KAIjB/B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACXX,EAAAC,EAAAC,cAAA,UAAQkB,QAASrB,EAAMuC,YACnBtC,EAAAC,EAAAC,cAAA,OAAKqC,IAAI,wBC/CVC,cA9BX,SAAAA,EAAYzC,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAkC,IACdpC,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAA+F,GAAA/B,KAAAH,KAAMP,KACDW,MAAM,CACPjD,MAAO2C,EAAKL,MAAMtC,MAAM2C,EAAKL,MAAMtC,MAAM,IAH/B2C,4EAOLqC,GACTnC,KAAKoC,SAAS,CAACjF,MAAOgF,EAAME,OAAOlF,yCAKnC,OACIuC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,KACI5C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAoG,OAAA,CACIC,KAAK,OACLtF,KAAM8C,KAAKP,MAAMvC,KAAKuF,cACtBtF,MAAO6C,KAAKI,MAAMjD,MAClBuF,SAAU1C,KAAK2C,aAAaC,KAAK5C,OAC7BA,KAAKP,MAAMoD,sBAxBfnC,aCgCToC,cA9BX,SAAAA,EAAYrD,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA8C,IACdhD,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAA2G,GAAA3C,KAAAH,KAAMP,KACDW,MAAM,CACPjD,MAAM2C,EAAKL,MAAMtC,MAAM2C,EAAKL,MAAMtC,MAAM,IAH9B2C,4EAOLqC,GACTnC,KAAKoC,SAAS,CAACjF,MAAOgF,EAAME,OAAOlF,yCAInC,OACIuC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,KACI5C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAoG,OAAA,CACIC,KAAK,WACLtF,KAAM8C,KAAKP,MAAMvC,KAAKuF,cACtBtF,MAAO6C,KAAKI,MAAMjD,MAClBuF,SAAY1C,KAAK2C,aAAaC,KAAK5C,OAC/BA,KAAKP,MAAMoD,sBAvBXnC,aC2BbqC,cAzBX,SAAAA,EAAYtD,GAAO,OAAAtD,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA+C,GAAA5G,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAA4G,GAAA5C,KAAAH,KACTP,6EAIE0C,GACRnC,KAAKP,MAAMuD,SACXb,EAAMc,kDAKN,OACIvD,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,KACS5C,EAAAC,EAAAC,cAAA,QAAAzD,OAAAoG,OAAA,CACGC,KAAK,QACLtF,KAAM8C,KAAKP,MAAMvC,KAAKuF,cACtB3B,QAASd,KAAKkD,YAAYN,KAAK5C,OAC3BA,KAAKP,MAAMoD,qBApBdnC,aCgCVyC,cA9BX,SAAAA,EAAY1D,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAmD,IACdrD,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAgH,GAAAhD,KAAAH,KAAMP,KACDW,MAAQ,CACTgD,UAAQtD,EAAKL,MAAM2D,SAAQtD,EAAKM,MAAMgD,SAH5BtD,2EAQNqC,GACRnC,KAAKoC,SAAS,CAACgB,QAAQjB,EAAME,OAAOe,2CAIpC,OACI1D,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,KACI5C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAoG,OAAA,CACIC,KAAK,WACLtF,KAAM8C,KAAKP,MAAMvC,KAAKuF,cACtBW,QAAWpD,KAAKI,MAAMgD,QACtBV,SAAU1C,KAAKqD,YAAYT,KAAK5C,OAC5BA,KAAKP,MAAMoD,sBAxBXnC,aC4Bb4C,cA1BX,SAAAA,EAAY7D,GAAO,OAAAtD,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAsD,GAAAnH,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAmH,GAAAnD,KAAAH,KACTP,6EAIE0C,GACRnC,KAAKP,MAAMuD,SACXb,EAAMc,kDAMN,OACIvD,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,KACQ5C,EAAAC,EAAAC,cAAA,QAAAzD,OAAAoG,OAAA,CACIC,KAAK,SACLtF,KAAM8C,KAAKP,MAAMvC,KAAKuF,cACtB3B,QAASd,KAAKkD,YAAYN,KAAK5C,OAC3BA,KAAKP,MAAMoD,qBArBbnC,aCyBX6C,cAvBX,SAAAA,EAAY9D,GAAO,OAAAtD,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAuD,GAAApH,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAoH,GAAApD,KAAAH,KACTP,6EAGE0C,GACRnC,KAAKP,MAAMuD,SACXb,EAAMc,kDAIN,OACIvD,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,KACS5C,EAAAC,EAAAC,cAAA,QAAAzD,OAAAoG,OAAA,CACGC,KAAK,SACLtF,KAAM8C,KAAKP,MAAMvC,KAAKuF,cACtB3B,QAASd,KAAKkD,YAAYN,KAAK5C,OAC3BA,KAAKP,MAAMoD,qBAlBbnC,aC+BX8C,cA7BX,SAAAA,EAAY/D,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAwD,IACd1D,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAqH,GAAArD,KAAAH,KAAMP,KACDW,MAAM,CACPjD,MAAM2C,EAAKL,MAAMtC,MAAMsG,MAAM,KAAK,IAHxB3D,4EAOLqC,GACTnC,KAAKoC,SAAS,CAACjF,MAAOgF,EAAME,OAAOlF,yCAInC,OACIuC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,KACI5C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,KAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAoG,OAAA,CACIC,KAAK,OACLtF,KAAM8C,KAAKP,MAAMvC,KAAKuF,cACtBtF,MAAO6C,KAAKI,MAAMjD,MAClBuF,SAAU1C,KAAK2C,aAAaC,KAAK5C,OAC7BA,KAAKP,MAAMoD,sBAvBfnC,aC+BTgD,cA7BX,SAAAA,EAAYjE,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA0D,IACd5D,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAuH,GAAAvD,KAAAH,KAAMP,KACDW,MAAQ,CACTjD,MAAM2C,EAAKL,MAAMtC,MAAM2C,EAAKL,MAAMtC,MAAM,IAH9B2C,4EAOLqC,GACTnC,KAAKoC,SAAS,CAACjF,MAAOgF,EAAME,OAAOlF,yCAInC,OACIuC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,KACI5C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAoG,OAAA,CACIC,KAAK,QACLtF,KAAM8C,KAAKP,MAAMvC,KAAKuF,cACtBtF,MAAO6C,KAAKI,MAAMjD,MAClBuF,SAAU1C,KAAK2C,aAAaC,KAAK5C,OAC7BA,KAAKP,MAAMoD,sBAvBdnC,aC+BViD,cA7BX,SAAAA,EAAYlE,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA2D,IACd7D,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAwH,GAAAxD,KAAAH,KAAMP,KACDW,MAAQ,CACTjD,MAAM2C,EAAKL,MAAMtC,MAAM2C,EAAKL,MAAMtC,MAAM,IAH9B2C,4EAOLqC,GACTnC,KAAKoC,SAAS,CAACjF,MAAOgF,EAAME,OAAOlF,yCAInC,OACIuC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,KACI5C,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAoG,OAAA,CACIC,KAAK,SACLtF,KAAM8C,KAAKP,MAAMvC,KAAKuF,cACtBtF,MAAO6C,KAAKP,MAAMtC,MAClBuF,SAAU1C,KAAK2C,aAAaC,KAAK5C,OAC7BA,KAAKP,MAAMoD,sBAvBbnC,aC+BXkD,cA7BX,SAAAA,EAAYnE,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA4D,IACd9D,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAyH,GAAAzD,KAAAH,KAAMP,KACDW,MAAM,CACPjD,MAAO2C,EAAKL,MAAMtC,MAAM2C,EAAKL,MAAMtC,MAAM,IAH/B2C,4EAOLqC,GACTnC,KAAKoC,SAAS,CAACjF,MAAOgF,EAAME,OAAOlF,yCAInC,OACIuC,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,aACKI,KAAKP,MAAMvC,KADhB,IAEIwC,EAAAC,EAAAC,cAAA,QAAAzD,OAAAoG,OAAA,CACIC,KAAK,SACLtF,KAAM8C,KAAKP,MAAMvC,KAAKuF,cACtBtF,MAAO6C,KAAKI,MAAMjD,MAClBuF,SAAU1C,KAAK2C,aAAaC,KAAK5C,OAC7BA,KAAKP,MAAMoD,sBAvBPnC,aCsBjBmD,EAfI1H,OAAOiD,OAAO,CAC7B0E,KAAM5B,EACN6B,SAAUjB,EACVkB,OAAQV,EACRW,MAAOlB,EACPmB,SAAUf,EACVgB,OAAQZ,EACRa,KAAMZ,EACNa,MAAOX,EACPY,OAAQX,EACRY,aAAcX,ICUHY,cA3BX,SAAAA,EAAY/E,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAwE,IACf1E,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAqI,GAAArE,KAAAH,KAAMP,KACDW,MAAQ,GAFEN,wEASV,IAAA2E,EAAAzE,KACJ,OAAON,EAAAC,EAAAC,cAAA,QAAMU,GAAIN,KAAKP,MAAMa,IAGrBN,KAAKP,MAAMiF,YAAYrI,IAAI,SAAAY,GACvB,IAAM0H,EAAexI,OAAOoG,OAAO,CAC/BjG,IAAI,GAAKmI,EAAKhF,MAAMmF,KAAK/D,IAAM5D,EAAMwC,MAAMvC,KAC3CC,MAAOsH,EAAKhF,MAAMmF,KAAK3H,EAAMwC,MAAMvC,OAClCD,EAAMwC,OACX,OAAOxC,EAAM4H,QACTC,IAAMlF,cAAc3C,EAAMuF,KAAMmC,EAAa1H,EAAM4H,SACnDC,IAAMlF,cAAc3C,EAAMuF,KAAMmC,aArB9BjE,aCgBXqE,EATM,CACjBC,WAAY,SAACJ,EAAMK,EAAYC,EAAUxH,EAAOC,GAC5CL,EAAUO,SAASoH,EAAY,IAAIC,EAASxH,EAAMkH,EAAKjH,IAE3DwH,WAAY,SAACP,EAAMlH,EAAOC,GACtBL,EAAUS,QAAQ6G,EAAK/D,IAAIuE,WAAW1H,EAAMkH,EAAKjH,KCuC1C0H,cA7CX,SAAAA,EAAY5F,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAqF,IACfvF,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAkJ,GAAAlF,KAAAH,KAAMP,KAoBV6F,aAAa,WACT,IAAM5I,EAAO6I,SAASC,eAAe,OAAO1F,EAAKL,MAAMa,IACjDsE,EAAO5I,EAASS,uBAAuBC,GAC7C,GAAGoD,EAAKL,MAAMgC,OACVsD,EAAaI,WAAWP,EAAK9E,EAAKL,MAAMgG,aAAc,SAAA1G,GAAI,OAAE2G,QAAQC,IAAI5G,SACrE,CACH,IAAMkG,EAAanF,EAAKL,MAAMmF,KAAKK,WAC7BC,EAAWpF,EAAKL,MAAMmF,KAAKgB,OACjCb,EAAaC,WAAWJ,EAAKK,EAAWC,EAASpF,EAAKL,MAAMgG,aAAc,SAAA1G,GAAI,OAAE2G,QAAQC,IAAI5G,OA3BhGe,EAAKM,MAAQ,CACTsE,YAAa,CACT,CAACjF,MAAO,CAACvC,KAAM,QAAUsF,KAAMqB,EAAWC,MAC1C,CAACrE,MAAO,CAACvC,KAAM,eAAgBsF,KAAMqB,EAAWC,MAChD,CAACrE,MAAO,CAACvC,KAAM,YAAasF,KAAMqB,EAAWO,MAC7C,CAAC3E,MAAO,CAACvC,KAAM,aAAcsF,KAAMqB,EAAWO,MAC9C,CAAC3E,MAAO,CAACvC,KAAM,YAAasF,KAAMqB,EAAWK,UAC7C,CAACzE,MAAO,CAACvC,KAAM,WAAYsF,KAAMqB,EAAWS,QAC5C,CAAC7E,MAAO,CAACvC,KAAM,OAAQ8F,OAAQlD,EAAKwF,cAAe9C,KAAMqB,EAAWG,UAV7DlE,wEAmCf,OAAOJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAYC,GAAI,OAAON,KAAKP,MAAMa,IACpDZ,EAAAC,EAAAC,cAACiG,EAAD,CACInB,YAAa1E,KAAKI,MAAMsE,YACxBoB,SAAY9F,KAAKI,MAAM0F,SACvBlB,KAAQ5E,KAAKP,MAAMmF,eAxCZlE,aCNjBqF,EAAcjB,IAAMkB,cAAc,IAE3BC,EAAeF,EAAYG,SAC3BC,EAAeJ,EAAYK,SCoCzBC,cAjCX,SAAAA,EAAY5G,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAqG,IACfvG,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAkK,GAAAlG,KAAAH,KAAMP,KAMV6G,eAAe,WACXxG,EAAKM,MAAMY,eAAe7B,EAAcG,UACxCQ,EAAKsC,SAAS,CAACpB,aAAa7B,EAAcE,WACxCS,EAAKsC,SAAS,CAACpB,aAAa7B,EAAcG,aAV7BQ,EAcnB7C,MAAM,WACF6C,EAAKsC,SAAS,CAACpB,aAAa7B,EAAcI,SAf3BO,EAkBnByG,OAAO,SAACzI,KAhBJgC,EAAKM,MAAQ,CACTY,aAAa7B,EAAcG,WAHhBQ,wEAwBV,IAAA2E,EAAAzE,KACL,OACIA,KAAKI,MAAMY,eAAe7B,EAAcI,MACxCG,EAAAC,EAAAC,cAAC4G,EAAD,CAAM1I,KAAMkC,KAAKP,MAAM3B,KAAMiD,aAAgBf,KAAKsG,eAAgBtE,WAAchC,KAAK/C,MAAO+D,aAAgBhB,KAAKI,MAAMY,eACtHtB,EAAAC,EAAAC,cAACuG,EAAD,KAAe,SAAAM,GAAO,OAAE/G,EAAAC,EAAAC,cAAC8G,EAAD,CAAU9B,KAAMH,EAAKhF,MAAM3B,KAAM2H,aAAgBgB,EAAShF,OAAUgD,EAAKhF,MAAMgC,kBA7BxFf,aC4BbiG,cA9BX,SAAAA,EAAYlH,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA2G,IACf7G,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAwK,GAAAxG,KAAAH,KAAMP,KACDW,MAAQ,CACTwG,aAAc,CACV1I,OAAQ,OAEZC,QAAS,IAAIC,QAAQ,CACjByI,iBAAkB/G,EAAKL,MAAL,gBAPXK,wEAcf,OACIJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WAAWC,GAAIN,KAAKP,MAAMc,MAAM,SAEvCP,KAAKP,MAAM3B,KAAKzB,IACZ,SAAAyK,GACI,OAAOpH,EAAAC,EAAAC,cAACmH,EAAD,CAAejJ,KAAQgJ,EAAKrF,QAAU,cApBlDf,aCgBRsG,MAdf,SAAkBvH,GACd,OACIC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WAAWC,GAAIb,EAAM3B,KAAK+C,KACrCnB,EAAAC,EAAAC,cAAA,MAAIS,UAAY,WACXZ,EAAM3B,KAAKZ,MAEhBwC,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC4B,EAAD,CAAU1D,KAAQ2B,EAAM3B,KAAKmJ,SAASC,MAAO3G,MAAOd,EAAM3B,KAAK+C,MAC/DnB,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAC+B,EAAD,CAAW7D,KAAM2B,EAAM3B,KAAKmJ,SAASvF,OAAQnB,MAAOd,EAAM3B,KAAK+C,QCoC5DsG,cA7CX,SAAAA,EAAY1H,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAmH,IACfrH,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAgL,GAAAhH,KAAAH,KAAMP,KACDW,MAAQ,CACTgH,WAAY,GACZR,aAAc,CACV1I,OAAQ,OAEZC,QAAS,IAAIC,QAAQ,CACjByI,iBAAkB/G,EAAKL,MAAL,eAEtB4H,gBAAYC,GAVDxH,wEAeV,IAAA2E,EAAAzE,KACL,OAAKA,KAAKI,MAAMiH,WAaR3H,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eAAeC,GAAG,gBAEzBN,KAAKI,MAAMiH,WAAWhL,IAClB,SAAAkL,GACI,OACI7H,EAAAC,EAAAC,cAAC4H,EAAD,CAAUlH,GAAMiH,EAAI1G,IAAK/C,KAAQyJ,QAjBzDjK,EAAUE,QACN,YACAwC,KAAKP,MAAMgG,aACX,SAAAgC,GACIhD,EAAKrC,SAAS,CAACiF,WAAWI,MAI9B/H,EAAAC,EAAAC,cAAA,qCA1BWc,qBCwDZgH,cA1DX,SAAAA,EAAYjI,GAAO,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAA0H,IACf5H,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAAuL,GAAAvH,KAAAH,KAAMP,KACDW,MAAQ,CACTuH,SAAU,GACVC,SAAU,IAGd9H,EAAK6C,aAAe7C,EAAK6C,aAAaC,KAAlBzG,OAAA0L,EAAA,EAAA1L,QAAA0L,EAAA,EAAA1L,CAAA2D,KACpBA,EAAKgI,aAAehI,EAAKgI,aAAalF,KAAlBzG,OAAA0L,EAAA,EAAA1L,QAAA0L,EAAA,EAAA1L,CAAA2D,KARLA,4EAWNqC,GACTnC,KAAKoC,SAALjG,OAAA4L,EAAA,EAAA5L,CAAA,GAAgBgG,EAAME,OAAOnF,KAAOiF,EAAME,OAAOlF,6CAGxCgF,GACTnC,KAAKP,MAAMuI,MAAMhI,KAAKI,MAAMuH,SAAS3H,KAAKI,MAAMwH,UAChDzF,EAAMc,kDAKN,OACIvD,EAAAC,EAAAC,cAAA,QAAMU,GAAIN,KAAKP,MAAMa,IAArB,mCAEIZ,EAAAC,EAAAC,cAAA,yBAEIF,EAAAC,EAAAC,cAAA,SACI4C,KAAK,OACLtF,KAAK,WACLoD,GAAG,gBACHnD,MAAO6C,KAAKI,MAAMuH,SAClBjF,SAAY1C,KAAK2C,gBAGzBjD,EAAAC,EAAAC,cAAA,yBAEIF,EAAAC,EAAAC,cAAA,SACI4C,KAAK,WACLtF,KAAK,WACLoD,GAAG,gBACHnD,MAAO6C,KAAKI,MAAMwH,SAClBlF,SAAY1C,KAAK2C,gBAGzBjD,EAAAC,EAAAC,cAAA,SACI4C,KAAK,SACLtF,KAAO,SACPoD,GAAG,cACHnD,MAAQ,SACR2D,QAASd,KAAK8H,uBAnDVpH,aCgETuH,cArDX,SAAAA,EAAYxI,GAAM,IAAAK,EAAA,OAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAiI,IACdnI,EAAA3D,OAAA8D,EAAA,EAAA9D,CAAA6D,KAAA7D,OAAA+D,EAAA,EAAA/D,CAAA8L,GAAA9H,KAAAH,KAAMP,KACDW,MAAM,CACPuH,cAAUL,EACV7B,kBAAc6B,EACdY,OAAQ,0CACRC,MAAO,yBAEXrI,EAAKkI,MAAMlI,EAAKkI,MAAMpF,KAAXzG,OAAA0L,EAAA,EAAA1L,QAAA0L,EAAA,EAAA1L,CAAA2D,KARGA,kHAgBZ6H,EAAUC,GAAS,IAAAnD,EAAAzE,KACflC,EAAO9B,EAASC,0BAClB,CACI0L,SAASA,EACTC,SAASA,IAGjBtK,EAAUO,SACN,gBACA,KACAC,EACA,SAAA2J,GACIhD,EAAKrC,SAAS,CAACqD,aAAagC,EAAa/J,2CAUjD,OAAGsC,KAAKI,MAAMqF,aAER/F,EAAAC,EAAAC,cAAA,OAAKU,GAAG,YACJZ,EAAAC,EAAAC,cAACqG,EAAD,CAAc9I,MAAS6C,KAAKI,MAAMqF,cAChC/F,EAAAC,EAAAC,cAACwI,EAAD,CAAc3C,aAAgBzF,KAAKI,MAAMqF,iBAI1C/F,EAAAC,EAAAC,cAACyI,EAAD,CAAWL,MAAShI,KAAKgI,MAAOE,OAAUlI,KAAKI,MAAM8H,gBAlDrDxH,aCMJ4H,mLARX,OACI5I,EAAAC,EAAAC,cAAC2I,EAAD,aAHU7H,aCKE8H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAOpJ,EAAAC,EAAAC,cAACmJ,EAAD,MAASxD,SAASC,eAAe","file":"static/js/main.16373868.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst formUtil = {\n    composeXWwwFormUrlEncoded: function(obj){\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    },\n\n    formInputsToJsonObject:(form)=>{\n        const inputs = Array.from(form.querySelectorAll(\"input\"));\n        let newObj = {};\n        inputs.forEach((input)=>{\n            newObj[input.name]=input.value;\n        });\n        return JSON.stringify(newObj);\n    }\n};\n\n\n\nexport default formUtil;","import formUtil from './formUtil'\n\n\n\n\n\nconst fetchUtil = {\n\n    getApiUrl:()=>{\n      //return \"http://localhost:3434\";\n      return \"https://insolent-preclude.herokuapp.com/\";\n    },\n    //apiUrl = \"https://insolent-preclude.herokuapp.com\";\n\n    getData:(route, token, callback) => {\n        fetchUtil.fetchData(route, 'get', token, null, callback);\n    },\n\n    postData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'post', token, data, callback);\n    },\n\n    putData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'put', token, data, callback);\n    },\n\n    deleteData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'delete', token, data, callback);\n    },\n\n    patchData: (route, token, data, callback) => {\n        fetchUtil.fetchData(route, 'patch', token, data, callback);\n    },\n\n    fetchData : (route, method, token, data, callback) => {\n        const headers = new Headers(\n            {\n                'Content-Type': 'application/x-www-form-urlencoded'\n\n            }\n        );\n\n        if(token){\n            headers.set('x-access-token',token);\n        }\n\n        let requestProps = {\n            method: method,\n            mode: 'cors',\n            redirect: \"follow\",\n            headers: headers\n        };\n\n        if(method!=='get' && data){\n            requestProps.body=data;\n        }\n\n        const request = new Request(\n            fetchUtil.getApiUrl() + route,\n            requestProps\n        );\n\n        fetch(request)\n            .then(\n                resp => {\n                    return resp.json();\n                },\n                err=> {\n                    throw \"error: \" + err;\n                })\n            .then(\n                respData=>{callback(respData)}\n            );\n    }\n\n};\nexport default fetchUtil;","const DisplayStates = Object.freeze(\n    {\n        EXPANDED:'expanded',\n        COLLAPSED: 'collapsed',\n        INPUT: 'input'\n    }\n)\n\nexport default DisplayStates;","import React from \"react\";\nimport '../App.css';\n\n\nfunction Event(props) {\n    return (\n        <div>\n\n        </div>\n    );\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport '../App.css';\nimport Event from \"../BranchComponents/Event\";\n\nclass EventList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return (\n            <div className='eventList' id={this.props.catId + 'EventList'}>\n                {\n                    this.props.data.map(\n                        evt => {\n                            return <Event data={evt}/>\n                        }\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default EventList;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass NoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return <div></div>\n    }\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\nimport NoteList from \"../ListComponents/NoteList\";\n\nfunction Task(props) {\n\n\n    return <div className='task ' id={props.data._id}>\n        <div className='collapser'>\n            <button onClick={props.buttonAction}>\n                {props.displayState === DisplayStates.EXPANDED ? '-' : '+'}\n            </button>\n        </div>\n\n        <div className='dataWrapper'>\n            <h4>{props.data.name}</h4>\n            <div className={props.displayState === DisplayStates.EXPANDED ? 'expanded' : 'collapsed'}>\n                <div className='property'>\n                    Description : {props.data.description}\n                </div>\n                <div className='property'>\n                    Completed : {props.data.completed}\n                </div>\n                <div className='property'>\n                    Deadline : {props.data.deadline}\n                </div>\n                <div className='property'>\n                    Start Date : {props.data.startDate}\n                </div>\n                <div className='property'>\n                    External : {props.data.external}\n                </div>\n                <div className='property'>\n                    Estimated Time : {props.data.estTime}\n                </div>\n                {\n                    //TODO 181223: need to pass parent: task, action: modify\n                    props.data.subTasks?\n                        <div className='sublist'>\n                            <h5>SubTasks:</h5>\n                            <TaskList data = {props.data.subTasks} modify = {true}/>\n                        </div>\n                        :''\n                }\n                {\n                    props.data.events?\n                        <div className='sublist'>\n                            <h5>Events:</h5>\n                            <EventList data = {props.data.events} modify = {true}/>\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqTasks?\n                        <div className='sublist'>\n                            <h5>Prerequisite Tasks:</h5>\n                            <TaskList data = {props.data.prqTasks} modify = {true}/>\n                        </div>\n                        :''\n                }\n                {\n                    props.data.prqEvents?\n                        <div className='sublist'>\n                            <h5>Prerequisite Events:</h5>\n                            <EventList data = {props.data.prqEvents}  modify = {true}/>\n                        </div>\n                        :''\n                }\n                {\n                    props.data.notes?\n                        <div className='sublist'>\n                            <h5>Notes:</h5>\n                            <NoteList data = {props.data.notes}  modify = {true}/>\n                        </div>\n                        :''\n                }\n            </div>\n        </div>\n        <div className='editButton'>\n            <button onClick={props.editAction}>\n                <img src='../img/edit.svg' />\n            </button>\n        </div>\n    </div>\n}\n\nexport default Task;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TextInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='text'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TextInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass PasswordInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='password'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange = {this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default PasswordInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ResetInput extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='reset'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResetInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass CheckboxInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            checked:this.props.checked?this.state.checked:false\n        }\n    }\n\n    //not tested yet might not work\n    handleCheck(event){\n        this.setState({checked:event.target.checked})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='checkbox'\n                        name={this.props.name.toLowerCase()}\n                        checked = {this.state.checked}\n                        onChange={this.handleCheck.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass SubmitInput extends Component{\n\n    constructor(props){\n        super(props);\n\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                    <input\n                        type='submit'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n             </React.Fragment>\n        );\n    }\n}\n\nexport default SubmitInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass ButtonInput extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    handleClick(event){\n        this.props.action();\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                     <input\n                        type='button'\n                        name={this.props.name.toLowerCase()}\n                        onClick={this.handleClick.bind(this)}\n                        {...this.props.attributes}\n                    />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ButtonInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass DateInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value.split('T')[0]\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}::\n                    <input\n                        type='date'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DateInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass EmailInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='email'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EmailInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass NumberInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value:this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.props.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NumberInput;","import React, {Component} from \"react\";\nimport '../App.css';\n\n\nclass TimeIntervalInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            value: this.props.value?this.props.value:''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n        return (\n            <fragment>\n                <label>\n                    {this.props.name}:\n                    <input\n                        type='number'\n                        name={this.props.name.toLowerCase()}\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        {...this.props.attributes}\n                    />\n                </label>\n            </fragment>\n        );\n    }\n}\n\nexport default TimeIntervalInput;","import TextInput from '../InputComponents/TextInput';\nimport PasswordInput from '../InputComponents/PasswordInput';\nimport ResetInput from '../InputComponents/ResetInput';\nimport CheckboxInput from '../InputComponents/CheckboxInput';\nimport SubmitInput from '../InputComponents/SubmitInput';\nimport ButtonInput from '../InputComponents/ButtonInput';\nimport DateInput from '../InputComponents/DateInput';\nimport EmailInput from '../InputComponents/EmailInput';\nimport NumberInput from '../InputComponents/NumberInput';\nimport TimeIntervalInput from '../InputComponents/TimeIntervalInput'\n\nconst InputTypes = Object.freeze({\n    TEXT: TextInput,\n    PASSWORD: PasswordInput,\n    SUBMIT: SubmitInput,\n    RESET: ResetInput,\n    CHECKBOX: CheckboxInput,\n    BUTTON: ButtonInput,\n    DATE: DateInput,\n    EMAIL: EmailInput,\n    NUMBER: NumberInput,\n    TIMEINTERVAL: TimeIntervalInput\n});\n//TODO 181110: make a StandardForm object that creates form inputFields for each of these types\n//TODO 181110: put that in the TaskForm section\n\nexport default InputTypes;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass FormBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n\n    }\n\n\n\n    render() {\n         return <form id={this.props.id}>\n            {\n\n                this.props.inputFields.map(input=>{\n                    const propsWithKey = Object.assign({\n                        key:\"\" + this.props.task._id + input.props.name,\n                        value: this.props.task[input.props.name]}\n                        ,input.props);\n                    return input.content?\n                        React.createElement(input.type, propsWithKey,input.content):\n                        React.createElement(input.type, propsWithKey);\n                })\n            }\n        </form>\n    }\n}\n\nexport default FormBuilder;\n","import fetchUtil from '../util/fetchUtil'\n\n//TODO 181209: I have to get the token from somewhere.\n\n/**\n * Create a task\n * @param task: the task to create\n * @param parentType: \"Task\" or \"Category\"\n * @param parentId: the id of the parent\n */\nconst TaskApiCalls = {\n    createTask: (task, parentType, parentId, token, callback)=>{\n        fetchUtil.postData(parentType +\"/\"+parentId,token,task,callback);\n    },\n    modifyTask: (task, token, callback)=> {\n        fetchUtil.putData(task._id.toString(),token,task,callback);\n    }\n}\n\nexport default TaskApiCalls\n","import React, {Component} from 'react';\nimport '../App.css';\nimport InputTypes from '../Enums/InputTypes';\nimport FormBuilder from './FormBuilder';\nimport TaskApiCalls from '../ApiCallFunctions/TaskApiCalls'\nimport formUtil from '../util/formUtil'\nimport fetchUtil from '../util/fetchUtil'\n\nclass TaskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputFields: [\n                {props: {name: 'name',}, type: InputTypes.TEXT},\n                {props: {name: 'description'}, type: InputTypes.TEXT},\n                {props: {name: 'deadline'}, type: InputTypes.DATE},\n                {props: {name: 'startDate'}, type: InputTypes.DATE},\n                {props: {name: 'external'}, type: InputTypes.CHECKBOX},\n                {props: {name: 'estTime'}, type: InputTypes.NUMBER},\n                {props: {name: 'Done', action: this.submitAction}, type: InputTypes.SUBMIT}\n            ],\n\n\n         };\n\n\n\n\n    }\n\n    submitAction=()=>{\n        const form = document.getElementById(\"form\"+this.props.id);\n        const task = formUtil.formInputsToJsonObject(form);\n        if(this.props.modify){\n            TaskApiCalls.modifyTask(task,this.props.xAccessToken, resp=>console.log(resp));\n        } else {\n            const parentType = this.props.task.parentType;\n            const parentId = this.props.task.parent;\n            TaskApiCalls.createTask(task,parentType,parentId,this.props.xAccessToken, resp=>console.log(resp));\n        }\n    }\n\n\n    render() {\n        return <div className=\"taskInput\" id={\"form\"+this.props.id}>\n            <FormBuilder\n                inputFields={this.state.inputFields}\n                handlers = {this.state.handlers}\n                task = {this.props.task}\n            />\n        </div>\n    }\n}\n\nexport default TaskForm;\n","import React from \"react\";\n\nconst UserContext = React.createContext({});\n\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;","import React, {Component} from 'react';\nimport '../App.css';\nimport DisplayStates from '../Enums/DisplayStates'\nimport Task from \"../BranchComponents/Task\";\nimport TaskForm from \"../FormComponents/TaskForm\";\nimport {UserConsumer} from \"../UserContext\";\n\nclass TaskContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayState:DisplayStates.COLLAPSED\n        };\n    }\n\n    expandCollapse=()=>{\n        this.state.displayState===DisplayStates.COLLAPSED?\n        this.setState({displayState:DisplayStates.EXPANDED})\n        : this.setState({displayState:DisplayStates.COLLAPSED});\n    }\n\n\n    input=()=>{\n        this.setState({displayState:DisplayStates.INPUT});\n    };\n\n    update=(data)=>{\n        // fetchUtil.postData()\n    };\n\n    //TODO 181209: I think I need to put the UserProvider around the TaskForm here so TaskForm can get the Token\n\n    render() {\n        return (\n            this.state.displayState!==DisplayStates.INPUT?\n            <Task data={this.props.data} buttonAction = {this.expandCollapse} editAction = {this.input} displayState = {this.state.displayState}/>\n            :<UserConsumer>{context=><TaskForm task={this.props.data} xAccessToken = {context} modify = {this.props.modify}/>}</UserConsumer>\n        )\n    }\n}\n\nexport default TaskContainer;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport TaskContainer from '../ContainerComponents/TaskContainer';\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n        };\n    }\n\n\n    render() {\n        return (\n            <div className=\"TaskList\" id={this.props.catId+\"Tasks\"}>\n                {\n                    this.props.data.map(\n                        tsk=>{\n                            return <TaskContainer data = {tsk} modify = {true}/>\n\n                        }\n                    )\n                }\n            </div>\n        );\n\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport '../App.css';\nimport TaskList from \"../ListComponents/TaskList\";\nimport EventList from \"../ListComponents/EventList\";\n\n\nfunction Category(props){\n    return(\n        <div className=\"category\" id={props.data._id}>\n            <h2 className = \"catName\">\n                {props.data.name}\n            </h2>\n            <h3>Tasks</h3>\n            <TaskList data = {props.data.children.tasks} catId={props.data._id} />\n            <h3 >Events</h3>\n            <EventList data={props.data.children.events} catId={props.data._id} />\n        </div>\n    );\n}\n\nexport default Category;","import React, { Component } from 'react';\nimport '../App.css';\nimport fetchUtil from '../util/fetchUtil';\nimport Category from '../BranchComponents/Category';\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            components: [],\n            fetchOptions: {\n                method: 'get'\n            },\n            headers: new Headers({\n                'x-access-token': this.props['xAccessToken']\n            }),\n            categories: undefined\n        };\n    }\n\n\n    render() {\n        if (!this.state.categories) {\n            fetchUtil.getData(\n                'category/',\n                this.props.xAccessToken,\n                responseData => {\n                    this.setState({categories:responseData})\n                }\n            );\n            return (\n                <div>loading gif...</div>\n            )\n        } else {\n            return (\n                <div className=\"categoryList\" id=\"categoryRoot\">\n                    {\n                        this.state.categories.map(\n                            cat=>{\n                                return (\n                                    <Category id = {cat._id} data = {cat}/>\n                                )\n                            }\n                        )\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default CategoryList;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.login(this.state.username,this.state.password);\n        event.preventDefault();\n    }\n\n\n    render(){\n        return(\n            <form id={this.props.id}>\n                Enter your username and password\n                <label>\n                    Username:\n                    <input\n                        type='text'\n                        name='username'\n                        id='usernameInput'\n                        value={this.state.username}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <label>\n                    Password:\n                    <input\n                        type='password'\n                        name='password'\n                        id='passwordInput'\n                        value={this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                </label>\n                <input\n                    type='submit'\n                    name = 'submit'\n                    id='submitInput'\n                    value = 'submit'\n                    onClick={this.handleSubmit}\n                    />\n            </form>\n        )\n    }\n\n}\n\nexport default LoginForm;","import React, { Component } from 'react';\nimport formUtil from './util/formUtil'\nimport CategoryList from './ListComponents/CategoryList';\nimport LoginForm from './FormComponents/LoginForm';\nimport fetchUtil from './util/fetchUtil';\nimport {UserProvider} from './UserContext';\n\n//TODO 181013: persist local storage like here: https://stackoverflow.com/questions/45111159/how-can-i-use-localstorage-to-maintain-state-after-a-page-refresh-in-react\n//TODO 181028: put username and xAccessToken in context so I can use it from anywhere\nclass User extends Component {\n\n   \n\n    constructor(props){\n        super(props);\n        this.state={\n            username: undefined,\n            xAccessToken: undefined,\n            apiUrl: \"https://insolent-preclude.herokuapp.com\",\n            uiUrl: 'http://localhost:8080'\n        };\n        this.login=this.login.bind(this);\n    }\n\n    componentDidMount(){\n\n    }\n\n\n    login(username, password){\n        const data = formUtil.composeXWwwFormUrlEncoded(\n            {\n                username:username,\n                password:password\n            }\n        );\n        fetchUtil.postData(\n            'account/login',\n            null,\n            data,\n            responseData=>{\n                this.setState({xAccessToken:responseData.token});\n            }\n        );\n\n\n    }\n\n\n\n    render(){\n        if(this.state.xAccessToken){\n          return(\n              <div id='userRoot'>\n                  <UserProvider value = {this.state.xAccessToken}>\n                    <CategoryList xAccessToken = {this.state.xAccessToken}/>\n                  </UserProvider>\n              </div>)\n        } else {\n           return (<LoginForm login = {this.login} apiUrl = {this.state.apiUrl}/>)\n        }\n    }\n\n\n}\n\nexport default User;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User'\n\nclass App extends Component {\n  render() {\n    return (\n        <User/>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport unregister from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n//registerServiceWorker();\n//unregister();\n"],"sourceRoot":""}